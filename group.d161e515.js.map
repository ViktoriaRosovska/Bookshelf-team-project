{"mappings":"C,A,W,S,E,C,E,O,G,E,U,C,E,O,C,C,C,IkEwFc,EEzEuB,EAAQ,EHuCjC,EF9CR,EACA,EAkFA,EErCQ,EAwCU,EI5FlB,EACA,EhD+C+B,EEjBA,E,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,Q,S,C,C,C,E,O,c,C,E,O,C,e,C,I,W,O,C,E,I,S,C,E,O,E,C,E,W,C,E,a,C,C,EtBjCnC,CAAA,aAEA,IAkCA,EAlCI,EAAY,CAAC,EAkCjB,EAjCA,SAA4B,CAAE,EAC5B,IAAI,EAAQ,CAAS,CAAC,EAAG,CAKzB,OAJK,IACH,EAAQ,AAKZ,WACE,GAAI,CACF,MAAM,AAAI,OACZ,CAAE,MAAO,EAAK,CACZ,IAAI,EAAU,AAAC,CAAA,GAAK,EAAI,KAAI,AAAJ,EAAO,KAAA,CAAM,oEACrC,GAAI,EAGF,MAMI,AAAA,CAAA,GANc,CAAO,CAAC,EAAE,AAMnB,EAAK,OAAA,CAAQ,0EAA2E,MAAQ,GAJ7G,CACA,MAAO,GACT,IAhBI,CAAS,CAAC,EAAG,CAAG,GAEX,CACT,C,G,E,S,E,S,E,S,I,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,SGAM,EAAiB,SAAS,aAAA,CAAc,kBACxC,EAAM,IAAI,EAAA,UAAS,CAEK,SAAA,IAAA,MAAA,AAAA,CAAA,EAAf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,SAA4B,CAAQ,EAC3C,IACA,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EADM,MAAA,C,EAAM,EAAI,oBAAA,CAAqB,G,A,M,EAC7B,MAAA,C,EAAM,AADR,EAAN,IAAA,GACkB,IAAJ,C,A,M,E,OACpB,QAAQ,GAAA,CADF,EAAQ,EAAR,IAAA,IAgBN,EAAe,SAAA,CAbN,4GAUK,MAAA,CARV,EACC,GAAA,CAAI,SAHP,CAAA,EAGU,IAAA,EAAA,EAAA,KAAA,CAAO,EAAA,EAAA,UAAA,CAAY,EAAA,EAAA,MAAA,CAAQ,EAAA,EAAA,GAA3B,CACN,MAAQ,6BACqB,MAAA,CADO,EAAI,2CACS,MAAA,CAApB,EAAW,WAClB,MAAA,CAD2B,EAAM,oCAE/B,MAAA,CADF,EAAM,yCACG,MAAA,CAAP,EAAO,iBAEjC,GACC,IAAA,CAAK,IAAI,e,C,E,A,C,EAIhB,E,EAnB8B,KAAA,CAAA,IAAA,CAAA,U,CDV9B,IAAM,EAAM,IAAI,EAAA,UAAS,CAEnB,EAAiB,SAAS,aAAA,CAAc,wBAI/B,SAAA,IAAA,MAAA,AAAA,CAAA,EAAf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,W,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EACiB,MAAA,C,EAAM,EAAI,sBAAJ,G,A,M,EACN,MAAA,C,EAAM,AADN,EAAP,IAAA,GACkB,IAAL,C,A,M,EACnB,MAAA,C,EADa,EAAP,IAAA,G,A,C,EAGV,EAAA,EALe,KAAA,CAAA,IAAA,CAAA,U,CAOA,SAAA,IAAA,MAAA,AAAA,CAAA,EAAf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,WAEc,IACA,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EADa,O,E,I,C,I,C,C,E,G,E,EAAA,C,EAAM,AATlB,WAAA,OAAA,EAAA,KAAA,CAAA,IAAA,CAAA,U,I,A,M,E,OAUD,EAAS,AADI,EAAb,IAAA,GACoB,GAAA,CAAI,SAAC,CAAzB,EAAiC,MAAC,wCAAqD,MAAA,CAAd,EAAI,SAAA,CAAU,QAAQ,GAAA,IAAA,CAAK,IAC1G,EAAe,kBAAA,CAAmB,YAAa,G,C,E,E,A,M,E,OAE/C,QAAQ,GAAA,CADH,EAAA,IAAA,I,C,E,E,A,M,E,M,C,E,A,C,EAGb,EAAA,EARe,KAAA,CAAA,IAAA,CAAA,U,CAiBA,SAAA,IAAA,MAAA,AAAA,CAAA,EAAf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,SAA4C,CAAC,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EACzC,GAAI,AAAsB,OAAtB,EAAE,MAAA,CAAO,QAAA,CACT,MADJ,C,E,CAeA,OAZA,QAAQ,GAAA,CAAI,EAAE,MAAd,EAEI,EAAE,MAAA,CAAO,SAAA,CAAU,QAAA,CAAS,UAC5B,EAAE,MAAA,CAAO,SAAA,CAAU,MAAA,CAAO,WAI1B,AADc,SAAS,gBAAA,CAAiB,6BAClC,OAAA,CAAQ,SAAC,CAAf,EAAsB,OAAA,EAAG,SAAA,CAAU,MAAA,CAAO,S,GAC1C,EAAE,MAAA,CAAO,SAAA,CAAU,GAAA,CAAI,WAI3B,C,EAAM,ACpCiC,SAAA,CAAQ,EAArB,OAAA,EAAA,KAAA,CAAA,IAAA,CAAA,U,EDoCP,EAAE,MAAA,CAAO,WAAtB,E,A,M,E,OAAN,EAAA,IAAA,G,C,E,A,C,EACJ,EAAA,EAjBe,KAAA,CAAA,IAAA,CAAA,U,CAPX,KAEA,AAZW,WAAA,EAAA,KAAA,CAAA,IAAA,CAAA,U,IAcX,EAAe,gBAAA,CAAiB,QAGrB,SAA6B,CAAC,EAA9B,OAAA,EAAA,KAAA,CAAA,IAAA,CAAA,U,I,I,E,E,S,E,E,S,E,E,SE/BT,EAAM,IAAI,EAAA,UAAS,CAEnB,EAAiB,SAAS,aAAA,CAAc,qBAE/B,SAAA,IAAA,MAAA,AAAA,CAAA,EAAf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,W,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EACmB,MAAA,C,EAAM,EAAI,qBAAJ,G,A,M,EACH,MAAA,C,EAAM,AADT,EAAX,IAAA,GAC6B,IAAT,C,A,M,EAC1B,MAAA,C,EADoB,EAAd,IAAA,G,A,C,EAER,EAAA,EAJe,KAAA,CAAA,IAAA,CAAA,U,CA4BA,SAAA,IAAA,MAAA,AAAA,CAAA,EAAf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,WACM,IAAA,EACE,EAED,EAAA,EAAA,EAAA,EAAA,EAAI,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EAFQ,OADb,EAAiB,GACJ,C,EAAM,AA9BV,WAAA,OAAA,EAAA,KAAA,CAAA,IAAA,CAAA,U,I,A,M,EA+Bb,QAAQ,GAAA,CADF,EAAW,EAAX,IAAA,IAED,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAK,EAAgB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAA,CAAhB,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAS,EAAJ,EAAI,KAAA,CACP,GA1BK,yEAIC,MAAA,CAFuB,AAwBc,EAxBL,SAAA,CAAU,kEAYhC,MAAA,CAVV,AAsBqC,EAtB5B,KAAA,CACR,GAAA,CAAI,SAAA,CALb,EAMU,MAAQ,yDAE2B,MAAA,CADO,EAAK,GAAA,CAAI,oDACS,MAAA,CAAzB,EAAK,UAAA,CAAW,WACvB,MAAA,CADgC,EAAK,KAAA,CAAM,gDAEzC,MAAA,CADF,EAAK,KAAA,CAAM,mDACG,MAAA,CAAZ,EAAK,MAAA,CAAO,2CAG5C,GACC,IAAA,CAAK,IAAI,oG,C,M,E,CAWb,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,C,OAGL,EAAe,SAAA,CAAY,E,C,E,A,C,EAC7B,EAAA,EARe,KAAA,CAAA,IAAA,CAAA,U,CAWX,KACF,AAZa,WAAA,EAAA,KAAA,CAAA,IAAA,CAAA,U,IAab,MAAA,GAAA,EAAgB,gBAAA,CAAiB,QAAS,IAY5C,IAAM,EAAkB,SAAS,aAAA,CAAc,qBAIhC,SAAA,EAAkB,CAAC,EAAnB,OAAA,EAAA,KAAA,CAAA,IAAA,CAAA,U,CAAA,SAAA,IAAA,MAAA,AAAA,CAAA,EAAf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,SAAiC,CAAC,EAI1B,IAAA,EAEE,EAKA,EAEA,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EAZR,GAAI,AAAsB,WAAtB,EAAE,MAAA,CAAO,QAAA,CACX,MADF,C,E,CAII,GAAA,CAAA,AADE,CAAA,EAAS,EAAE,MAAX,AAAA,EACK,OAAA,CAAQ,yBAAf,MAAA,C,E,E,CAKU,OAHZ,QAAQ,GAAA,CADF,EAAW,EAAO,OAAA,CAAQ,QAA1B,EAIM,C,EAAM,EAAI,oBAAA,CAAqB,G,A,M,EAC7B,MAAA,C,EAAM,AADR,EAAN,IAAA,GACkB,IAAJ,C,A,M,EACpB,QAAQ,GAAA,CADF,EAAQ,EAAR,IAAA,IAEA,EAAmB,EAAM,GAAA,CAAI,SAA7B,CAAA,EAA+B,IAAA,EAAA,EAAA,KAAA,CACjC,EAAA,EAAA,UAAA,CACA,EAAA,EAAA,MAAA,CACF,EAAA,EAAA,GAHmC,CAOlC,OAFD,EAAgB,WAAA,CAAc,EAC9B,QAAQ,GAAA,CAAI,EAAgB,WAA5B,EACU,gCACE,MAAA,CAD6B,EAAI,wBACb,MAAA,CAApB,EAAW,WACjB,MAAA,CAD0B,EAAM,kBAEjC,MAAA,CADC,EAAM,oBACA,MAAA,CAAP,EAAO,gBAEd,GACC,IAAA,CAAK,IACN,EAAe,SAAA,CAAY,E,E,K,C,C,M,E,M,C,E,A,C,EAE9B,EAAA,EA7Bc,KAAA,CAAA,IAAA,CAAA,U,CAFf,EAAe,gBAAA,CAAiB,QAAS,G,I,E,E,S,E,E,S,E,E,S,E,C,EE7DzC,EAAiB,AAAA,EAAA,SAAA,YAAA,CAA6C,SAAW,AAAA,EAAA,SAAA,OAAA,CAA6C,S,I,E,C,ECAtH,EAAiB,AAAA,EAAA,SAAA,YAAA,CAA6C,SAAW,AAAA,EAAA,SAAA,OAAA,CAA6C,S,I,E,C,ECAtH,EAAiB,AAAA,EAAA,SAAA,YAAA,CAA6C,SAAW,AAAA,EAAA,SAAA,OAAA,CAA6C,S,I,E,C,ECAtH,EAAiB,AAAA,EAAA,SAAA,YAAA,CAA6C,SAAW,AAAA,EAAA,SAAA,OAAA,CAA6C,S,I,E,C,ECAtH,EAAiB,AAAA,EAAA,SAAA,YAAA,CAA6C,SAAW,AAAA,EAAA,SAAA,OAAA,CAA6C,S,I,E,C,ECAtH,EAAiB,AAAA,EAAA,SAAA,YAAA,CAA6C,SAAW,AAAA,EAAA,SAAA,OAAA,CAA6C,SNAtH,IAAM,EAAW,SAAS,aAAA,CAAc,aAGlC,EAAW,SAAS,aAAA,CAAc,kBAClC,EAAgB,SAAS,aAAA,CAAc,uBACvC,EAAmB,SAAS,aAAA,CAAc,uBAC1C,EAAqB,SAAS,aAAA,CAAc,iBAI5C,EAAU,IAAI,EAAA,UAAS,CAUvB,EAAc,eAChB,EAAa,EAAE,CACf,EAAa,CAAC,EAEd,IACF,EAAc,gBAAA,CAAiB,QA8IjC,WACE,IAAM,EAAiB,KAAK,KAAA,CAAM,aAAa,OAAA,CAAQ,IACjD,EAAa,CACf,CAAC,GAAkB,AAA0B,IAA1B,EAAe,MAAA,EAIpC,EAAe,IAAA,CAAK,GACpB,aAAa,OAAA,CAAQ,EAAa,KAAK,SAAA,CAAU,MAJjD,EAAW,IAAA,CAAK,GAChB,aAAa,OAAA,CAAQ,EAAa,KAAK,SAAA,CAAU,KAMnD,EAAmB,WAAA,CACjB,8HACF,IACF,GA3JE,EAAiB,gBAAA,CAAiB,QA6JpC,WACE,EAAmB,WAAA,CAAc,GAEjC,IAAM,EAAa,EAAW,EAA9B,CACM,EAAa,KAAK,KAAA,CAAM,aAAa,OAAA,CAAQ,IAC7C,EAAgB,EAAW,SAAA,CAAU,SAAA,CAA3C,EAAkD,OAAA,EAAI,EAAA,GAAO,C,GAC7D,EAAW,MAAA,CAAO,EAAe,GACjC,aAAa,OAAA,CAAQ,EAAa,KAAK,SAAA,CAAU,IACjD,IACF,GArKE,EAAS,gBAAA,CAAiB,QAW5B,SAAmB,CAAC,EAClB,GACE,AAAsB,WAAtB,EAAE,MAAA,CAAO,QAAA,EACT,AAAsB,OAAtB,EAAE,MAAA,CAAO,QAAA,EACT,AAAsB,QAAtB,EAAE,MAAA,CAAO,QAAA,EACT,AAAsB,OAAtB,EAAE,MAAA,CAAO,QAAA,EAGX,IAAM,EAAK,EAAE,MAAA,CAAO,OAAA,CAAQ,MAAM,EAAlC,CAZA,EAAQ,SAAA,CAAU,MAAA,CAAO,aACzB,EAAgB,SAAA,CAAU,MAAA,CAAO,aAajC,AAGa,SAAY,CAAM,EAAlB,EAAA,KAAA,CAAA,IAAA,CAAA,U,EAHD,GACd,IAnBA,IAAM,EAAU,SAAS,aAAA,CAAc,qBACjC,EAAkB,SAAS,aAAA,CAAc,wBAoBhC,SAAA,IAAA,MAAA,AAAA,CAAA,EAAf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,SAA2B,CAAM,EAGvB,IAAA,EAIC,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EANT,EAAS,SAAA,CAAY,G,E,K,C,C,M,EAEN,O,E,I,C,I,C,C,E,G,E,EAAA,C,EAAM,AAUR,SAAc,CAAM,EAApB,OAAA,GAAA,KAAA,CAAA,IAAA,CAAA,U,EAVsB,G,A,M,MAsD7B,EACA,EACA,EACA,EACA,EACA,EACA,EAEF,EAME,EAjEJ,OAHM,EAAO,EAAP,IAAA,GACN,KAqDI,EAAiB,AApDR,EAoDa,UAA5B,CACM,EAAY,AArDH,EAqDQ,KAAvB,CACM,EAAa,AAtDJ,EAsDS,MAAxB,CACM,EAAe,AAvDN,EAuDW,SAAS,CAAC,EAAE,CAAC,GAAvC,CACM,EAAmB,AAxDV,EAwDe,SAAS,CAAC,EAAE,CAAC,GAA3C,CACM,EAAiB,AAzDR,EAyDa,SAAS,CAAC,EAAE,CAAC,GAAzC,CAGI,EAFE,EAAkB,AA1DT,EA0Dc,WAA7B,CAGwB,KAApB,GACF,CAAA,EACE,4LAFJ,EAKM,EAAO,mBAGwB,MAAA,CAFzB,EAAe,yHAGW,MAAA,CADD,EAAU,iDAEZ,MAAA,CADG,EAAW,6CAEmB,MAAA,CADjC,EAAkB,8EAMjD,MAAA,CALgE,EAAa,uFAM7E,MAAA,CADA,EAAA,GAAU,cAGN,MAAA,CAFJ,EAAA,GAAY,sBAKuB,MAAA,CAH/B,EAAA,GAAU,+EAQd,MAAA,CALmC,EAAiB,sFAMpD,MAAA,CADA,EAAA,GAAa,cAGT,MAAA,CAFJ,EAAA,GAAe,sBAKoB,MAAA,CAH/B,EAAA,GAAa,mFAQjB,MAAA,CALmC,EAAe,sFAMlD,MAAA,CADA,EAAA,GAAY,cAGR,MAAA,CAFJ,EAAA,GAAc,sBAEE,MAAA,CAAZ,EAAA,GAAY,4DAMpB,EAAS,SAAA,CAAY,EA3GnB,C,EAAO,E,A,M,EAGP,MADA,QAAQ,KAAA,CAAM,QADP,EAAA,EAAA,IAAA,IAED,C,M,E,M,C,E,A,C,EAEV,EAAA,EAXe,KAAA,CAAA,IAAA,CAAA,U,CAaA,SAAA,KAAA,MAAA,AAAA,CAAA,GAAf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,SAA6B,CAAM,EAGzB,IACA,EAaC,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EAdU,O,E,I,C,I,C,C,E,G,E,EADjB,EAAa,CAAC,EACG,C,EAAM,EAAQ,aAAA,CAAc,G,A,M,EAa7C,OAXA,EAAa,CACX,WAAY,AAFR,CAAA,EAAO,AADI,EAAX,IAAA,GACgB,IAAhB,AAAA,EAEa,UAAjB,CACA,MAAO,EAAK,KAAZ,CACA,OAAQ,EAAK,MAAb,CACA,aAAc,EAAK,SAAS,CAAC,EAAE,CAAC,GAAhC,CACA,iBAAkB,EAAK,SAAS,CAAC,EAAE,CAAC,GAApC,CACA,eAAgB,EAAK,SAAS,CAAC,EAAE,CAAC,GAAlC,CACA,UAAW,EAAK,SAAhB,CACA,GAAI,EAAK,GAAT,CACA,YAAa,EAAK,WAAlB,AACF,EACA,C,EAAO,E,A,M,EAGP,MADA,QAAQ,KAAA,CAAM,QADP,EAAA,EAAA,IAAA,IAED,C,M,E,M,C,E,A,C,EAEV,EAAA,EArBe,KAAA,CAAA,IAAA,CAAA,U,CAuBf,SAAS,KACP,IAAM,EAAa,KAAK,KAAA,CAAM,aAAa,OAAA,CAAQ,IAC7C,EAAW,EAAW,EAA5B,CAEA,GAAI,AAAC,GAAc,AAAsB,IAAtB,EAAW,MAAA,CAKV,EAAW,IAAA,CAAK,SAAA,CAAlC,EAAyC,OAAA,EAAI,EAAA,GAAO,C,IAKlD,EAAc,KAAA,CAAM,OAAA,CAAU,OAC9B,EAAiB,KAAA,CAAM,OAAA,CAAU,UAJjC,EAAc,KAAA,CAAM,OAAA,CAAU,QAC9B,EAAiB,KAAA,CAAM,OAAA,CAAU,YARO,CAC1C,EAAc,KAAA,CAAM,OAAA,CAAU,QAC9B,EAAiB,KAAA,CAAM,OAAA,CAAU,OACjC,MACF,CAUF,CA0FA,IAAM,GAAW,SAAS,aAAA,CAAc,wBAClC,GAAQ,SAAS,aAAA,CAAc,UAC/B,GAAc,SAAS,cAAA,CAAe,eAE5C,SAAS,KACP,GAAS,SAAA,CAAU,GAAA,CAAI,aACvB,GAAM,SAAA,CAAU,GAAA,CAAI,aACpB,SAAS,IAAA,CAAK,SAAA,CAAU,MAAA,CAAO,cAC/B,SAAS,mBAAA,CAAoB,UAAW,GAC1C,CAeA,SAAS,GAAgB,CAAK,EACV,WAAd,EAAM,GAAA,EACR,IAEJ,CAEI,KAEF,GAAS,gBAAA,CAAiB,QApB5B,SAAmC,CAAK,EAClC,EAAM,MAAA,GAAW,IACnB,IAEJ,GAiBE,GAAY,gBAAA,CAAiB,QAd/B,WACE,IACF,IOvNA,IAAM,GAAM,SAAS,aAAA,CAAc,sBAG7B,GAAQ,SAAS,aAAA,CAAc,qBAG/B,GAAW,SAAS,aAAA,CAAc,+BAClC,GAAmB,SAAS,aAAA,CAAc,qBAGhD,SAAS,KACP,GAAM,KAAA,CAAM,OAAA,CAAU,OACtB,GAAiB,KAAA,CAAM,OAAA,CAAU,MACnC,CAEI,KAEF,GAAI,OAAA,CAAU,WACZ,GAAM,KAAA,CAAM,OAAA,CAAU,QACtB,GAAiB,KAAA,CAAM,OAAA,CAAU,OACnC,EAGA,GAAS,OAAA,CAAU,GAGnB,OAAO,OAAA,CAAU,SAAU,CAAK,EAC1B,CAAA,EAAM,MAAA,GAAW,IAAS,EAAM,MAAA,GAAW,EAAA,GAC7C,IAEJ,EAGA,OAAO,gBAAA,CAAiB,UAAW,SAAU,CAAK,EAC9B,WAAd,EAAM,GAAA,EACR,IAEJ,I,E,S,E,SCfF,AAvBkB,CAAA,CACd,IAAK,SAAS,aAAA,CAAc,cAC5B,KAAA,WACI,IAAI,CAAC,GAAA,CAAI,SAAA,CAAU,MAAA,CAAO,iBAC9B,EACA,KAAA,WACI,IAAI,CAAC,GAAA,CAAI,SAAA,CAAU,GAAA,CAAI,iBAC3B,EACA,iBAAA,W,I,E,I,AACQ,CAAA,IAAI,CAAC,GAAA,GACL,OAAO,gBAAA,CAAiB,SAAU,WAE9B,AADgB,CAAA,OAAO,OAAA,EAAW,SAAS,eAAA,CAAgB,SAA3D,AAAA,EACU,IAAM,EAAK,IAAA,GAAS,EAAK,IAAnC,EACJ,GACA,IAAI,CAAC,GAAA,CAAI,OAAA,CAAU,WACf,OAAO,QAAA,CAAS,CACZ,IAAK,EACL,SAAU,QACd,EACJ,EAER,CACJ,CAAA,EACU,gBAAV,G,I,E,E,S,G,E,S,G,E,SgBvBO,SAAS,GAAiB,CAAG,CAAE,CAAG,CAAE,CAAK,EAK5C,OAJI,KAAO,EACP,OAAO,cAAA,CAAe,EAAK,EAAK,CAAE,MAAO,EAAO,WAAY,CAAA,EAAM,aAAc,CAAA,EAAM,SAAU,CAAA,CAAK,GAClG,CAAG,CAAC,EAAI,CAAG,EAEX,CACX,C,I,G,E,S,E,E,S,E,E,S,G,E,S,G,E,S,G,E,S,G,E,S,E,E,SOaG,GAAA,EAAA,S,G,E,S,G,E,S,G,E,S,G,E,S,G,E,S,G,E,S,G,E,SwBjBI,SAAS,GAAW,CAAM,CAAE,CAAI,CAAE,CAAK,EAe1C,MAAO,CAd6B,GAAhC,AAAA,CAAA,EAAA,GAAA,4BAA2B,AAA3B,IAA6C,QAAQ,SAAzD,CAEiB,SAAmB,CAAM,CAAE,CAAI,CAAE,CAAK,EAC/C,IAAI,EAAI,CAAC,KAAK,CACd,EAAE,IAAA,CAAK,KAAA,CAAM,EAAG,GAEhB,IAAI,EAAW,GADG,CAAA,SAAS,IAAA,CAAK,KAAA,CAAM,EAAQ,EAA9C,EAKA,OAFI,GAAO,AAAA,CAAA,EAAA,GAAA,iBAAgB,AAAhB,EAAkB,EAAU,EAAM,SAA7C,EAEO,CACX,GAGc,KAAA,CAAM,KAAM,UAClC,C,I,G,E,S,G,E,SDbO,SAAS,GAAmB,CAAK,EACpC,IAAI,EAAS,AAAe,YAAf,OAAO,IAAqB,IAAI,IAAQ,KAAA,EAiBrD,MAAO,AAhBP,CAAA,GAAqB,SAAS,CAAK,EAC/B,GAAI,AAAU,OAAV,GEPD,AAAwD,KAAxD,SAAS,QAAA,CAAS,IAAA,CFOsB,GEPb,OAAA,CAAQ,iBFOa,OAAO,EAC1D,GAAI,AAAiB,YAAjB,OAAO,EAAsB,MAAM,AAAI,UAAU,sDACrD,GAAI,AAAkB,KAAA,IAAX,EAAwB,CAC/B,GAAI,EAAO,GAAA,CAAI,GAAQ,OAAO,EAAO,GAAA,CAAI,GACzC,EAAO,GAAA,CAAI,EAAO,EACtB,CAEA,SAAS,IACL,OAAO,AAAA,GAAW,EAAO,UAAW,AAAA,CAAA,EAAA,GAAA,iBAAgB,AAAhB,EAAkB,IAAI,EAAE,WAA5D,CACJ,CAGA,OAFA,EAAQ,SAAA,CAAY,OAAO,MAAA,CAAO,EAAM,SAAA,CAAW,CAAE,YAAa,CAAE,MAAO,EAAS,WAAY,CAAA,EAAO,SAAU,CAAA,EAAM,aAAc,CAAA,CAAK,CAAE,GAErI,AAAA,CAAA,EAAA,GAAA,iBAAgB,AAAhB,EAAkB,EAAS,EACtC,CAAA,EAE0B,EAC9B,C,I,G,E,SGvBI,GAA2B,CAAC,EAUhC,SAAS,KACL,MAAM,AAAI,MAAM,kCACpB,CACA,SAAS,KACL,MAAM,AAAI,MAAM,oCACpB,CAqBA,SAAS,GAAW,CAAG,EACnB,GAAI,IAAqB,WAErB,OAAO,WAAW,EAAK,GAG3B,GAAK,AAAA,CAAA,IAAqB,IAAoB,CAAC,CAAA,GAAqB,WAEhE,OADA,EAAmB,WACZ,WAAW,EAAK,GAE3B,GAAI,CAEA,OAAO,EAAiB,EAAK,EACjC,CAAE,MAAM,EAAE,CACN,GAAI,CAEA,OAAO,EAAiB,IAAA,CAAK,KAAM,EAAK,EAC5C,CAAE,MAAM,EAAE,CAEN,OAAO,EAAiB,IAAA,CAAK,IAAI,CAAE,EAAK,EAC5C,CACJ,CAGJ,EA5CC,AAAA,WACG,GAAI,CAEI,EADA,AAAsB,YAAtB,OAAO,WACY,WAEA,EAE3B,CAAE,MAAO,EAAG,CACR,EAAmB,EACvB,CACA,GAAI,CAEI,EADA,AAAwB,YAAxB,OAAO,aACc,aAEA,EAE7B,CAAE,MAAO,EAAG,CACR,EAAqB,EACzB,CACJ,IAqDA,IAAI,GAAQ,EAAE,CACV,GAAW,CAAA,EAEX,GAAa,GAEjB,SAAS,KACA,IAAa,IAGlB,GAAW,CAAA,EACP,EAAa,MAAA,CACb,GAAQ,EAAa,MAAA,CAAO,IAE5B,GAAa,GAEb,GAAM,MAAA,EACN,KAER,CAEA,SAAS,KACL,IAAI,IAGJ,IAAI,EAAU,GAAW,IACzB,GAAW,CAAA,EAGX,IADA,IAAI,EAAM,GAAM,MAAhB,CACM,GAAK,CAGP,IAFA,EAAe,GACf,GAAQ,EAAE,CACH,EAAE,GAAa,GACd,GACA,CAAY,CAAC,GAAW,CAAC,GAFjC,GAKA,GAAa,GACb,EAAM,GAAM,MAAZ,AACJ,CACA,EAAe,KACf,GAAW,CAAA,EACX,AApEJ,SAAyB,CAAM,EAC3B,GAAI,IAAuB,aAEvB,OAAO,aAAa,GAGxB,GAAK,AAAA,CAAA,IAAuB,IAAuB,CAAC,CAAA,GAAuB,aAEvE,OADA,EAAqB,aACd,aAAa,GAExB,GAAI,CAEO,EAAmB,EAC9B,CAAE,MAAO,EAAE,CACP,GAAI,CAEA,OAAO,EAAmB,IAAA,CAAK,KAAM,EACzC,CAAE,MAAO,EAAE,CAGP,OAAO,EAAmB,IAAA,CAAK,IAAI,CAAE,EACzC,CACJ,CAIJ,EA0CoB,GACpB,CAgBA,SAAS,GAAK,CAAG,CAAE,CAAK,EACpB,IAAI,CAAC,GAAA,CAAM,EACX,IAAI,CAAC,KAAA,CAAQ,CACjB,CAWA,SAAS,KAAQ,CA5BjB,GAAQ,QAAA,CAAW,SAAU,CAAG,EAC5B,IAAI,EAAO,AAAI,MAAM,UAAU,MAAA,CAAS,GACxC,GAAI,UAAU,MAAA,CAAS,EACnB,IAAK,IAAI,EAAI,EAAG,EAAI,UAAU,MAAA,CAAQ,IAClC,CAAI,CAAC,EAAI,EAAE,CAAG,SAAS,CAAC,EAAE,CAGlC,GAAM,IAAA,CAAK,IAAI,GAAK,EAAK,IACJ,IAAjB,GAAM,MAAA,EAAiB,IACvB,GAAW,GAEnB,EAOA,GAAK,SAAA,CAAU,GAAA,CAAM,WACjB,IAAI,CAAC,GAAA,CAAI,KAAA,CAAM,KAAM,IAAI,CAAC,KAA1B,CACJ,EACA,GAAQ,KAAA,CAAQ,UAChB,GAAQ,OAAA,CAAU,CAAA,EAClB,GAAQ,GAAA,CAAM,CAAC,EACf,GAAQ,IAAA,CAAO,EAAE,CACjB,GAAQ,OAAA,CAAU,GAClB,GAAQ,QAAA,CAAW,CAAC,EAIpB,GAAQ,EAAA,CAAK,GACb,GAAQ,WAAA,CAAc,GACtB,GAAQ,IAAA,CAAO,GACf,GAAQ,GAAA,CAAM,GACd,GAAQ,cAAA,CAAiB,GACzB,GAAQ,kBAAA,CAAqB,GAC7B,GAAQ,IAAA,CAAO,GACf,GAAQ,eAAA,CAAkB,GAC1B,GAAQ,mBAAA,CAAsB,GAE9B,GAAQ,SAAA,CAAY,SAAU,CAAI,EAAI,MAAO,EAAE,AAAC,EAEhD,GAAQ,OAAA,CAAU,SAAU,CAAI,EAC5B,MAAM,AAAI,MAAM,mCACpB,EAEA,GAAQ,GAAA,CAAM,WAAc,MAAO,GAAI,EACvC,GAAQ,KAAA,CAAQ,SAAU,CAAG,EACzB,MAAM,AAAI,MAAM,iCACpB,EACA,GAAQ,KAAA,CAAQ,WAAa,OAAO,CAAG,ExBtKvC,IAAM4mB,GAAoB,SAAU,CAAW,EAI7C,IAAK,IAFC,EAAgB,EAAE,CACpB,EAAI,EACC,EAAI,EAAG,EAAI,EAAI,MAAA,CAAQ,IAAK,CACnC,IAAI,EAAI,EAAI,UAAA,CAAW,EACnB,CAAA,EAAI,IACN,CAAG,CAAC,IAAI,CAAG,EACF,EAAI,MACb,CAAG,CAAC,IAAI,CAAG,GAAM,EAAK,IACtB,CAAG,CAAC,IAAI,CAAG,AAAK,GAAL,EAAW,KAEtB,AAAC,CAAA,AAAI,MAAJ,CAAI,GAAY,OACjB,EAAI,EAAI,EAAI,MAAA,EACX,AAAA,CAAA,AAAwB,MAAxB,EAAI,UAAA,CAAW,EAAI,EAAK,GAAY,OAGrC,EAAI,MAAY,CAAA,AAAA,CAAA,AAAI,KAAJ,CAAI,GAAW,EAAA,EAAO,CAAA,AAAsB,KAAtB,EAAI,UAAA,CAAW,EAAE,EAAK,EAC5D,CAAG,CAAC,IAAI,CAAG,GAAM,GAAM,IACvB,CAAG,CAAC,IAAI,CAAG,GAAO,GAAM,GAAM,IAC9B,CAAG,CAAC,IAAI,CAAG,GAAO,EAAK,GAAM,IAC7B,CAAG,CAAC,IAAI,CAAG,AAAK,GAAL,EAAW,MAEtB,CAAG,CAAC,IAAI,CAAG,GAAM,GAAM,IACvB,CAAG,CAAC,IAAI,CAAG,GAAO,EAAK,GAAM,IAC7B,CAAG,CAAC,IAAI,CAAG,AAAK,GAAL,EAAW,IAEzB,CACD,OAAO,CACT,EAQM,GAAoB,SAAU,CAAe,EAKjD,IAHA,IAAM,EAAgB,EAAE,CACpB,EAAM,EACR,EAAI,EACC,EAAM,EAAM,MAAA,EAAQ,CACzB,IAAM,EAAK,CAAK,CAAC,IAAM,CACvB,GAAI,EAAK,IACP,CAAG,CAAC,IAAI,CAAG,OAAO,YAAA,CAAa,QAC1B,GAAI,EAAK,KAAO,EAAK,IAAK,CAC/B,IAAM,EAAK,CAAK,CAAC,IAAM,AACvB,CAAA,CAAG,CAAC,IAAI,CAAG,OAAO,YAAA,CAAe,AAAA,CAAA,AAAK,GAAL,CAAK,GAAO,EAAM,AAAK,GAAL,EACpD,MAAM,GAAI,EAAK,KAAO,EAAK,IAAK,CAK/B,IAAM,EACH,AAAE,CAAA,AAAA,CAAA,AAAK,EAAL,CAAK,GAAM,GAAO,AAAC,CAAA,AAAK,GAJlB,CAAK,CAAC,IAAM,AAIM,GAAO,GAAQ,AAAA,CAAA,AAAK,GAHtC,CAAK,CAAC,IAAM,AAG0B,GAAO,EAAM,AAAK,GAFxD,CAAK,CAAC,IAAM,AAE4C,EACjE,KACF,CAAA,CAAG,CAAC,IAAI,CAAG,OAAO,YAAA,CAAa,MAAU,CAAA,GAAK,EAAA,GAC9C,CAAG,CAAC,IAAI,CAAG,OAAO,YAAA,CAAa,MAAU,CAAA,AAAI,KAAJ,CAAI,EAC9C,KAAM,CACL,IAAM,EAAK,CAAK,CAAC,IAAM,CACjB,EAAK,CAAK,CAAC,IAAM,AACvB,CAAA,CAAG,CAAC,IAAI,CAAG,OAAO,YAAA,CACd,AAAA,CAAA,AAAK,GAAL,CAAK,GAAO,GAAQ,AAAA,CAAA,AAAK,GAAL,CAAK,GAAO,EAAM,AAAK,GAAL,EAE3C,CACF,CACD,OAAO,EAAI,IAAA,CAAK,GAClB,EAqBa,GAAiB,CAI5B,eAAgB,KAKhB,eAAgB,KAMhB,sBAAuB,KAMvB,sBAAuB,KAMvB,kBACE,iEAKF,IAAI,cAAY,CACd,OAAO,IAAI,CAAC,iBAAA,CAAoB,KACjC,EAKD,IAAI,sBAAoB,CACtB,OAAO,IAAI,CAAC,iBAAA,CAAoB,KACjC,EASD,mBAAoB,AAAgB,YAAhB,OAAO,KAW3B,gBAAA,SAAgB,CAA4B,CAAE,CAAiB,EAC7D,GAAI,CAAC,MAAM,OAAA,CAAQ,GACjB,MAAM,MAAM,iDAGd,IAAI,CAAC,KAAL,GAQA,IAAK,IANC,EAAgB,EAClB,IAAI,CAAC,qBAAA,CACL,IAAI,CAAC,cAFT,CAIM,EAAS,EAAE,CAER,EAAI,EAAG,EAAI,EAAM,MAAA,CAAQ,GAAK,EAAG,CACxC,IAAM,EAAQ,CAAK,CAAC,EAAE,CAChB,EAAY,EAAI,EAAI,EAAM,MAAhC,CACM,EAAQ,EAAY,CAAK,CAAC,EAAI,EAAE,CAAG,EACnC,EAAY,EAAI,EAAI,EAAM,MAAhC,CACM,EAAQ,EAAY,CAAK,CAAC,EAAI,EAAE,CAAG,EAEnC,EAAW,GAAS,EACpB,EAAW,AAAE,CAAA,AAAQ,EAAR,CAAQ,GAAS,EAAM,GAAS,EAC/C,EAAW,AAAE,CAAA,AAAQ,GAAR,CAAQ,GAAS,EAAM,GAAS,EAC7C,EAAW,AAAQ,GAAR,EAEV,IACH,EAAW,GAEN,GACH,CAAA,EAAW,EADb,GAKF,EAAO,IAAA,CACL,CAAa,CAAC,EAAS,CACvB,CAAa,CAAC,EAAS,CACvB,CAAa,CAAC,EAAS,CACvB,CAAa,CAAC,EAAS,CAE1B,CAED,OAAO,EAAO,IAAA,CAAK,GACpB,EAUD,aAAA,SAAa,CAAa,CAAE,CAAiB,SAG3C,AAAI,IAAI,CAAC,kBAAA,EAAsB,CAAC,EACvB,KAAK,GAEP,IAAI,CAAC,eAAA,CAAgBA,GAAkB,GAAQ,EACvD,EAUD,aAAA,SAAa,CAAa,CAAE,CAAgB,SAG1C,AAAI,IAAI,CAAC,kBAAA,EAAsB,CAAC,EACvB,KAAK,GAEP,GAAkB,IAAI,CAAC,uBAAA,CAAwB,EAAO,GAC9D,EAiBD,wBAAA,SAAwB,CAAa,CAAE,CAAgB,EACrD,IAAI,CAAC,KAAL,GAQA,IAAK,IANC,EAAgB,EAClB,IAAI,CAAC,qBAAA,CACL,IAAI,CAAC,cAFT,CAIM,EAAmB,EAAE,CAElB,EAAI,EAAG,EAAI,EAAM,MAAA,EAAU,CAClC,IAAM,EAAQ,CAAa,CAAC,EAAM,MAAA,CAAO,KAAK,CAGxC,EAAQ,AADI,EAAI,EAAM,MAA5B,CAC0B,CAAa,CAAC,EAAM,MAAA,CAAO,GAAG,CAAG,EAIrD,EAAQ,AADI,EAAA,EAAI,EAAM,MAA5B,CAC0B,CAAa,CAAC,EAAM,MAAA,CAAO,GAAG,CAAG,GAIrD,EAAQ,AADI,EAAA,EAAI,EAAM,MAA5B,CAC0B,CAAa,CAAC,EAAM,MAAA,CAAO,GAAG,CAAG,GAG3D,GAFA,EAAE,EAEE,AAAS,MAAT,GAAiB,AAAS,MAAT,GAAiB,AAAS,MAAT,GAAiB,AAAS,MAAT,EACrD,MAAM,IAAI,GAGZ,IAAM,EAAY,GAAS,EAAM,GAAS,EAG1C,GAFA,EAAO,IAAA,CAAK,GAER,AAAU,KAAV,EAAc,CAChB,IAAM,EAAW,GAAW,EAAK,IAAS,GAAS,EAGnD,GAFA,EAAO,IAAA,CAAK,GAER,AAAU,KAAV,EAAc,CAChB,IAAM,EAAa,GAAS,EAAK,IAAQ,EACzC,EAAO,IAAA,CAAK,EACb,CACF,CACF,CAED,OAAO,CACR,EAOD,MAAA,WACE,GAAI,CAAC,IAAI,CAAC,cAAA,CAAgB,CACxB,IAAI,CAAC,cAAA,CAAiB,CAAA,EACtB,IAAI,CAAC,cAAA,CAAiB,CAAA,EACtB,IAAI,CAAC,qBAAA,CAAwB,CAAA,EAC7B,IAAI,CAAC,qBAAA,CAAwB,CAAA,EAG7B,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,YAAA,CAAa,MAAA,CAAQ,IAC5C,IAAI,CAAC,cAAc,CAAC,EAAE,CAAG,IAAI,CAAC,YAAA,CAAa,MAAA,CAAO,GAClD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAG,EAC9C,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAG,IAAI,CAAC,oBAAA,CAAqB,MAAA,CAAO,GACjE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAG,EAGxD,GAAK,IAAI,CAAC,iBAAA,CAAkB,MAAA,GAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,oBAAA,CAAqB,MAAA,CAAO,GAAG,CAAG,EAC3D,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAA,CAAa,MAAA,CAAO,GAAG,CAAG,EAG/D,CACF,CACD,EAKW,GAAP,SADH,CAAA,E,aACU,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,EAAA,GAAA,IAAA,EAAA,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,GAAA,SAAA,Q,E,MAAA,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,IAAA,CAAA,G,E,E,I,C,K,C,E,C,I,C,C,M,C,M,S,C,K,C,I,C,aACF,EAAI,IAAA,CAAG,0B,C,CADL,OAAA,CAAgC,EAAA,AAAA,GAAA,QAOhC,GAAe,SAAU,CAAW,EAC/C,IAAM,EAAYA,GAAkB,GACpC,OAAO,GAAO,eAAA,CAAgB,EAAW,CAAA,EAC3C,EAMa,GAAgC,SAAU,CAAW,EAEhE,OAAO,GAAa,GAAK,OAAA,CAAQ,MAAO,GAC1C,EO5Ra,GAAP,SAAA,CAAA,E,aAAO,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,EAAA,GAAA,IAAA,EAAA,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,GAAA,SAAA,EAMA,CAAY,CACrB,CAAe,CAER,CAAoC,M,E,MATlC,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,IAAA,CAAA,GAMA,AAKH,CAAA,EAAA,EAAA,IAAA,CAAA,IAAA,CAAA,EAAA,EALO,IAAA,CAAJ,EAGF,EAAU,UAAA,CAAV,EAPA,EAAI,IAAA,CAdI,gBA2Bf,OAAO,cAAA,CAAA,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,GAAqB,EAAc,SAA1C,EAII,MAAM,iBAAA,EACR,MAAM,iBAAA,CAAA,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,GAAwB,GAAa,SAAA,CAAU,MADvD,E,C,CAnBS,OAAA,CAAsB,EAAA,AAAA,GAAA,QAyBtB,GAAA,W,aAAA,SAAA,EAKQ,CAAe,CACf,CAAmB,CACnB,CAA2B,EAPnC,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,IAAA,CAAA,GAKQ,IAAO,CAAA,OAAA,CAAP,EACA,IAAW,CAAA,WAAA,CAAX,EACA,IAAM,CAAA,MAAA,CAAN,C,CAPR,MAAA,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,EAAA,C,CAUX,IAAA,SAAA,MAAA,SACE,CAAO,EACP,IAAA,IAAA,EAAA,UAAA,MAAA,CAAG,EAAH,AAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAG,CAAA,CAAH,EAAA,EAAA,CAAA,SAAA,CAAA,EAA4D,CAE5D,IAAM,EAAc,CAAI,CAAC,EAAgB,EAAI,CAAA,EACvC,EAAW,GAAmB,MAAA,CAAhB,IAAI,CAAC,OAAA,CAAO,KAAQ,MAAA,CAAJ,GAC9B,EAAW,IAAI,CAAC,MAAM,CAAC,EAAK,CAE5B,EAAU,EAWX,AAXsC,EAW7B,OAAA,CAAQ,GAAS,SAAC,CAAA,CAAG,CAArC,EACE,IAAM,EAAQ,AAZuC,CAYnC,CAAC,EAAI,CACvB,OAAO,AAAS,MAAT,EAAgB,OAAO,GAAS,IAAO,MAAA,CAAH,EAAG,KAChD,GAdqE,QAE7D,EAAc,GAAwB,MAAA,CAArB,IAAI,CAAC,WAAA,CAAW,MAAiB,MAAA,CAAZ,EAAO,MAAa,MAAA,CAAR,EAAQ,MAIhE,OAFc,IAAI,GAAc,EAAU,EAAa,EAGxD,C,E,EAzBU,C,IAmCP,GAAU,gBdzGH,GAAA,W,aAAA,SAAA,EAkBA,CAAO,CACP,CAAmC,CACnC,CAAmB,EApBnB,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,IAAA,CAAA,GAkBA,IAAI,CAAA,IAAA,CAAJ,EACA,IAAe,CAAA,eAAA,CAAf,EACA,IAAI,CAAA,IAAA,CAAJ,EAnBX,IAAiB,CAAA,iBAAA,CAAG,CAAA,EAIpB,IAAY,CAAA,YAAA,CAAe,CAAA,EAE3B,IAAA,CAAA,iBAAA,CAA2C,OAE3C,IAAiB,CAAA,iBAAA,CAAwC,I,CAT9C,MAAA,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,EAAA,C,CAuBX,IAAA,uBAAA,MAAA,SAAqB,CAAuB,EAE1C,OADA,IAAI,CAAC,iBAAA,CAAoB,EAClB,IAAI,AACZ,C,E,CAED,IAAA,uBAAA,MAAA,SAAqB,CAA0B,EAE7C,OADA,IAAI,CAAC,iBAAA,CAAoB,EAClB,IAAI,AACZ,C,E,CAED,IAAA,kBAAA,MAAA,SAAgB,CAAiB,EAE/B,OADA,IAAI,CAAC,YAAA,CAAe,EACb,IAAI,AACZ,C,E,CAED,IAAA,6BAAA,MAAA,SAA2B,CAAsC,EAE/D,OADA,IAAI,CAAC,iBAAA,CAAoB,EAClB,IAAI,AACZ,C,E,EAzCU,C,IiCYV,GAAA,EAAA,S,G,E,S,G,E,SACU,GAAsB,EAAE,AAcnC,EADU,EAAA,GAAA,CAAA,EAOX,CAAA,CAAA,EANC,CAAA,EAAA,KAAA,CAAA,EAAA,CAAA,QACA,CAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,UACA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,OACA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,OACA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,CAAA,QACA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,SAGF,IAAM,GAA2D,CAC/D,MAAS,EAAS,KAAlB,CACA,QAAW,EAAS,OAApB,CACA,KAAQ,EAAS,IAAjB,CACA,KAAQ,EAAS,IAAjB,CACA,MAAS,EAAS,KAAlB,CACA,OAAU,EAAS,MAAnB,AACD,EAKK,GAA4B,EAAS,IADxC,CAoBG,GAAgB,CAAA,AACpB,AAAA,GADoB,EAAA,CAAA,EACnB,EAAS,KAAA,CAAQ,OAClB,AAAA,GAFoB,EAEnB,EAAS,OAAA,CAAU,OACpB,AAAA,GAHoB,EAGnB,EAAS,IAAA,CAAO,QACjB,AAAA,GAJoB,EAInB,EAAS,IAAA,CAAO,QACjB,AAAA,GALoB,EAKnB,EAAS,KAAA,CAAQ,SALE,CADnB,EAcG,GAAgC,SAAC,CAAA,CAAU,CAD9C,EAC0D,IAAA,IAOzD,EAPyD,EAAA,UAAA,MAAA,CAAA,EAAA,AAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,CAAA,EAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAC3D,IAAI,CAAA,EAAU,EAAS,QAAA,AAAA,GAGvB,IAAM,EAAM,IAAI,OAAO,WAAvB,GACM,EAAS,EAAa,CAAC,EAAsC,CACnE,GAAI,EACF,AAAA,CAAA,EAAA,OAAA,CAAO,CAAC,EAA4C,CAApD,KAAA,CAAA,EAAA,CACE,IAAa,MAAA,CAAT,EAAG,OAAsB,MAAA,CAAhB,EAAS,IAAA,CAAO,KAE9B,CAHD,MAAA,CAEE,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,UAGL,MAAM,AAAI,MACR,8DAAqE,MAAA,CAAP,EAAO,MAG3E,EAEa,GAAA,W,aAAA,SAAA,EAOQ,CAAY,EAPpB,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,IAAA,CAAA,GAOQ,IAAI,CAAA,IAAA,CAAJ,EAUX,IAAS,CAAA,SAAA,CAAG,GAsBZ,IAAW,CAAA,WAAA,CAAe,GAc1B,IAAe,CAAA,eAAA,CAAsB,KA1C3C,GAAU,IAAA,CAAK,IAAI,C,CAXV,MAAA,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,EAAA,C,CAmBP,IAAA,WAAJ,IAAA,WACE,OAAO,IAAI,CAAC,SAAZ,AACD,EAED,IAAA,SAAa,CAAa,EACxB,GAAI,CAAE,CAAA,KAAO,CAAA,EACX,MAAM,AAAI,UAAU,kBAAqB,MAAA,CAAH,EAAG,4BAE3C,CAAA,IAAI,CAAC,SAAA,CAAY,CAClB,C,E,CAGD,IAAA,cAAA,MAAA,SAAY,CAA8B,EACxC,IAAI,CAAC,SAAA,CAAY,AAAe,UAAf,OAAO,EAAmB,EAAiB,CAAC,EAAI,CAAG,CACrE,C,E,CAOG,IAAA,aAAJ,IAAA,WACE,OAAO,IAAI,CAAC,WAAZ,AACD,EACD,IAAA,SAAe,CAAe,EAC5B,GAAI,AAAe,YAAf,OAAO,EACT,MAAM,AAAI,UAAU,oDAEtB,CAAA,IAAI,CAAC,WAAA,CAAc,CACpB,C,E,CAMG,IAAA,iBAAJ,IAAA,WACE,OAAO,IAAI,CAAC,eAAZ,AACD,EACD,IAAA,SAAmB,CAAsB,EACvC,IAAI,CAAC,eAAA,CAAkB,CACxB,C,E,CAMD,IAAA,QAAA,MAAA,WAAM,IAAA,IAAA,EAAA,UAAA,MAAA,CAAA,EAAA,AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAG,CAAA,CAAH,EAAA,CAAA,SAAA,CAAA,EAAkB,AACtB,CAAA,IAAI,CAAC,eAAA,EAAmB,IAAI,CAAC,eAAA,CAAL,KAAA,CAAA,IAAI,CAAJ,CAAqB,IAAI,CAAE,EAAS,KAAT,CAAwB,CAAnD,MAAA,CAA2C,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,KACtE,IAAI,CAAC,WAAA,CAAL,KAAA,CAAA,IAAI,CAAJ,CAAiB,IAAI,CAAE,EAAS,KAAT,CAAwB,CAA/C,MAAA,CAAuC,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,IAC3C,C,E,CACD,IAAA,MAAA,MAAA,WAAI,IAAA,IAAA,EAAA,UAAA,MAAA,CAAA,EAAA,AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAG,CAAA,CAAH,EAAA,CAAA,SAAA,CAAA,EAAkB,AACpB,CAAA,IAAI,CAAC,eAAA,EACH,IAAI,CAAC,eAAA,CAAL,KAAA,CAAA,IAAI,CAAJ,CAAqB,IAAI,CAAE,EAAS,OAAT,CAA0B,CAArD,MAAA,CAA6C,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,KAClD,IAAI,CAAC,WAAA,CAAL,KAAA,CAAA,IAAI,CAAJ,CAAiB,IAAI,CAAE,EAAS,OAAT,CAA0B,CAAjD,MAAA,CAAyC,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,IAC7C,C,E,CACD,IAAA,OAAA,MAAA,WAAK,IAAA,IAAA,EAAA,UAAA,MAAA,CAAA,EAAA,AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAG,CAAA,CAAH,EAAA,CAAA,SAAA,CAAA,EAAkB,AACrB,CAAA,IAAI,CAAC,eAAA,EAAmB,IAAI,CAAC,eAAA,CAAL,KAAA,CAAA,IAAI,CAAJ,CAAqB,IAAI,CAAE,EAAS,IAAT,CAAuB,CAAlD,MAAA,CAA0C,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,KACrE,IAAI,CAAC,WAAA,CAAL,KAAA,CAAA,IAAI,CAAJ,CAAiB,IAAI,CAAE,EAAS,IAAT,CAAuB,CAA9C,MAAA,CAAsC,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,IAC1C,C,E,CACD,IAAA,OAAA,MAAA,WAAK,IAAA,IAAA,EAAA,UAAA,MAAA,CAAA,EAAA,AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAG,CAAA,CAAH,EAAA,CAAA,SAAA,CAAA,EAAkB,AACrB,CAAA,IAAI,CAAC,eAAA,EAAmB,IAAI,CAAC,eAAA,CAAL,KAAA,CAAA,IAAI,CAAJ,CAAqB,IAAI,CAAE,EAAS,IAAT,CAAuB,CAAlD,MAAA,CAA0C,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,KACrE,IAAI,CAAC,WAAA,CAAL,KAAA,CAAA,IAAI,CAAJ,CAAiB,IAAI,CAAE,EAAS,IAAT,CAAuB,CAA9C,MAAA,CAAsC,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,IAC1C,C,E,CACD,IAAA,QAAA,MAAA,WAAM,IAAA,IAAA,EAAA,UAAA,MAAA,CAAA,EAAA,AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAG,CAAA,CAAH,EAAA,CAAA,SAAA,CAAA,EAAkB,AACtB,CAAA,IAAI,CAAC,eAAA,EAAmB,IAAI,CAAC,eAAA,CAAL,KAAA,CAAA,IAAI,CAAJ,CAAqB,IAAI,CAAE,EAAS,KAAT,CAAwB,CAAnD,MAAA,CAA2C,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,KACtE,IAAI,CAAC,WAAA,CAAL,KAAA,CAAA,IAAI,CAAJ,CAAiB,IAAI,CAAE,EAAS,KAAT,CAAwB,CAA/C,MAAA,CAAuC,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,IAC3C,C,E,EArFU,C,I,E,E,S,G,E,S,E,E,S,G,E,SIrGP,GAAmB,IAAI,QACvB,GAAqB,IAAI,QACzB,GAA2B,IAAI,QAC/B,GAAiB,IAAI,QACrB,GAAwB,IAAI,QA0D9B,GAAgB,CAChB,IAAA,SAAI,CAAM,CAAE,CAAI,CAAE,CAAQ,EACtB,GAAI,aAAkB,eAAgB,CAElC,GAAI,AAAS,SAAT,EACA,OAAO,GAAmB,GAAA,CAAI,GAElC,GAAI,AAAS,qBAAT,EACA,OAAO,EAAO,gBAAA,EAAoB,GAAyB,GAAA,CAAI,GAGnE,GAAI,AAAS,UAAT,EACA,OAAO,EAAS,gBAAgB,CAAC,EAAE,CAC7B,KAAA,EACA,EAAS,WAAA,CAAY,EAAS,gBAAgB,CAAC,EAAE,CAE/D,CAEA,OAAO,GAAK,CAAM,CAAC,EAAK,CAC5B,EACA,IAAA,SAAI,CAAM,CAAE,CAAI,CAAE,CAAK,EAEnB,OADA,CAAM,CAAC,EAAK,CAAG,EACR,CAAA,CACX,EACA,IAAA,SAAI,CAAM,CAAE,CAAI,SACZ,AAAI,aAAkB,gBACjB,CAAA,AAAS,SAAT,GAAmB,AAAS,UAAT,CAAS,GAG1B,KAAQ,CACnB,CACJ,EA+CA,SAAS,GAAK,CAAK,EAGf,GAAI,aAAiB,WACjB,CAAA,MA1HJ,CAhBM,EAAU,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAtC,EACI,IAAM,EAAW,WACb,AAwIoB,EAxIZ,mBAAA,CAAoB,UAAW,GACvC,AAuIoB,EAvIZ,mBAAA,CAAoB,QAAS,EACzC,EACM,EAAU,WACZ,EAAQ,GAAK,AAoIO,EApIC,MAArB,GACA,GACJ,EACM,EAAQ,WACV,EAAO,AAgIa,EAhIL,KAAf,EACA,GACJ,EACA,AA6HwB,EA7HhB,gBAAA,CAAiB,UAAW,GACpC,AA4HwB,EA5HhB,gBAAA,CAAiB,QAAS,EACtC,IAEK,IAAA,CAAK,SAAC,CADX,EAIQ,aAAiB,WACjB,GAAiB,GAAA,CAAI,EAqHD,EAlH5B,GACK,KAAA,CAAM,WAAQ,GAGnB,GAAsB,GAAA,CAAI,EA8GE,GA7GrB,CA4GP,CAIA,GAAI,GAAe,GAAA,CAAI,GACnB,OAAO,GAAe,GAAA,CAAI,GAC9B,IA/IM,EA0HsB,EAqBtB,EApBN,AAAI,AAAiB,YAAjB,OADwB,EAqBY,GAhDxC,AAAI,AA6BoB,IA7BX,YAAY,SAAA,CAAU,WAAA,EAC7B,qBAAsB,eAAe,SAAQ,CAY/C,AAzHI,CAAA,GACH,CAAA,EAAuB,CACpB,UAAU,SAAA,CAAU,OAApB,CACA,UAAU,SAAA,CAAU,QAApB,CACA,UAAU,SAAA,CAAU,kBAApB,CACJ,AAAC,CAAD,EAoH0B,QAAA,CAgBN,GAfb,WAAU,IAAA,IAAA,EAAA,UAAA,MAAA,CAAA,EAAA,AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAG,CAAA,CAAH,EAAA,CAAA,SAAA,CAAA,EAAO,CAIpB,OADA,AAYgB,EAZX,KAAA,CAAM,GAAO,IAAI,EAAG,GAClB,GAAK,GAAiB,GAAA,CAAI,IAAI,EACzC,EAEG,WAAU,IAAA,IAAA,EAAA,UAAA,MAAA,CAAA,EAAA,AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAG,CAAA,CAAH,EAAA,CAAA,SAAA,CAAA,EAAO,CAGpB,OAAO,GAAK,AAKQ,EALH,KAAA,CAAM,GAAO,IAAI,EAAG,GACzC,EAvBW,SAAU,CAAU,EAAE,IAAA,IAAA,EAAA,UAAA,MAAA,CAAG,EAAH,AAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAG,CAAA,CAAH,EAAA,EAAA,CAAA,SAAA,CAAA,EAAO,CAChC,IAAM,EAAK,AA0BK,EA1BA,IAAA,CAAL,KAAA,CA0BK,EA1BL,CAAU,GAAO,IAAI,EAAG,EAAoB,CAA5C,MAAA,CAAoC,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,KAElD,OADA,GAAyB,GAAA,CAAI,EAAI,EAAW,IAAA,CAAO,EAAW,IAAA,GAAS,CAAC,EAAW,EAC5E,GAAK,EAChB,EA4BJ,CAFI,aAAiB,gBACjB,AAjGR,SAAwC,CAAE,EAEtC,IAAI,GAAmB,GAAA,CAAI,IAE3B,IAAM,EAAO,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAnC,EACI,IAAM,EAAW,WACb,EAAG,mBAAA,CAAoB,WAAY,GACnC,EAAG,mBAAA,CAAoB,QAAS,GAChC,EAAG,mBAAA,CAAoB,QAAS,EACpC,EACM,EAAW,WACb,IACA,GACJ,EACM,EAAQ,WACV,EAAO,EAAG,KAAA,EAAS,IAAI,aAAa,aAAc,eAClD,GACJ,EACA,EAAG,gBAAA,CAAiB,WAAY,GAChC,EAAG,gBAAA,CAAiB,QAAS,GAC7B,EAAG,gBAAA,CAAiB,QAAS,EACjC,GAEA,GAAmB,GAAA,CAAI,EAAI,GAC/B,EAyEuC,GA9JS,AAMpC,CAAA,GACH,CAAA,EAAoB,CACjB,YACA,eACA,SACA,UACA,eACJ,AAAC,CAAD,EAbqD,IAAA,CAAK,SAAC,CAAnB,EAAyB,OAAA,AA+JnD,aA/JqE,C,IAgK5E,IAAI,MAAM,EAAO,IAErB,EAkBP,OAJI,IAAa,IACb,GAAe,GAAA,CAAI,EAAO,GAC1B,GAAsB,GAAA,CAAI,EAAU,IAEjC,CACX,CACA,IAAM,GAAS,SAAC,CAAhB,EAA0B,OAAA,GAAsB,GAAA,CAAI,E,EHrI9C,GAAc,CAAC,MAAO,SAAU,SAAU,aAAc,QAAQ,CAChE,GAAe,CAAC,MAAO,MAAO,SAAU,QAAQ,CAChD,GAAgB,IAAI,IAC1B,SAAS,GAAU,CAAM,CAAE,CAAI,EAC3B,GAAM,aAAkB,aACpB,CAAE,CAAA,KAAQ,CAAA,GACV,AAAgB,UAAhB,OAAO,GAGX,GAAI,GAAc,GAAA,CAAI,GAClB,OAAO,GAAc,GAAA,CAAI,GAC7B,IAAM,EAAiB,EAAK,OAAA,CAAQ,aAAc,IAC5C,EAAW,IAAS,EACpB,EAAU,GAAa,QAAA,CAAS,GACtC,GAEA,AAAE,IAAmB,AAAA,CAAA,EAAW,SAAW,cAAA,EAAgB,SAAQ,EAC7D,CAAA,GAAW,GAAY,QAAA,CAAS,EAAA,GAGtC,IAAe,EAAT,GAAS,EAAA,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,SAAgB,CAAS,E,IAAE,EAAG,EAAH,EAYlC,EAVE,EACF,E,E,U,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EAHkC,IAAA,AAAG,EAAH,AAAA,MAAA,AAAA,CAAA,EAAA,EAAA,MAAA,AAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAG,CAAA,CAAH,EAAA,EAAA,CAAA,CAAA,CAAA,EAAO,CAWrC,OARJ,EAAS,AADP,CAAA,EAAK,IAAI,CAAC,WAAA,CAAY,EAAW,EAAU,YAAc,WAAzD,EACU,KAAZ,CACA,GACA,CAAA,EAAS,EAAO,KAAA,CAAM,EAAK,KAD/B,GAAA,EAOQ,C,EAAM,QAAQ,GAAR,CAAA,CACV,AAAA,CAAA,EAAA,CAAA,CAAM,CAAC,EAAe,CAAtB,KAAA,CAAA,EAAuB,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,IAC1B,GAAW,EAAG,IAAd,C,E,A,M,EAFJ,MAAA,C,EAAQ,EAAA,IAAA,EAGL,CAAC,EAAE,C,A,C,EACV,GAfM,SAAyB,CAAS,E,O,E,K,C,I,C,U,GAiBxC,OADA,GAAc,GAAA,CAAI,EAAM,GACjB,GACX,CExEqC,EFyET,ACtFrB,SAAwB,CAAM,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,UAAU,MAAA,CAAQ,IAAK,CACvC,IAAI,EAAS,AAAgB,MAAhB,SAAS,CAAC,EAAE,CAAW,SAAS,CAAC,EAAE,CAAG,CAAC,EAChD,EAAU,OAAO,IAAA,CAAK,EAEkB,CAAA,YAAxC,OAAO,OAAO,qBAAA,EACd,CAAA,EAAU,EAAQ,MAAA,CACd,OAAO,qBAAA,CAAsB,GAAQ,MAAA,CAAO,SAAS,CAAG,EACpD,OAAO,OAAO,wBAAA,CAAyB,EAAQ,GAAK,UAApD,AACJ,GAAA,EAIR,EAAQ,OAAA,CAAQ,SAAS,CAAG,EACxB,AAAA,GAAiB,EAAQ,EAAK,CAAM,CAAC,EAAI,CAC7C,EACJ,CAEA,OAAO,CACX,EDmE4B,CAAA,EAAd,EG+Be,IDvGzB,EADyC,EFyEjB,CAExB,IAAK,SAAC,CAAA,CAAQ,CAAA,CAAM,CAApB,EAAiC,OAAA,GAAU,EAAQ,IAAS,EAAS,GAAA,CAAI,EAAQ,EAAM,E,EACvF,IAAK,SAAC,CAAA,CAAQ,CAAd,EAAuB,MAAA,CAAC,CAAC,GAAU,EAAQ,IAAS,EAAS,GAAA,CAAI,EAAQ,E,C,EEzErE,OAAO,yBAAA,CAA2B,OAAO,gBAAA,CAAiB,EAAQ,OAAO,yBAAA,CAA0B,IAEnG,AApBR,CAAA,SAAiB,CAAM,CAAE,CAAc,EACnC,IAAI,EAAO,OAAO,IAAA,CAAK,GAEvB,GAAI,OAAO,qBAAA,CAAuB,CAC9B,IAAI,EAAU,OAAO,qBAAA,CAAsB,GAM3C,EAAK,IAAA,CAAK,KAAA,CAAM,EAAM,EAC1B,CAEA,OAAO,CACX,CAAA,EAMgB,OAAO,IAAS,OAAA,CAAQ,SAAS,CAAG,EACxC,OAAO,cAAA,CAAe,EAAQ,EAAK,OAAO,wBAAA,CAAyB,EAAQ,GAC/E,GCiGJ,GD9FO,EjDAE,IAAA,GAAA,W,aAAA,SAAA,EACkB,CAA6B,EAD/C,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,IAAA,CAAA,GACkB,IAAS,CAAA,SAAA,CAAT,C,CADlB,MAAA,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,EAAA,C,CAIX,IAAA,wBAAA,MAAA,WAIE,OAAO,AAHW,IAAI,CAAC,SAAA,CAAU,YAAjC,GAIG,GAAA,CAAI,SAAA,CADP,EAEI,GAqBC,AAAA,CAAA,OADD,EAAY,AApBiB,EAoBR,YAA3B,IACgB,KAAA,EAAT,EAAW,IAAA,AAAA,IAAI,UAjBd,OAAO,KAHP,IAmBF,EAnBQ,EAAU,EAAS,YAAzB,GACA,MAAO,GAAsB,MAAA,CAAnB,EAAQ,OAAA,CAAO,KAAmB,MAAA,CAAf,EAAQ,OAArC,CAIJ,GACC,MAAA,CAAO,SAAA,CADR,EACqB,OAAA,CACpB,GAAA,IAAA,CAAK,IACT,C,E,EAnBU,C,I,G,gB,G,SCNA,GAAS,IAAI,GAAO,iBC+BpB,GAAsB,CAAA,AACjC,AAAA,GADiC,EAAA,CAAA,EAChC1B,GAAU,aACX,AAAA,GAFiC,E,uBAEhB,oBACjB,AAAA,GAHiC,E,sBAGhB,kBACjB,AAAA,GAJiC,E,6BAIV,yBACvB,AAAA,GALiC,E,sBAKjB,kBAChB,AAAA,GANiC,E,6BAMX,yBACtB,AAAA,GAPiC,E,iBAOrB,aACZ,AAAA,GARiC,E,wBAQf,oBAClB,AAAA,GATiC,E,qBASjB,aAChB,AAAA,GAViC,E,4BAUX,oBACtB,AAAA,GAXiC,E,sBAWhB,WACjB,AAAA,GAZiC,E,6BAYV,kBACvB,AAAA,GAbiC,E,0BAaZ,YACrB,AAAA,GAdiC,E,iCAcN,mBAC3B,AAAA,GAfiC,E,sBAehB,YACjB,AAAA,GAhBiC,E,6BAgBV,mBACvB,AAAA,GAjBiC,E,wBAiBd,aACnB,AAAA,GAlBiC,E,+BAkBR,oBACzB,AAAA,GAnBiC,E,0BAmBb,WACpB,AAAA,GApBiC,E,iCAoBP,kBAC1B,AAAA,GArBiC,E,oBAqBlB,YACf,AAAA,GAtBiC,E,2BAsBZ,mBACrB,AAAA,GAvBiC,E,sBAuBhB,YACjB,AAAA,GAxBiC,E,6BAwBV,mBACvB,AAAA,GAzBiC,EAyBjC,UAAW,WACX,AAAA,GA1BiC,E,WA0BlB,eA1BkB,CAA5B,ECxBM,GAAQ,IAAI,IAQZ,GAAc,IAAI,IAuCzB,SAAU,GACd,CAAuB,EAEvB,IAAM,EAAgB,EAAU,IAAhC,CACA,GAAI,GAAY,GAAA,CAAI,GAKlB,OAJA,GAAO,KAAA,CACL,sDAAmE,MAAA,CAAb,EAAa,MAG9D,CAAA,EAGT,GAAY,GAAA,CAAI,EAAe,GAG1B,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,GAAM,MAAA,EAAA,CAAA,OAAA,QAAA,CAAA,GAAnB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,EACH,AAhDY,SACd,CAAgB,CAChB,CAAuB,EAEvB,GAAI,CACD,EAAwB,SAAA,CAAU,YAAA,CAAa,EACjD,CAAC,MAAO,EAAG,CACV,GAAO,KAAA,CACL,aAAmE,MAAA,CAAtD,EAAU,IAAA,CAA4C,yCAAQ,MAAA,CAAR,EAAI,IAAA,EACvE,EAEH,CACH,EAoCkB,EAAwB,E,C,C,M,E,CADnC,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,MAAO,CAAA,CACT,CC5DA,IAAM,GAA6B,CAAA,AACjC,AAAA,GADiC,EAAA,CAAA,EACjC,SACE,8EAEF,AAAA,GAJiC,EAIjC,eAAyB,iCACzB,AAAA,GALiC,EAKjC,gBACE,mFACF,AAAA,GAPiC,EAOjC,cAAwB,mDACxB,AAAA,GARiC,EAQjC,aACE,2EACF,AAAA,GAViC,EAUjC,uBACE,8EAEF,AAAA,GAbiC,EAajC,uBACE,yDACF,AAAA,GAfiC,EAejC,WACE,iFACF,AAAA,GAjBiC,EAiBjC,UACE,sFACF,AAAA,GAnBiC,EAmBjC,UACE,oFACF,AAAA,GArBiC,EAqBjC,aACE,uFAtB+B,CAlBhC,EAuDU,GAAgB,IAAI,GAC/B,MACA,WACA,IE2Lc,SAAA,GACd,CAAwB,CACxB,CAAe,CACf,CAAgB,EAIhB,I,EAAI,EAAU,AAAyC,OAAzC,CAAA,EAAA,EAAmB,CAAC,EAAiB,AAAjB,GAAqB,AAAA,KAAA,IAAA,EAAA,EAAA,EACnD,GACF,CAAA,GAAW,IAAW,MAAA,CAAP,EADjB,EAGA,IAAM,EAAkB,EAAQ,KAAA,CAAM,SAChC,EAAkB,EAAQ,KAAA,CAAM,SACtC,GAAI,GAAmB,EAAiB,CACtC,IAAM,EAAU,CACiB,+BAA0B,MAAA,CAA1B,EAA0B,oBAAW,MAAA,CAAX,EAAW,MACrE,CACG,GACF,EAAQ,IAAA,CACN,iBAAwB,MAAA,CAAP,EAAO,sDAGxB,GAAmB,GACrB,EAAQ,IAAA,CAAK,OAEX,GACF,EAAQ,IAAA,CACN,iBAAwB,MAAA,CAAP,EAAO,sDAG5B,GAAO,IAAA,CAAK,EAAQ,IAAA,CAAK,MACzB,MACD,CACD,GACE,IAAI,GACF,GAAU,MAAA,CAAP,EAAO,YACV,WAAO,MAAA,CAAE,QAAA,EAAS,QAAA,CAAO,CAAG,EAAA,WAIlC,CClRA,IAAM,GAAa,2BASf,GAAiD,KACrD,SAAS,KAoBP,OAnBK,IACH,CAAA,GAAY,AwC5BhB,CAAA,SAAgB,CAAI,CAAE,CAAO,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAA6C,CAAC,EAA5C,EAAF,EAAE,OAAA,CAAS,EAAX,EAAW,OAAA,CAAS,EAApB,EAAoB,QAAA,CAAU,EAA9B,EAA8B,UAA9B,CACrB,EAAU,UAAU,IAAA,CAAK,ExCchB,GwCbT,EAAc,AAAA,GAAK,GAoBzB,OAnBI,GACA,EAAQ,gBAAA,CAAiB,gBAAiB,SAAC,CAD/C,EAEQ,EAAQ,AAAA,GAAK,EAAQ,MAAA,EAAS,EAAM,UAAA,CAAY,EAAM,UAAA,CAAY,AAAA,GAAK,EAAQ,WAAA,EAAc,EACjG,GAEA,GACA,EAAQ,gBAAA,CAAiB,UAAW,SAAC,CADzC,EACmD,OAAA,EAE/C,EAAM,UAAA,CAAY,EAAM,UAAA,CAAY,E,GAExC,EACK,IAAA,CAAK,SAAC,CADX,EAEQ,GACA,EAAG,gBAAA,CAAiB,QAAS,WAAM,OAAA,G,GACnC,GACA,EAAG,gBAAA,CAAiB,gBAAiB,SAAC,CAD1C,EACoD,OAAA,EAAS,EAAM,UAAA,CAAY,EAAM,UAAA,CAAY,E,EAErG,GACK,KAAA,CAAM,WAAQ,GACZ,CACX,CAAA,ExCTgB,8BACG,EAagC,CAC7C,QAAS,SAAC,CAAA,CAAI,CAAd,EAOS,IADC,GAEJ,EAAG,iBAAA,CAAkB,GAE1B,CACF,GAAE,KAAA,CAAM,SAAA,CAAR,EACC,MAAM,GAAc,MAAA,CAA0B,WAAA,CAC5C,qBAAsB,EAAE,OAAxB,AACD,EACH,EAAA,EAEK,EACT,CAEsB,SAAA,KAAA,MAAA,AAAA,CAAA,GAAf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,SACL,CAAgB,EAGR,IAMC,EAIC,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EAVG,O,E,I,C,I,C,C,E,G,E,EAAA,C,EAAM,K,A,M,EACF,MAAA,C,EAAM,AADV,EAAL,IAAA,GAEH,WAAA,CAAY,IACZ,WAAA,CAAY,IACZ,GAAA,CAAI,GAAW,I,A,M,EAClB,MAAA,C,EAJe,EAAT,IAAA,G,A,M,E,MAMF,AADG,CAAA,EAAA,EAAA,IAAA,EAAA,YACU,GACf,GAAO,IAAA,CAAK,EAAE,OADhB,GAGQ,EAAc,GAAc,MAAA,CAAyB,UAAA,CACzD,qBAAuB,MAAA,EAAA,KAAA,EAAA,EAAa,OAApC,AACD,GACD,GAAO,IAAA,CAAK,EAAY,OAAxB,G,C,E,E,A,M,E,M,C,E,A,C,EAGN,EAAA,EApBsB,KAAA,CAAA,IAAA,CAAA,U,CAsBA,SAAA,GACpB,CAAgB,CAChB,CAAsC,EAFlB,OAAA,GAAA,KAAA,CAAA,IAAA,CAAA,U,CAAA,SAAA,KAAA,MAAA,AAAA,CAAA,GAAf,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,SACL,CAAgB,CAChB,CAAsC,EAG9B,IACA,EAIC,EAIC,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EATG,O,E,I,C,I,C,C,E,G,E,EAAA,C,EAAM,K,A,M,EAGjB,MAAA,C,EAAM,AADc,AADd,CAAA,EAAK,AADA,EAAL,IAAA,GACQ,WAAA,CAAY,GAAY,YAAhC,EACiB,WAAA,CAAY,IACjB,GAAA,CAAI,EAAiB,GAAW,I,A,M,EAClD,OADA,EAAA,IAAA,GACA,C,EAAM,EAAG,IAAH,C,A,M,E,OAAN,EAAA,IAAA,G,C,E,E,A,M,E,MAEI,AADG,CAAA,EAAA,EAAA,IAAA,EAAA,YACU,GACf,GAAO,IAAA,CAAK,EAAE,OADhB,GAGQ,EAAc,GAAc,MAAA,CAA2B,UAAA,CAC3D,qBAAuB,MAAA,EAAA,KAAA,EAAA,EAAa,OAApC,AACD,GACD,GAAO,IAAA,CAAK,EAAY,OAAxB,G,C,E,E,A,M,E,M,C,E,A,C,EAGN,EAAA,EApBsB,KAAA,CAAA,IAAA,CAAA,U,CAsBtB,SAAS,GAAW,CAAgB,EAClC,MAAO,GAAe,MAAA,CAAZ,EAAI,IAAA,CAAI,KAAqB,MAAA,CAAjB,EAAI,OAAA,CAAQ,KAAlC,CACF,CCjEa,IAAA,GAAA,W,aAAA,SAAA,EAyBkB,CAA6B,E,I,E,I,CAzB/C,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,IAAA,CAAA,GAyBkB,IAAS,CAAA,SAAA,CAAT,EAT7B,IAAgB,CAAA,gBAAA,CAAiC,KAU/C,IAAM,EAAM,IAAI,CAAC,SAAA,CAAU,WAAA,CAAY,OAAO,YAA9C,EACA,CAAA,IAAI,CAAC,QAAA,CAAW,IAAI,GAAqB,GACzC,IAAI,CAAC,uBAAA,CAA0B,IAAI,CAAC,QAAA,CAAS,IAAA,GAAO,IAAA,CAAK,SAAA,CAAzD,EAEE,OADA,EAAK,gBAAA,CAAmB,EACjB,CACT,E,CA/BS,MAAA,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,EAAA,C,CAyCL,IAAA,mBAAN,MAAA,W,I,E,I,CAAA,MAAA,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,WACQ,IAMA,EACA,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EACF,GAFE,EAAQ,AANS,EAAK,SAAA,CACzB,WAAA,CAAY,mBACZ,YAFG,GAMuB,qBAAvB,GACA,EAAO,KACT,AAA0B,OAA1B,EAAK,gBAAA,CAAL,MAAA,C,E,E,CACsB,MAAA,C,EAAM,EAAK,uBAAL,C,A,M,EAA9B,EAAK,gBAAA,CAAmB,EAAxB,IAAA,G,E,K,C,C,M,EAIF,GACE,EAAK,gBAAA,CAAiB,qBAAA,GAA0B,GAChD,EAAK,gBAAA,CAAiB,UAAA,CAAW,IAAA,CAC/B,SAAA,CAHJ,EAG2B,OAAA,EAAoB,IAAA,GAAS,CAGtD,GAAA,MAAA,C,E,CAaF,OAVE,EAAK,gBAAA,CAAiB,UAAA,CAAW,IAAA,CAAK,CAAE,KAAA,EAAM,MAAA,CAAK,GAGrD,EAAK,gBAAA,CAAiB,UAAA,CAAa,EAAK,gBAAA,CAAiB,UAAA,CAAW,MAAA,CAClE,SAAA,CADF,EAEI,IAAM,EAAc,IAAI,KAAK,EAAoB,IAAA,EAAM,OAAvD,GAEA,OAAO,AADK,KAAK,GAAjB,GACa,GAzEyB,MA0ExC,GAEF,C,EAAO,EAAK,QAAA,CAAS,SAAA,CAAU,EAAK,gBAA7B,E,A,C,EACR,I,C,E,CASK,IAAA,sBAAN,MAAA,W,I,E,I,CAAA,MAAA,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,WAWQ,IAAA,EAEsC,EAApC,EAAkB,EAGpB,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EAfF,GAAA,AAA0B,OAA1B,EAAK,gBAAA,CAAL,MAAA,C,E,E,CACF,MAAA,C,EAAM,EAAK,uBAAL,C,A,M,EAAN,EAAA,IAAA,G,E,K,C,C,M,EAGF,GACE,AAA0B,OAA1B,EAAK,gBAAA,EACL,AAA4C,IAA5C,EAAK,gBAAA,CAAiB,UAAA,CAAW,MAAA,CAEjC,MAJF,C,EAIS,G,CAYL,GAVE,EAAO,KAEL,EAAoC,AAAA,CAAA,EAAA,AA8BhC,SACd,CAAsC,EACtC,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CArIuB,KA4IjB,EAA4C,EAAE,CAEhD,EAAgB,EAAgB,KAApC,GACK,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAA6B,CAAA,CAAA,OAAA,QAAA,CAAA,GAA7B,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,C,I,E,A,WAAK,IAAM,EAAN,EAAA,KAAA,CAEG,EAAiB,EAAiB,IAAA,CACtC,SAAA,CADF,EACQ,OAAA,EAAG,KAAA,GAAU,EAAoB,KAAjC,A,GAER,GAAK,EAgBH,CAAA,GAHA,EAAe,KAAA,CAAM,IAAA,CAAK,EAAoB,IAA9C,EAGI,GAAW,GAAoB,EAEjC,OADA,EAAe,KAAA,CAAM,GAArB,GACA,OACD,MAbD,GAJA,EAAiB,IAAA,CAAK,CACpB,MAAO,EAAoB,KAA3B,CACA,MAAO,CAAC,EAAoB,IAApB,CAAyB,AAClC,GACG,GAAW,GAAoB,EAIjC,OADA,EAAiB,GAAjB,GACA,QAaJ,EAAgB,EAAc,KAAA,CAAM,EACrC,I,G,A,U,E,K,C,C,M,E,CA7BI,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CA8BL,MAAO,CACL,iBAAA,EACA,cAAA,CACD,CACH,EA3EM,EAAK,gBAAA,CAAiB,UAAA,CAAA,EADhB,gBAAA,CAAkB,EAAkB,EAAlB,aAAkB,CAGtC,EAAe,AAAA,GACnB,KAAK,SAAA,CAAU,CAAE,QAAS,EAAG,WAAY,CAAgB,IAG3D,EAAK,gBAAA,CAAiB,qBAAA,CAAwB,EAC1C,CAAA,CAAA,EAAc,MAAA,CAAS,CAAA,EAAvB,MAAA,C,E,E,CAMF,OAJA,EAAK,gBAAA,CAAiB,UAAA,CAAa,EAInC,C,EAAM,EAAK,QAAA,CAAS,SAAA,CAAU,EAAK,gBAA7B,E,A,M,E,OAAN,EAAA,IAAA,G,C,E,E,A,M,EAEA,EAAK,gBAAA,CAAiB,UAAA,CAAa,EAAE,CAEhC,EAAK,QAAA,CAAS,SAAA,CAAU,EAAK,gBAA7B,E,E,K,C,C,M,EAEP,MAAA,C,EAAO,E,A,C,EACR,I,C,E,EAtHU,C,IAyHb,SAAS,KAGP,OAAO,AAFO,IAAI,OAEL,WAAA,GAAc,SAAA,CAAU,EAAG,GAC1C,CAkDa,IAAA,GAAA,W,aAAA,SAAA,EAEQ,CAAgB,EAFxB,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,IAAA,CAAA,GAEQ,IAAG,CAAA,GAAA,CAAH,EACjB,IAAI,CAAC,uBAAA,CAA0B,IAAI,CAAC,4BAApC,E,CAHS,MAAA,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAA,EAAA,C,CAKL,IAAA,+BAAN,MAAA,WAAA,MAAA,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,W,M,A,C,E,E,W,A,E,I,C,S,C,QACE,CAAK,AkBxEO,WACd,GAAI,CACF,MAAO,AAAqB,UAArB,OAAO,SACf,CAAC,MAAO,EAAG,CACV,MAAO,CAAA,CACR,CACH,IlBkEI,C,EACS,CAAA,E,CAEP,C,EAAO,AkB3DJ,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,GAAI,CACF,IAAI,EAAoB,CAAA,EAClB,EACJ,0DACI,EAAU,KAAK,SAAA,CAAU,IAAA,CAAK,EACpC,CAAA,EAAQ,SAAA,CAAY,WAClB,EAAQ,MAAA,CAAO,KAAf,GAEK,GACH,KAAK,SAAA,CAAU,cAAA,CAAe,GAEhC,EAAQ,CAAA,EACV,EACA,EAAQ,eAAA,CAAkB,WACxB,EAAW,CAAA,CACb,EAEA,EAAQ,OAAA,CAAU,W,I,EAChB,EAAO,AAAA,CAAA,AAAa,OAAb,CAAA,EAAA,EAAQ,KAAA,AAAA,GAAK,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAE,OAAA,AAAA,GAAW,GACnC,CACD,CAAC,MAAO,EAAO,CACd,EAAO,EACR,CACH,GlBoCO,IAAA,CAAK,WAAM,MAAA,CAAA,CACX,GAAA,KAAA,CAAM,WAAM,MAAA,CAAA,C,G,A,EAElB,I,C,E,CAIK,IAAA,OAAN,MAAA,W,I,E,I,CAAA,MAAA,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,W,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EAC0B,MAAA,C,EAAM,EAAK,uBAAL,C,A,M,EAC1B,GADoB,EAAlB,IAAA,GACF,MAAA,C,E,E,CACF,MAAA,C,EAAO,CAAE,WAAA,EAAA,AAAc,E,A,M,EAEI,MAAA,C,EAAM,ADlLjB,SACpB,CAAgB,EADI,OAAA,GAAA,KAAA,CAAA,IAAA,CAAA,U,ECkL6C,EAAK,GAAjC,E,A,M,EACjC,MAAA,C,EAAO,AADoB,EAArB,IAAA,IACuB,CAAE,WAAA,EAAA,AAAc,E,A,M,E,M,C,E,A,C,EAEhD,I,C,E,CAEK,IAAA,YAAN,MAAA,SAAgB,CAAuC,E,I,E,I,CAAvD,MAAA,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,W,I,EAKU,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EAJgB,MAAA,C,EAAM,EAAK,uBAAL,C,A,M,EAC1B,GADoB,EAAlB,IAAA,GACF,MAAA,C,E,E,CACF,MAAA,C,E,A,M,EAEiC,MAAA,C,EAAM,EAAK,IAAL,G,A,M,EACvC,OADM,EAA2B,EAA3B,IAAA,GACN,C,EAAO,GAA2B,EAAK,GAAA,CAAK,CAC1C,sBACE,AACA,OADA,CAAA,EAAA,EAAiB,qBAAA,AAAA,GACjB,AAAA,KAAA,IAAA,EAAA,EAAA,EAAyB,qBAF3B,CAGA,WAAY,EAAiB,UAA7B,AACD,G,A,M,E,M,C,E,A,C,EAEJ,I,C,E,CAEK,IAAA,MAAN,MAAA,SAAU,CAAuC,E,I,E,I,CAAjD,MAAA,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,W,I,EAKU,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EAJgB,MAAA,C,EAAM,EAAK,uBAAL,C,A,M,EAC1B,GADoB,EAAlB,IAAA,GACF,MAAA,C,E,E,CACF,MAAA,C,E,A,M,EAEiC,MAAA,C,EAAM,EAAK,IAAL,G,A,M,EACvC,OADM,EAA2B,EAA3B,IAAA,GACN,C,EAAO,GAA2B,EAAK,GAAA,CAAK,CAC1C,sBACE,AACA,OADA,CAAA,EAAA,EAAiB,qBAAA,AAAA,GACjB,AAAA,KAAA,IAAA,EAAA,EAAA,EAAyB,qBAF3B,CAGA,WACE,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,EAAyB,UAAA,EAAA,MAAA,CAC5B,AAAA,CAAA,EAAA,GAAA,CAAA,AAAA,EAAG,EAAiB,UAFtB,EAID,G,A,M,E,M,C,E,A,C,EAEJ,I,C,E,EA1DU,C,IAkEP,SAAU,GAAW,CAAwC,EAEjE,OAAO,AAAA,GAEL,KAAK,SAAA,CAAU,CAAE,QAAS,EAAG,WAAY,CAAe,IACxD,MADwD,AAE5D,CCtQE,GACE,IAAI,GACF,kBACA,SAAA,CAHJ,EAGiB,OAAA,IAAI,GAA0B,EAAU,EAAA,YAIzD,GACE,IAAI,GACF,YACA,SAAA,CAHJ,EAGiB,OAAA,IAAI,GAAqB,EAAU,EAAA,YAMpD,GAAgB3S,GAAMZ,GCXD,IDarB,GAAgBY,GAAMZ,GAAS,WAE/B,GAAgB,UAAW,IX1B7B,AAAA,G,W,SAA+B,M","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","src/index.js","src/js/book-categories.js","src/js/book-categories-rendering.js","src/js/bestsellers.js","src/js/modal-book-card.js","node_modules/@parcel/runtime-js/lib/runtime-32015e9fe6e3a916.js","node_modules/@parcel/runtime-js/lib/runtime-108cf69131f4df2a.js","node_modules/@parcel/runtime-js/lib/runtime-d0c817fa7356b4f5.js","node_modules/@parcel/runtime-js/lib/runtime-b4e5a9ccb4705906.js","node_modules/@parcel/runtime-js/lib/runtime-bafc094ce5955f4b.js","node_modules/@parcel/runtime-js/lib/runtime-113ea2cd747daa7d.js","src/js/modal-login-form.js","src/js/scrollBtn.js","src/js/service-firebase.js","node_modules/firebase/app/dist/esm/index.esm.js","node_modules/firebase/app/index.ts","node_modules/@firebase/app/dist/esm/index.esm2017.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/app/src/index.ts","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@firebase/component/dist/esm/index.esm2017.js","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/util/dist/index.esm2017.js","node_modules/@firebase/util/src/constants.ts","node_modules/@firebase/util/src/assert.ts","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/global.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/uuid.ts","node_modules/@firebase/util/src/exponential_backoff.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/util/src/compat.ts","node_modules/@swc/helpers/esm/_wrap_native_super.js","node_modules/@swc/helpers/esm/_construct.js","node_modules/@swc/helpers/esm/_is_native_function.js","node_modules/process/browser.js","node_modules/@firebase/logger/dist/esm/index.esm2017.js","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/index.js","node_modules/@swc/helpers/esm/_object_spread.js","node_modules/@swc/helpers/esm/_object_spread_props.js","node_modules/idb/build/wrap-idb-value.js"],"sourcesContent":["(function () {\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire9432\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire9432\"] = parcelRequire;\n}\nparcelRequire.register(\"aNJCr\", function(module, exports) {\n\n$parcel$export(module.exports, \"getBundleURL\", function () { return $7dd1ddf6834435ca$export$bdfd709ae4826697; }, function (v) { return $7dd1ddf6834435ca$export$bdfd709ae4826697 = v; });\nvar $7dd1ddf6834435ca$export$bdfd709ae4826697;\nvar $7dd1ddf6834435ca$export$c9e73fbda7da57b6;\nvar $7dd1ddf6834435ca$export$5a759dc7a1cfb72a;\n\"use strict\";\nvar $7dd1ddf6834435ca$var$bundleURL = {};\nfunction $7dd1ddf6834435ca$var$getBundleURLCached(id) {\n    var value = $7dd1ddf6834435ca$var$bundleURL[id];\n    if (!value) {\n        value = $7dd1ddf6834435ca$var$getBundleURL();\n        $7dd1ddf6834435ca$var$bundleURL[id] = value;\n    }\n    return value;\n}\nfunction $7dd1ddf6834435ca$var$getBundleURL() {\n    try {\n        throw new Error();\n    } catch (err) {\n        var matches = (\"\" + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n        if (matches) // The first two stack frames will be this function and getBundleURLCached.\n        // Use the 3rd one, which will be a runtime in the original bundle.\n        return $7dd1ddf6834435ca$var$getBaseURL(matches[2]);\n    }\n    return \"/\";\n}\nfunction $7dd1ddf6834435ca$var$getBaseURL(url) {\n    return (\"\" + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, \"$1\") + \"/\";\n}\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction $7dd1ddf6834435ca$var$getOrigin(url) {\n    var matches = (\"\" + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n    if (!matches) throw new Error(\"Origin not found\");\n    return matches[0];\n}\n$7dd1ddf6834435ca$export$bdfd709ae4826697 = $7dd1ddf6834435ca$var$getBundleURLCached;\n$7dd1ddf6834435ca$export$c9e73fbda7da57b6 = $7dd1ddf6834435ca$var$getBaseURL;\n$7dd1ddf6834435ca$export$5a759dc7a1cfb72a = $7dd1ddf6834435ca$var$getOrigin;\n\n});\n\nparcelRequire(\"7SQp7\");\nparcelRequire(\"i8Q71\");\nparcelRequire(\"aOrXb\");\n\nvar $i7mVp = parcelRequire(\"i7mVp\");\n\nvar $4tSb9 = parcelRequire(\"4tSb9\");\n\nvar $7SQp7 = parcelRequire(\"7SQp7\");\n\nvar $i7mVp = parcelRequire(\"i7mVp\");\n\nvar $4tSb9 = parcelRequire(\"4tSb9\");\n\nvar $7SQp7 = parcelRequire(\"7SQp7\");\n// const BASE_URL_MY =\n//   'https://books-backend.p.goit.global/books/category?category=';\n// const ENDPOINT = 'Series%20Books';\n// const API_KEY = '';\n// let page = 1;\n// const list = document.querySelector('.js-list-rendering');\n// const loadMore = document.querySelector('.js-load_more-rendering');\nvar $11eb9efd788528e0$var$bookCollection = document.querySelector(\".books-gallery\");\nvar $11eb9efd788528e0$var$api = new (0, $7SQp7.APIService)();\nfunction $11eb9efd788528e0$export$2e2bcd8739ae039(category) {\n    return $11eb9efd788528e0$var$_createMarkup.apply(this, arguments);\n}\nfunction $11eb9efd788528e0$var$_createMarkup() {\n    $11eb9efd788528e0$var$_createMarkup = (0, $i7mVp._)(function(category) {\n        var res, books;\n        function collectionMarkup() {\n            return '<h1 class=\"collection-title\">Books</h1>\\n    <ul class=\"top-books rendering-gap js-list-rendering\">\\n    '.concat(books.map(function(param) {\n                var title = param.title, book_image = param.book_image, author = param.author, _id = param._id;\n                return '<li class=\"book-card\" id=\"'.concat(_id, '\">\\n      <img class=\"book-cover\" src=\"').concat(book_image, '\" alt=\"').concat(title, '\">\\n      <h2 class=\"book-name\">').concat(title, '</h2>\\n      <h3 class=\"book-author\">').concat(author, \"</h3>\\n  </li>\");\n            }).join(\"\"), \"\\n    </ul>\");\n        }\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    return [\n                        4,\n                        $11eb9efd788528e0$var$api.fetchBooksByCategory(category)\n                    ];\n                case 1:\n                    res = _state.sent();\n                    return [\n                        4,\n                        res.data\n                    ];\n                case 2:\n                    books = _state.sent();\n                    console.log(books);\n                    $11eb9efd788528e0$var$bookCollection.innerHTML = collectionMarkup();\n                    return [\n                        2\n                    ];\n            }\n        });\n    } // const collectionMarkup = books\n     //     .map(({ title, book_image, author, _id }) => {\n     //       return `<li class=\"book-card \" id=\"${_id}\">\n     //       <img class=\"book-cover\" src=\"${book_image}\" alt=\"${title}\">\n     //       <h2 class=\"book-name\">${title}</h2>\n     //       <h3 class=\"book-author\">${author}</h3>\n     //   </li>`;\n     //     })\n     //     .join('');\n     //   bookCollection.innerHTML = collectionMarkup;\n     // loadMore.addEventListener('click', handlerPagination);\n     // servisBook()\n     //   .then(data => {\n     //     list.insertAdjacentHTML('beforeend', createMarkup(data));\n     //   })\n     //   .catch(err => console.log(err));\n     // function createMarkup(arr) {\n     //   return arr\n     //     .map(\n     //       ({\n     //         title,\n     //         book_image,\n     //         author,\n     //         _id,\n     //       }) => `<li class=\"flex-element\" id=\"${_id}\">\n     //       <img src=\"${book_image}\" alt=\"${title}\">\n     //       <h2>${title}</h2>\n     //       <p>${author}</p>\n     //   </li>`\n     //     )\n     //     .join('');\n     // }\n    );\n    return $11eb9efd788528e0$var$_createMarkup.apply(this, arguments);\n}\n\n\nvar $f29943a457ca4185$var$api = new (0, $7SQp7.APIService)();\nvar $f29943a457ca4185$var$categoriesList = document.querySelector(\".book-category__list\");\nfunction $f29943a457ca4185$var$getBooksCategoryList() {\n    return $f29943a457ca4185$var$_getBooksCategoryList.apply(this, arguments);\n}\nfunction $f29943a457ca4185$var$_getBooksCategoryList() {\n    $f29943a457ca4185$var$_getBooksCategoryList = // const bookCollection = document.querySelector('.books-gallery');\n    (0, $i7mVp._)(function() {\n        var resp, data;\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    return [\n                        4,\n                        $f29943a457ca4185$var$api.fetchBooksCategoryList()\n                    ];\n                case 1:\n                    resp = _state.sent();\n                    return [\n                        4,\n                        resp.data\n                    ];\n                case 2:\n                    data = _state.sent();\n                    return [\n                        2,\n                        data\n                    ];\n            }\n        });\n    });\n    return $f29943a457ca4185$var$_getBooksCategoryList.apply(this, arguments);\n}\nfunction $f29943a457ca4185$var$getBookCategory() {\n    return $f29943a457ca4185$var$_getBookCategory.apply(this, arguments);\n}\nfunction $f29943a457ca4185$var$_getBookCategory() {\n    $f29943a457ca4185$var$_getBookCategory = (0, $i7mVp._)(function() {\n        var categories, markup, error;\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    _state.trys.push([\n                        0,\n                        2,\n                        ,\n                        3\n                    ]);\n                    return [\n                        4,\n                        $f29943a457ca4185$var$getBooksCategoryList()\n                    ];\n                case 1:\n                    categories = _state.sent();\n                    markup = categories.map(function(cat) {\n                        return '<li class=\"book-category__list-item\">'.concat(cat.list_name, \"</li>\");\n                    }).join(\"\");\n                    $f29943a457ca4185$var$categoriesList.insertAdjacentHTML(\"beforeend\", markup);\n                    return [\n                        3,\n                        3\n                    ];\n                case 2:\n                    error = _state.sent();\n                    console.log(error);\n                    return [\n                        3,\n                        3\n                    ];\n                case 3:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return $f29943a457ca4185$var$_getBookCategory.apply(this, arguments);\n}\nif ($f29943a457ca4185$var$categoriesList) {\n    $f29943a457ca4185$var$getBookCategory();\n    $f29943a457ca4185$var$categoriesList.addEventListener(\"click\", $f29943a457ca4185$var$onCategoryListSearchCategory);\n}\nfunction $f29943a457ca4185$var$onCategoryListSearchCategory(e) {\n    return $f29943a457ca4185$var$_onCategoryListSearchCategory.apply(this, arguments);\n}\nfunction $f29943a457ca4185$var$_onCategoryListSearchCategory() {\n    $f29943a457ca4185$var$_onCategoryListSearchCategory = (0, $i7mVp._)(function(e) {\n        var items;\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    if (e.target.nodeName !== \"LI\") return [\n                        2\n                    ];\n                    console.log(e.target);\n                    if (e.target.classList.contains(\"active\")) e.target.classList.remove(\"active\");\n                    else {\n                        items = document.querySelectorAll(\".book-category__list-item\");\n                        items.forEach(function(el) {\n                            return el.classList.remove(\"active\");\n                        });\n                        e.target.classList.add(\"active\");\n                    }\n                    return [\n                        4,\n                        (0, $11eb9efd788528e0$export$2e2bcd8739ae039)(e.target.textContent)\n                    ];\n                case 1:\n                    _state.sent();\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return $f29943a457ca4185$var$_onCategoryListSearchCategory.apply(this, arguments);\n}\n\n\n\nvar $i7mVp = parcelRequire(\"i7mVp\");\n\nvar $4tSb9 = parcelRequire(\"4tSb9\");\n\nvar $7SQp7 = parcelRequire(\"7SQp7\");\nvar $a102954a56e30d1d$var$api = new (0, $7SQp7.APIService)();\nvar $a102954a56e30d1d$var$bookCollection = document.querySelector(\".books-collection\");\nfunction $a102954a56e30d1d$var$getBestSellers() {\n    return $a102954a56e30d1d$var$_getBestSellers.apply(this, arguments);\n}\nfunction $a102954a56e30d1d$var$_getBestSellers() {\n    $a102954a56e30d1d$var$_getBestSellers = (0, $i7mVp._)(function() {\n        var response, bestSellers;\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    return [\n                        4,\n                        $a102954a56e30d1d$var$api.fetchBestSellersBooks()\n                    ];\n                case 1:\n                    response = _state.sent();\n                    return [\n                        4,\n                        response.data\n                    ];\n                case 2:\n                    bestSellers = _state.sent();\n                    return [\n                        2,\n                        bestSellers\n                    ];\n            }\n        });\n    });\n    return $a102954a56e30d1d$var$_getBestSellers.apply(this, arguments);\n}\nfunction $a102954a56e30d1d$var$createBookCategoryMarkup(category) {\n    return '\\n    <li class=\"book-category-item\">\\n      <p class=\"book-category\">'.concat(category.list_name, '</p>\\n      <ul class=\"top-books js-list-rendering\">\\n        ').concat(category.books.map(function(book) {\n        return '\\n              <li class=\"book-card flex-element\" id='.concat(book._id, '>\\n                <img class=\"book-cover\" src=\"').concat(book.book_image, '\" alt=\"').concat(book.title, '\" />\\n                <h2 class=\"book-name\">').concat(book.title, '</h2>\\n                <h3 class=\"book-author\">').concat(book.author, \"</h3>\\n              </li>\\n            \");\n    }).join(\"\"), '\\n      </ul>\\n      <button class=\"book-card-btn\" type=\"button\">see more</button>\\n    </li>\\n  ');\n}\nfunction $a102954a56e30d1d$var$renderCategories() {\n    return $a102954a56e30d1d$var$_renderCategories.apply(this, arguments);\n}\nfunction $a102954a56e30d1d$var$_renderCategories() {\n    $a102954a56e30d1d$var$_renderCategories = (0, $i7mVp._)(function() {\n        var bookCategories, topBooks, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, category;\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    bookCategories = \"\";\n                    return [\n                        4,\n                        $a102954a56e30d1d$var$getBestSellers()\n                    ];\n                case 1:\n                    topBooks = _state.sent();\n                    console.log(topBooks);\n                    _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                    try {\n                        for(_iterator = topBooks[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                            category = _step.value;\n                            bookCategories += $a102954a56e30d1d$var$createBookCategoryMarkup(category);\n                        }\n                    } catch (err) {\n                        _didIteratorError = true;\n                        _iteratorError = err;\n                    } finally{\n                        try {\n                            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                                _iterator.return();\n                            }\n                        } finally{\n                            if (_didIteratorError) {\n                                throw _iteratorError;\n                            }\n                        }\n                    }\n                    $a102954a56e30d1d$var$bookCollection.innerHTML = bookCategories;\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return $a102954a56e30d1d$var$_renderCategories.apply(this, arguments);\n}\nif ($a102954a56e30d1d$var$bookCollection) {\n    $a102954a56e30d1d$var$renderCategories();\n    $a102954a56e30d1d$var$bookCollection === null || $a102954a56e30d1d$var$bookCollection === void 0 ? void 0 : $a102954a56e30d1d$var$bookCollection.addEventListener(\"click\", $a102954a56e30d1d$var$onSeeMoreBtnClick);\n}\n// cutting text\n// const limit = 18;\n//             const text = book.title;\n//             console.log(text);\n//             let cuttedText = text.slice(0, limit);\n//             if (text.length > limit) {\n//               cuttedText += '...';\n//             }\nvar $a102954a56e30d1d$var$titleCollection = document.querySelector(\".collection-title\");\n$a102954a56e30d1d$var$bookCollection.addEventListener(\"click\", $a102954a56e30d1d$var$onSeeMoreBtnClick);\nfunction $a102954a56e30d1d$var$onSeeMoreBtnClick(e) {\n    return $a102954a56e30d1d$var$_onSeeMoreBtnClick.apply(this, arguments);\n}\nfunction $a102954a56e30d1d$var$_onSeeMoreBtnClick() {\n    $a102954a56e30d1d$var$_onSeeMoreBtnClick = (0, $i7mVp._)(function(e) {\n        var target, category, res, books, collectionMarkup;\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    if (e.target.nodeName !== \"BUTTON\") return [\n                        2\n                    ];\n                    target = e.target;\n                    if (!target.matches(\"button[data-category]\")) return [\n                        3,\n                        3\n                    ];\n                    category = target.dataset.category;\n                    console.log(category);\n                    return [\n                        4,\n                        $a102954a56e30d1d$var$api.fetchBooksByCategory(category)\n                    ];\n                case 1:\n                    res = _state.sent();\n                    return [\n                        4,\n                        res.data\n                    ];\n                case 2:\n                    books = _state.sent();\n                    console.log(books);\n                    collectionMarkup = books.map(function(param) {\n                        var title = param.title, book_image = param.book_image, author = param.author, _id = param._id;\n                        $a102954a56e30d1d$var$titleCollection.textContent = category;\n                        console.log($a102954a56e30d1d$var$titleCollection.textContent);\n                        return '<li class=\"flex-element\" id=\"'.concat(_id, '\">\\n      <img src=\"').concat(book_image, '\" alt=\"').concat(title, '\">\\n      <h2>').concat(title, \"</h2>\\n      <p>\").concat(author, \"</p>\\n  </li>\");\n                    }).join(\"\");\n                    $a102954a56e30d1d$var$bookCollection.innerHTML = collectionMarkup;\n                    _state.label = 3;\n                case 3:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return $a102954a56e30d1d$var$_onSeeMoreBtnClick.apply(this, arguments);\n}\n\n\n\n\nvar $i7mVp = parcelRequire(\"i7mVp\");\n\nvar $4tSb9 = parcelRequire(\"4tSb9\");\n\nvar $7SQp7 = parcelRequire(\"7SQp7\");\nvar $e10224ce897607e1$exports = {};\n\n\n$e10224ce897607e1$exports = (parcelRequire(\"aNJCr\")).getBundleURL(\"EVgbq\") + (parcelRequire(\"iE7OH\")).resolve(\"iz5nZ\");\n\n\nvar $fe660a9cef1fd9f7$exports = {};\n\n\n$fe660a9cef1fd9f7$exports = (parcelRequire(\"aNJCr\")).getBundleURL(\"EVgbq\") + (parcelRequire(\"iE7OH\")).resolve(\"etq4A\");\n\n\nvar $b32889c2231bd76a$exports = {};\n\n\n$b32889c2231bd76a$exports = (parcelRequire(\"aNJCr\")).getBundleURL(\"EVgbq\") + (parcelRequire(\"iE7OH\")).resolve(\"mCCOp\");\n\n\nvar $b147b9d154975881$exports = {};\n\n\n$b147b9d154975881$exports = (parcelRequire(\"aNJCr\")).getBundleURL(\"EVgbq\") + (parcelRequire(\"iE7OH\")).resolve(\"iZ8qR\");\n\n\nvar $9877f09cd1b7e4f7$exports = {};\n\n\n$9877f09cd1b7e4f7$exports = (parcelRequire(\"aNJCr\")).getBundleURL(\"EVgbq\") + (parcelRequire(\"iE7OH\")).resolve(\"gmnG0\");\n\n\nvar $cac8ef1a89390b2f$exports = {};\n\n\n$cac8ef1a89390b2f$exports = (parcelRequire(\"aNJCr\")).getBundleURL(\"EVgbq\") + (parcelRequire(\"iE7OH\")).resolve(\"95GBg\");\n\n\nvar $1b116471259b6080$var$allModal = document.querySelector(\"#allModal\"); //\n// const bookList = document.querySelector('.js-list-rendering'); // з js Сергія + я додала, що в li додавався id\nvar $1b116471259b6080$var$bookList = document.querySelector(\".books-gallery\"); // проблема була в назві стилю\nvar $1b116471259b6080$var$addStorageBtn = document.querySelector(\".add-storage-button\"); //\nvar $1b116471259b6080$var$removeStorageBtn = document.querySelector(\".remove-storage-btn\"); //\nvar $1b116471259b6080$var$storageDescription = document.querySelector(\".storage-info\"); //\nvar $1b116471259b6080$var$apiBook = new (0, $7SQp7.APIService)();\nvar $1b116471259b6080$var$STORAGE_KEY = \"storage-data\";\nvar $1b116471259b6080$var$storageArr = [];\nvar $1b116471259b6080$var$storageObj = {};\nif ($1b116471259b6080$var$bookList) {\n    $1b116471259b6080$var$addStorageBtn.addEventListener(\"click\", $1b116471259b6080$var$onStorageAdd);\n    $1b116471259b6080$var$removeStorageBtn.addEventListener(\"click\", $1b116471259b6080$var$onStorageDelete);\n    $1b116471259b6080$var$bookList.addEventListener(\"click\", $1b116471259b6080$var$onIdClick);\n}\nvar $1b116471259b6080$var$idModal = document.querySelector(\".about-book-modal\");\nvar $1b116471259b6080$var$idBackdropModal = document.querySelector(\".card-backdrop-modal\");\nfunction $1b116471259b6080$var$openModalId() {\n    $1b116471259b6080$var$idModal.classList.remove(\"is-hidden\");\n    $1b116471259b6080$var$idBackdropModal.classList.remove(\"is-hidden\");\n}\nfunction $1b116471259b6080$var$onIdClick(e) {\n    if (e.target.nodeName === \"BUTTON\" || e.target.nodeName === \"UL\" || e.target.nodeName === \"DIV\" || e.target.nodeName === \"H3\") return;\n    var id = e.target.closest(\"li\").id;\n    $1b116471259b6080$var$openModalId();\n    $1b116471259b6080$var$createModal(id);\n}\nfunction $1b116471259b6080$var$createModal(bookId) {\n    return $1b116471259b6080$var$_createModal.apply(this, arguments);\n}\nfunction $1b116471259b6080$var$_createModal() {\n    $1b116471259b6080$var$_createModal = (0, $i7mVp._)(function(bookId) {\n        var data, error;\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    $1b116471259b6080$var$allModal.innerHTML = \"\";\n                    _state.label = 1;\n                case 1:\n                    _state.trys.push([\n                        1,\n                        3,\n                        ,\n                        4\n                    ]);\n                    return [\n                        4,\n                        $1b116471259b6080$var$fetchBookById(bookId)\n                    ];\n                case 2:\n                    data = _state.sent();\n                    $1b116471259b6080$var$storageCheck();\n                    $1b116471259b6080$var$createMarkup(data);\n                    return [\n                        2,\n                        data\n                    ];\n                case 3:\n                    error = _state.sent();\n                    console.error(\"Error\", error);\n                    throw error;\n                case 4:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return $1b116471259b6080$var$_createModal.apply(this, arguments);\n}\nfunction $1b116471259b6080$var$fetchBookById(bookId) {\n    return $1b116471259b6080$var$_fetchBookById.apply(this, arguments);\n}\nfunction $1b116471259b6080$var$_fetchBookById() {\n    $1b116471259b6080$var$_fetchBookById = (0, $i7mVp._)(function(bookId) {\n        var response, data, error;\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    _state.trys.push([\n                        0,\n                        2,\n                        ,\n                        3\n                    ]);\n                    $1b116471259b6080$var$storageObj = {};\n                    return [\n                        4,\n                        $1b116471259b6080$var$apiBook.fetchBookInfo(bookId)\n                    ];\n                case 1:\n                    response = _state.sent();\n                    data = response.data;\n                    $1b116471259b6080$var$storageObj = {\n                        book_image: data.book_image,\n                        title: data.title,\n                        author: data.author,\n                        marketAmazon: data.buy_links[0].url,\n                        marketAppleBooks: data.buy_links[1].url,\n                        marketBookshop: data.buy_links[4].url,\n                        list_name: data.list_name,\n                        id: data._id,\n                        description: data.description\n                    };\n                    return [\n                        2,\n                        data\n                    ];\n                case 2:\n                    error = _state.sent();\n                    console.error(\"Error\", error);\n                    throw error;\n                case 3:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return $1b116471259b6080$var$_fetchBookById.apply(this, arguments);\n}\nfunction $1b116471259b6080$var$storageCheck() {\n    var storageArr = JSON.parse(localStorage.getItem($1b116471259b6080$var$STORAGE_KEY));\n    var idToFind = $1b116471259b6080$var$storageObj.id;\n    if (!storageArr || storageArr.length === 0) {\n        $1b116471259b6080$var$addStorageBtn.style.display = \"block\";\n        $1b116471259b6080$var$removeStorageBtn.style.display = \"none\";\n        return;\n    } else {\n        var objToFind = storageArr.find(function(obj) {\n            return obj.id === idToFind;\n        });\n        if (!objToFind) {\n            $1b116471259b6080$var$addStorageBtn.style.display = \"block\";\n            $1b116471259b6080$var$removeStorageBtn.style.display = \"none\";\n        } else {\n            $1b116471259b6080$var$addStorageBtn.style.display = \"none\";\n            $1b116471259b6080$var$removeStorageBtn.style.display = \"block\";\n        }\n    }\n}\nfunction $1b116471259b6080$var$createMarkup(data) {\n    var bookModalImage = data.book_image;\n    var bookTitle = data.title;\n    var bookAuthor = data.author;\n    var marketAmazon = data.buy_links[0].url;\n    var marketAppleBooks = data.buy_links[1].url;\n    var marketBookshop = data.buy_links[4].url;\n    var bookDescription = data.description;\n    //перевірка на наявність опису книги в api\n    var descriptionMarkup = bookDescription;\n    if (bookDescription === \"\") descriptionMarkup = \"Unfortunately, a brief description of this book is currently unavailable. But let that not hinder you from opening its pages and immersing yourself in the unforgettable world it creates.\";\n    var html = '  \\n  <img src=\"'.concat(bookModalImage, '\" alt=\"Book Image\" class=\"image-about-book-modal\">\\n  <div class=\"info-modal\">\\n  <h2 class=\"title-about-book-modal\">').concat(bookTitle, '</h2>\\n  <p class=\"author-about-book-modal\"> ').concat(bookAuthor, '</p>\\n  <p class=\"text-about-book-modal\">').concat(descriptionMarkup, '</p>\\n  <ul class=\"shop-modal-list\"> <li class=\"shop-modal-item\"><a href=\"').concat(marketAmazon, '\" target=\"_blank\"\\n    > <img\\n     width=\"62\"\\n    height=\"19\"\\n    srcset=\"\\n    ').concat((0, (/*@__PURE__*/$parcel$interopDefault($e10224ce897607e1$exports))), \" 1x,\\n    \").concat((0, (/*@__PURE__*/$parcel$interopDefault($fe660a9cef1fd9f7$exports))), ' 2x\\n  \"\\n   src=\"').concat((0, (/*@__PURE__*/$parcel$interopDefault($e10224ce897607e1$exports))), '\"\\n    alt=\"Amazon\"\\n  /></a></li>\\n  <li class=\"shop-modal-item\"><a href=\"').concat(marketAppleBooks, '\" target=\"_blank\"\\n    > <img\\n    width=\"33\"\\n    height=\"32\"\\n    srcset=\"\\n    ').concat((0, (/*@__PURE__*/$parcel$interopDefault($b32889c2231bd76a$exports))), \" 1x,\\n    \").concat((0, (/*@__PURE__*/$parcel$interopDefault($b147b9d154975881$exports))), ' 2x\\n  \"\\n   src=\"').concat((0, (/*@__PURE__*/$parcel$interopDefault($b32889c2231bd76a$exports))), '\"\\n    alt=\"AppleBooks\"\\n  /></a></li>\\n  <li class=\"shop-modal-item\"><a href=\"').concat(marketBookshop, '\" target=\"_blank\"\\n    > <img\\n    width=\"38\"\\n    height=\"36\"\\n    srcset=\"\\n    ').concat((0, (/*@__PURE__*/$parcel$interopDefault($9877f09cd1b7e4f7$exports))), \" 1x,\\n    \").concat((0, (/*@__PURE__*/$parcel$interopDefault($cac8ef1a89390b2f$exports))), ' 2x\\n  \"\\n   src=\"').concat((0, (/*@__PURE__*/$parcel$interopDefault($9877f09cd1b7e4f7$exports))), '\"\\n    alt=\"Book-Shop\"\\n  /></a></li>\\n</ul>\\n</div>\\n  ');\n    $1b116471259b6080$var$allModal.innerHTML = html;\n}\nfunction $1b116471259b6080$var$onStorageAdd() {\n    var realStorageArr = JSON.parse(localStorage.getItem($1b116471259b6080$var$STORAGE_KEY));\n    var dataToSave = $1b116471259b6080$var$storageObj;\n    if (!realStorageArr || realStorageArr.length === 0) {\n        $1b116471259b6080$var$storageArr.push(dataToSave);\n        localStorage.setItem($1b116471259b6080$var$STORAGE_KEY, JSON.stringify($1b116471259b6080$var$storageArr));\n    } else {\n        realStorageArr.push(dataToSave);\n        localStorage.setItem($1b116471259b6080$var$STORAGE_KEY, JSON.stringify(realStorageArr));\n    }\n    $1b116471259b6080$var$storageDescription.textContent = \"Сongratulations! You have added the book to the shopping list. To delete, press the button “Remove from the shopping list”.\";\n    $1b116471259b6080$var$storageCheck();\n}\nfunction $1b116471259b6080$var$onStorageDelete() {\n    $1b116471259b6080$var$storageDescription.textContent = \"\";\n    var idToDelete = $1b116471259b6080$var$storageObj.id;\n    var storageArr = JSON.parse(localStorage.getItem($1b116471259b6080$var$STORAGE_KEY));\n    var indexToDelete = storageArr.findIndex(function(obj) {\n        return obj.id === idToDelete;\n    });\n    storageArr.splice(indexToDelete, 1);\n    localStorage.setItem($1b116471259b6080$var$STORAGE_KEY, JSON.stringify(storageArr));\n    $1b116471259b6080$var$storageCheck();\n}\n// Функція, яка закриває модальне вікно\nvar $1b116471259b6080$var$backdrop = document.querySelector(\".card-backdrop-modal\");\nvar $1b116471259b6080$var$modal = document.querySelector(\".modal\");\nvar $1b116471259b6080$var$closeButton = document.getElementById(\"modal-close\");\nfunction $1b116471259b6080$var$closeModal() {\n    $1b116471259b6080$var$backdrop.classList.add(\"is-hidden\");\n    $1b116471259b6080$var$modal.classList.add(\"is-hidden\");\n    document.body.classList.remove(\"modal-open\");\n    document.removeEventListener(\"keydown\", $1b116471259b6080$var$closeModalOnEsc);\n}\n// Функція, яка закриває модальне вікно при кліку на backdrop\nfunction $1b116471259b6080$var$closeModalOnBackdropClick(event) {\n    if (event.target === $1b116471259b6080$var$backdrop) $1b116471259b6080$var$closeModal();\n}\n// Функція, яка закриває модальне вікно при кліку на хрестик\nfunction $1b116471259b6080$var$closeModalOnButton() {\n    $1b116471259b6080$var$closeModal();\n}\n// Функція, яка закриває модальне вікно при натисканні на ESC\nfunction $1b116471259b6080$var$closeModalOnEsc(event) {\n    if (event.key === \"Escape\") $1b116471259b6080$var$closeModal();\n}\nif ($1b116471259b6080$var$modal) {\n    // Додавання обробників подій\n    $1b116471259b6080$var$backdrop.addEventListener(\"click\", $1b116471259b6080$var$closeModalOnBackdropClick);\n    $1b116471259b6080$var$closeButton.addEventListener(\"click\", $1b116471259b6080$var$closeModalOnButton);\n}\n\n\n// кнопка, що відкриває модальне вікно\nvar $7ccb93ad7dccd8b1$var$btn = document.querySelector(\".authorisation-btn\");\n// модальне вікно\nvar $7ccb93ad7dccd8b1$var$modal = document.querySelector(\".modal-login-form\");\n// хрестик для закриття модального вікна\nvar $7ccb93ad7dccd8b1$var$closeBtn = document.querySelector(\".modal-login-form-close-btn\");\nvar $7ccb93ad7dccd8b1$var$overlayLoginForm = document.querySelector(\".overlayLoginForm\");\n// Функція приховування модального вікна\nfunction $7ccb93ad7dccd8b1$var$hideModal() {\n    $7ccb93ad7dccd8b1$var$modal.style.display = \"none\";\n    $7ccb93ad7dccd8b1$var$overlayLoginForm.style.display = \"none\";\n}\nif ($7ccb93ad7dccd8b1$var$modal) {\n    // клік відкриває модальне вікно\n    $7ccb93ad7dccd8b1$var$btn.onclick = function() {\n        $7ccb93ad7dccd8b1$var$modal.style.display = \"block\";\n        $7ccb93ad7dccd8b1$var$overlayLoginForm.style.display = \"block\";\n    };\n    // При натисканні на хрестик закриваємо модальне вікно\n    $7ccb93ad7dccd8b1$var$closeBtn.onclick = $7ccb93ad7dccd8b1$var$hideModal;\n    // При кліку поза модальним вікном або на бекдропі закриваємо його\n    window.onclick = function(event) {\n        if (event.target === $7ccb93ad7dccd8b1$var$modal || event.target === $7ccb93ad7dccd8b1$var$overlayLoginForm) $7ccb93ad7dccd8b1$var$hideModal();\n    };\n    // При натисканні кнопки Esc закриваємо модальне вікно\n    window.addEventListener(\"keydown\", function(event) {\n        if (event.key === \"Escape\") $7ccb93ad7dccd8b1$var$hideModal();\n    });\n}\n\n\nparcelRequire(\"2ayrj\");\nparcelRequire(\"50Y4H\");\nvar $2fd3538c1b9e29a1$var$scrollBtn = {\n    btn: document.querySelector(\".scrollBtn\"),\n    show: function() {\n        this.btn.classList.remove(\"scrollBtn-hide\");\n    },\n    hide: function() {\n        this.btn.classList.add(\"scrollBtn-hide\");\n    },\n    addEventListener: function() {\n        var _this = this;\n        if (this.btn) {\n            window.addEventListener(\"scroll\", function() {\n                var scrollY = window.scrollY || document.documentElement.scrollTop;\n                scrollY > 100 ? _this.show() : _this.hide();\n            });\n            this.btn.onclick = function() {\n                window.scrollTo({\n                    top: 0,\n                    behavior: \"smooth\"\n                });\n            };\n        }\n    }\n};\n$2fd3538c1b9e29a1$var$scrollBtn.addEventListener();\n\n\n\nvar $i7mVp = parcelRequire(\"i7mVp\");\n\nvar $juqrk = parcelRequire(\"juqrk\");\n\nvar $bNI6E = parcelRequire(\"bNI6E\");\nfunction $a568c0d5880c90ba$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\n\nvar $aYXpI = parcelRequire(\"aYXpI\");\n\nvar $4tSb9 = parcelRequire(\"4tSb9\");\n\nvar $i7mVp = parcelRequire(\"i7mVp\");\n\nvar $juqrk = parcelRequire(\"juqrk\");\n\nvar $bNI6E = parcelRequire(\"bNI6E\");\n\nvar $fGQt0 = parcelRequire(\"fGQt0\");\n\nvar $aYXpI = parcelRequire(\"aYXpI\");\n\nvar $4tSb9 = parcelRequire(\"4tSb9\");\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */ \nvar $cquyX = parcelRequire(\"cquyX\");\n\nvar $juqrk = parcelRequire(\"juqrk\");\n\nvar $bNI6E = parcelRequire(\"bNI6E\");\n\nvar $jqfyu = parcelRequire(\"jqfyu\");\n\nvar $fGQt0 = parcelRequire(\"fGQt0\");\n\nvar $aYXpI = parcelRequire(\"aYXpI\");\n\nvar $8ZYwq = parcelRequire(\"8ZYwq\");\n\nvar $3A6Ss = parcelRequire(\"3A6Ss\");\nfunction $2537243cab6b0016$export$2d841144c5f8c4ab(Parent, args, Class) {\n    if ((0, $8ZYwq._is_native_reflect_construct)()) $2537243cab6b0016$export$2d841144c5f8c4ab = Reflect.construct;\n    else $2537243cab6b0016$export$2d841144c5f8c4ab = function construct(Parent, args, Class) {\n        var a = [\n            null\n        ];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) (0, $3A6Ss._set_prototype_of)(instance, Class.prototype);\n        return instance;\n    };\n    return $2537243cab6b0016$export$2d841144c5f8c4ab.apply(null, arguments);\n}\n\n\n\nvar $5yT7U = parcelRequire(\"5yT7U\");\nfunction $e28541d141bc916c$export$514eda94019f4334(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\n\n\nvar $3A6Ss = parcelRequire(\"3A6Ss\");\nfunction $c96ca6cb05cc1798$export$2466d533fda16e33(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    $c96ca6cb05cc1798$export$2466d533fda16e33 = function(Class) {\n        if (Class === null || !(0, $e28541d141bc916c$export$514eda94019f4334)(Class)) return Class;\n        if (typeof Class !== \"function\") throw new TypeError(\"Super expression must either be null or a function\");\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n        function Wrapper() {\n            return (0, $2537243cab6b0016$export$2d841144c5f8c4ab)(Class, arguments, (0, $5yT7U._get_prototype_of)(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, {\n            constructor: {\n                value: Wrapper,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        return (0, $3A6Ss._set_prototype_of)(Wrapper, Class);\n    };\n    return $c96ca6cb05cc1798$export$2466d533fda16e33(Class);\n}\n\n\n\nvar $50zho = parcelRequire(\"50zho\");\nvar $4acf49f6c3e67aec$exports = {};\n// shim for using process in browser\nvar $4acf49f6c3e67aec$var$process = $4acf49f6c3e67aec$exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $4acf49f6c3e67aec$var$cachedSetTimeout;\nvar $4acf49f6c3e67aec$var$cachedClearTimeout;\nfunction $4acf49f6c3e67aec$var$defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction $4acf49f6c3e67aec$var$defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") $4acf49f6c3e67aec$var$cachedSetTimeout = setTimeout;\n        else $4acf49f6c3e67aec$var$cachedSetTimeout = $4acf49f6c3e67aec$var$defaultSetTimout;\n    } catch (e) {\n        $4acf49f6c3e67aec$var$cachedSetTimeout = $4acf49f6c3e67aec$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") $4acf49f6c3e67aec$var$cachedClearTimeout = clearTimeout;\n        else $4acf49f6c3e67aec$var$cachedClearTimeout = $4acf49f6c3e67aec$var$defaultClearTimeout;\n    } catch (e) {\n        $4acf49f6c3e67aec$var$cachedClearTimeout = $4acf49f6c3e67aec$var$defaultClearTimeout;\n    }\n})();\nfunction $4acf49f6c3e67aec$var$runTimeout(fun) {\n    if ($4acf49f6c3e67aec$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($4acf49f6c3e67aec$var$cachedSetTimeout === $4acf49f6c3e67aec$var$defaultSetTimout || !$4acf49f6c3e67aec$var$cachedSetTimeout) && setTimeout) {\n        $4acf49f6c3e67aec$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $4acf49f6c3e67aec$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $4acf49f6c3e67aec$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $4acf49f6c3e67aec$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $4acf49f6c3e67aec$var$runClearTimeout(marker) {\n    if ($4acf49f6c3e67aec$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($4acf49f6c3e67aec$var$cachedClearTimeout === $4acf49f6c3e67aec$var$defaultClearTimeout || !$4acf49f6c3e67aec$var$cachedClearTimeout) && clearTimeout) {\n        $4acf49f6c3e67aec$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $4acf49f6c3e67aec$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $4acf49f6c3e67aec$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $4acf49f6c3e67aec$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $4acf49f6c3e67aec$var$queue = [];\nvar $4acf49f6c3e67aec$var$draining = false;\nvar $4acf49f6c3e67aec$var$currentQueue;\nvar $4acf49f6c3e67aec$var$queueIndex = -1;\nfunction $4acf49f6c3e67aec$var$cleanUpNextTick() {\n    if (!$4acf49f6c3e67aec$var$draining || !$4acf49f6c3e67aec$var$currentQueue) return;\n    $4acf49f6c3e67aec$var$draining = false;\n    if ($4acf49f6c3e67aec$var$currentQueue.length) $4acf49f6c3e67aec$var$queue = $4acf49f6c3e67aec$var$currentQueue.concat($4acf49f6c3e67aec$var$queue);\n    else $4acf49f6c3e67aec$var$queueIndex = -1;\n    if ($4acf49f6c3e67aec$var$queue.length) $4acf49f6c3e67aec$var$drainQueue();\n}\nfunction $4acf49f6c3e67aec$var$drainQueue() {\n    if ($4acf49f6c3e67aec$var$draining) return;\n    var timeout = $4acf49f6c3e67aec$var$runTimeout($4acf49f6c3e67aec$var$cleanUpNextTick);\n    $4acf49f6c3e67aec$var$draining = true;\n    var len = $4acf49f6c3e67aec$var$queue.length;\n    while(len){\n        $4acf49f6c3e67aec$var$currentQueue = $4acf49f6c3e67aec$var$queue;\n        $4acf49f6c3e67aec$var$queue = [];\n        while(++$4acf49f6c3e67aec$var$queueIndex < len)if ($4acf49f6c3e67aec$var$currentQueue) $4acf49f6c3e67aec$var$currentQueue[$4acf49f6c3e67aec$var$queueIndex].run();\n        $4acf49f6c3e67aec$var$queueIndex = -1;\n        len = $4acf49f6c3e67aec$var$queue.length;\n    }\n    $4acf49f6c3e67aec$var$currentQueue = null;\n    $4acf49f6c3e67aec$var$draining = false;\n    $4acf49f6c3e67aec$var$runClearTimeout(timeout);\n}\n$4acf49f6c3e67aec$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $4acf49f6c3e67aec$var$queue.push(new $4acf49f6c3e67aec$var$Item(fun, args));\n    if ($4acf49f6c3e67aec$var$queue.length === 1 && !$4acf49f6c3e67aec$var$draining) $4acf49f6c3e67aec$var$runTimeout($4acf49f6c3e67aec$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $4acf49f6c3e67aec$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$4acf49f6c3e67aec$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$4acf49f6c3e67aec$var$process.title = \"browser\";\n$4acf49f6c3e67aec$var$process.browser = true;\n$4acf49f6c3e67aec$var$process.env = {};\n$4acf49f6c3e67aec$var$process.argv = [];\n$4acf49f6c3e67aec$var$process.version = \"\"; // empty string to avoid regexp issues\n$4acf49f6c3e67aec$var$process.versions = {};\nfunction $4acf49f6c3e67aec$var$noop() {}\n$4acf49f6c3e67aec$var$process.on = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.addListener = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.once = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.off = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.removeListener = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.removeAllListeners = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.emit = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.prependListener = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.prependOnceListener = $4acf49f6c3e67aec$var$noop;\n$4acf49f6c3e67aec$var$process.listeners = function(name) {\n    return [];\n};\n$4acf49f6c3e67aec$var$process.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\n$4acf49f6c3e67aec$var$process.cwd = function() {\n    return \"/\";\n};\n$4acf49f6c3e67aec$var$process.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\n$4acf49f6c3e67aec$var$process.umask = function() {\n    return 0;\n};\n\n\nvar $1d9d263a787f8021$export$588c7fdda06fbb0a = {\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */ NODE_CLIENT: false,\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */ NODE_ADMIN: false,\n    /**\r\n     * Firebase SDK Version\r\n     */ SDK_VERSION: \"${JSCORE_VERSION}\"\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Throws an error if the provided assertion is falsy\r\n */ var $1d9d263a787f8021$export$a7a9523472993e97 = function assert(assertion, message) {\n    if (!assertion) throw $1d9d263a787f8021$export$a39cad550e7ab28a(message);\n};\n/**\r\n * Returns an Error object suitable for throwing.\r\n */ var $1d9d263a787f8021$export$a39cad550e7ab28a = function assertionError(message) {\n    return new Error(\"Firebase Database (\" + $1d9d263a787f8021$export$588c7fdda06fbb0a.SDK_VERSION + \") INTERNAL ASSERT FAILED: \" + message);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ var $1d9d263a787f8021$var$stringToByteArray$1 = function stringToByteArray$1(str) {\n    // TODO(user): Use native implementations if/when available\n    var out = [];\n    var p = 0;\n    for(var i = 0; i < str.length; i++){\n        var c = str.charCodeAt(i);\n        if (c < 128) out[p++] = c;\n        else if (c < 2048) {\n            out[p++] = c >> 6 | 192;\n            out[p++] = c & 63 | 128;\n        } else if ((c & 0xfc00) === 0xd800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n            out[p++] = c >> 18 | 240;\n            out[p++] = c >> 12 & 63 | 128;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        } else {\n            out[p++] = c >> 12 | 224;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        }\n    }\n    return out;\n};\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */ var $1d9d263a787f8021$var$byteArrayToString = function byteArrayToString(bytes) {\n    // TODO(user): Use native implementations if/when available\n    var out = [];\n    var pos = 0, c = 0;\n    while(pos < bytes.length){\n        var c1 = bytes[pos++];\n        if (c1 < 128) out[c++] = String.fromCharCode(c1);\n        else if (c1 > 191 && c1 < 224) {\n            var c2 = bytes[pos++];\n            out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);\n        } else if (c1 > 239 && c1 < 365) {\n            // Surrogate Pair\n            var c21 = bytes[pos++];\n            var c3 = bytes[pos++];\n            var c4 = bytes[pos++];\n            var u = ((c1 & 7) << 18 | (c21 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n        } else {\n            var c22 = bytes[pos++];\n            var c31 = bytes[pos++];\n            out[c++] = String.fromCharCode((c1 & 15) << 12 | (c22 & 63) << 6 | c31 & 63);\n        }\n    }\n    return out.join(\"\");\n};\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nvar $1d9d263a787f8021$export$b3b2de96497acc47 = {\n    /**\r\n     * Maps bytes to characters.\r\n     */ byteToCharMap_: null,\n    /**\r\n     * Maps characters to bytes.\r\n     */ charToByteMap_: null,\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */ byteToCharMapWebSafe_: null,\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */ charToByteMapWebSafe_: null,\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */ ENCODED_VALS_BASE: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */ get ENCODED_VALS () {\n        return this.ENCODED_VALS_BASE + \"+/=\";\n    },\n    /**\r\n     * Our websafe alphabet.\r\n     */ get ENCODED_VALS_WEBSAFE () {\n        return this.ENCODED_VALS_BASE + \"-_.\";\n    },\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */ HAS_NATIVE_SUPPORT: typeof atob === \"function\",\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */ encodeByteArray: function(input, webSafe) {\n        if (!Array.isArray(input)) throw Error(\"encodeByteArray takes an array as a parameter\");\n        this.init_();\n        var byteToCharMap = webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;\n        var output = [];\n        for(var i = 0; i < input.length; i += 3){\n            var byte1 = input[i];\n            var haveByte2 = i + 1 < input.length;\n            var byte2 = haveByte2 ? input[i + 1] : 0;\n            var haveByte3 = i + 2 < input.length;\n            var byte3 = haveByte3 ? input[i + 2] : 0;\n            var outByte1 = byte1 >> 2;\n            var outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;\n            var outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;\n            var outByte4 = byte3 & 0x3f;\n            if (!haveByte3) {\n                outByte4 = 64;\n                if (!haveByte2) outByte3 = 64;\n            }\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\n        }\n        return output.join(\"\");\n    },\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */ encodeString: function(input, webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) return btoa(input);\n        return this.encodeByteArray($1d9d263a787f8021$var$stringToByteArray$1(input), webSafe);\n    },\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */ decodeString: function(input, webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) return atob(input);\n        return $1d9d263a787f8021$var$byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n    },\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */ decodeStringToByteArray: function(input, webSafe) {\n        this.init_();\n        var charToByteMap = webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;\n        var output = [];\n        for(var i = 0; i < input.length;){\n            var byte1 = charToByteMap[input.charAt(i++)];\n            var haveByte2 = i < input.length;\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n            ++i;\n            var haveByte3 = i < input.length;\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            var haveByte4 = i < input.length;\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) throw new $1d9d263a787f8021$export$55ca9d4bee46aeb3();\n            var outByte1 = byte1 << 2 | byte2 >> 4;\n            output.push(outByte1);\n            if (byte3 !== 64) {\n                var outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;\n                output.push(outByte2);\n                if (byte4 !== 64) {\n                    var outByte3 = byte3 << 6 & 0xc0 | byte4;\n                    output.push(outByte3);\n                }\n            }\n        }\n        return output;\n    },\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */ init_: function() {\n        if (!this.byteToCharMap_) {\n            this.byteToCharMap_ = {};\n            this.charToByteMap_ = {};\n            this.byteToCharMapWebSafe_ = {};\n            this.charToByteMapWebSafe_ = {};\n            // We want quick mappings back and forth, so we precompute two maps.\n            for(var i = 0; i < this.ENCODED_VALS.length; i++){\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n                // Be forgiving when decoding and correctly decode both encodings.\n                if (i >= this.ENCODED_VALS_BASE.length) {\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n                }\n            }\n        }\n    }\n};\n/**\r\n * An error encountered while decoding base64 string.\r\n */ var $1d9d263a787f8021$export$55ca9d4bee46aeb3 = /*#__PURE__*/ function(Error1) {\n    \"use strict\";\n    (0, $jqfyu._)(DecodeBase64StringError, Error1);\n    var _super = (0, $50zho._)(DecodeBase64StringError);\n    function DecodeBase64StringError() {\n        (0, $juqrk._)(this, DecodeBase64StringError);\n        var _this;\n        _this = _super.call.apply(_super, [\n            this\n        ].concat(Array.prototype.slice.call(arguments)));\n        _this.name = \"DecodeBase64StringError\";\n        return _this;\n    }\n    return DecodeBase64StringError;\n}((0, $c96ca6cb05cc1798$export$2466d533fda16e33)(Error));\n/**\r\n * URL-safe base64 encoding\r\n */ var $1d9d263a787f8021$export$e510a73ee562749 = function base64Encode(str) {\n    var utf8Bytes = $1d9d263a787f8021$var$stringToByteArray$1(str);\n    return $1d9d263a787f8021$export$b3b2de96497acc47.encodeByteArray(utf8Bytes, true);\n};\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */ var $1d9d263a787f8021$export$4b5284a3025a455 = function base64urlEncodeWithoutPadding(str) {\n    // Use base64url encoding and remove padding in the end (dot characters).\n    return $1d9d263a787f8021$export$e510a73ee562749(str).replace(/\\./g, \"\");\n};\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */ var $1d9d263a787f8021$export$c62426fdd000a97e = function base64Decode(str) {\n    try {\n        return $1d9d263a787f8021$export$b3b2de96497acc47.decodeString(str, true);\n    } catch (e) {\n        console.error(\"base64Decode failed: \", e);\n    }\n    return null;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */ function $1d9d263a787f8021$export$6c40052bed430212(value) {\n    return $1d9d263a787f8021$export$54e9fb29908872fa(undefined, value);\n}\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */ function $1d9d263a787f8021$export$54e9fb29908872fa(target, source) {\n    if (!(source instanceof Object)) return source;\n    switch(source.constructor){\n        case Date:\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            var dateValue = source;\n            return new Date(dateValue.getTime());\n        case Object:\n            if (target === undefined) target = {};\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for(var prop in source){\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n        if (!source.hasOwnProperty(prop) || !$1d9d263a787f8021$var$isValidKey(prop)) continue;\n        target[prop] = $1d9d263a787f8021$export$54e9fb29908872fa(target[prop], source[prop]);\n    }\n    return target;\n}\nfunction $1d9d263a787f8021$var$isValidKey(key) {\n    return key !== \"__proto__\";\n}\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */ function $1d9d263a787f8021$export$a4e55266d2135a7f() {\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof $parcel$global !== \"undefined\") return $parcel$global;\n    throw new Error(\"Unable to locate global object.\");\n}\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ var $1d9d263a787f8021$var$getDefaultsFromGlobal = function() {\n    return $1d9d263a787f8021$export$a4e55266d2135a7f().__FIREBASE_DEFAULTS__;\n};\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */ var $1d9d263a787f8021$var$getDefaultsFromEnvVariable = function() {\n    if (typeof $4acf49f6c3e67aec$exports === \"undefined\" || typeof $4acf49f6c3e67aec$exports.env === \"undefined\") return;\n    var defaultsJsonString = undefined;\n    if (defaultsJsonString) return JSON.parse(defaultsJsonString);\n};\nvar $1d9d263a787f8021$var$getDefaultsFromCookie = function() {\n    if (typeof document === \"undefined\") return;\n    var match;\n    try {\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n    } catch (e) {\n        // Some environments such as Angular Universal SSR have a\n        // `document` object but error on accessing `document.cookie`.\n        return;\n    }\n    var decoded = match && $1d9d263a787f8021$export$c62426fdd000a97e(match[1]);\n    return decoded && JSON.parse(decoded);\n};\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */ var $1d9d263a787f8021$export$212bb2fc580a90a8 = function() {\n    try {\n        return $1d9d263a787f8021$var$getDefaultsFromGlobal() || $1d9d263a787f8021$var$getDefaultsFromEnvVariable() || $1d9d263a787f8021$var$getDefaultsFromCookie();\n    } catch (e) {\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */ console.info(\"Unable to get __FIREBASE_DEFAULTS__ due to: \".concat(e));\n        return;\n    }\n};\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */ var $1d9d263a787f8021$export$9c11895284c8adad = function(productName) {\n    var _a, _b;\n    return (_b = (_a = $1d9d263a787f8021$export$212bb2fc580a90a8()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName];\n};\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */ var $1d9d263a787f8021$export$a3febcf1f14a3a0c = function(productName) {\n    var host = $1d9d263a787f8021$export$9c11895284c8adad(productName);\n    if (!host) return undefined;\n    var separatorIndex = host.lastIndexOf(\":\"); // Finding the last since IPv6 addr also has colons.\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) throw new Error(\"Invalid host \".concat(host, \" with no separate hostname and port!\"));\n    // eslint-disable-next-line no-restricted-globals\n    var port = parseInt(host.substring(separatorIndex + 1), 10);\n    if (host[0] === \"[\") // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [\n        host.substring(1, separatorIndex - 1),\n        port\n    ];\n    else return [\n        host.substring(0, separatorIndex),\n        port\n    ];\n};\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */ var $1d9d263a787f8021$export$3dfb6827a9f89756 = function() {\n    var _a;\n    return (_a = $1d9d263a787f8021$export$212bb2fc580a90a8()) === null || _a === void 0 ? void 0 : _a.config;\n};\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */ var $1d9d263a787f8021$export$5539a1a3afe87d6 = function(name) {\n    var _a;\n    return (_a = $1d9d263a787f8021$export$212bb2fc580a90a8()) === null || _a === void 0 ? void 0 : _a[\"_\".concat(name)];\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ var $1d9d263a787f8021$export$85f6557964517f1a = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Deferred() {\n        var _this = this;\n        (0, $juqrk._)(this, Deferred);\n        this.reject = function() {};\n        this.resolve = function() {};\n        this.promise = new Promise(function(resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    (0, $bNI6E._)(Deferred, [\n        {\n            /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */ key: \"wrapCallback\",\n            value: function wrapCallback(callback) {\n                var _this = this;\n                return function(error, value) {\n                    if (error) _this.reject(error);\n                    else _this.resolve(value);\n                    if (typeof callback === \"function\") {\n                        // Attaching noop handler just in case developer wasn't expecting\n                        // promises\n                        _this.promise.catch(function() {});\n                        // Some of our callbacks don't expect a value and our own tests\n                        // assert that the parameter length is 1\n                        if (callback.length === 1) callback(error);\n                        else callback(error, value);\n                    }\n                };\n            }\n        }\n    ]);\n    return Deferred;\n}();\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ function $1d9d263a787f8021$export$367bf224123348f1(token, projectId) {\n    if (token.uid) throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\n    // Unsecured JWTs use \"none\" as the algorithm.\n    var header = {\n        alg: \"none\",\n        type: \"JWT\"\n    };\n    var project = projectId || \"demo-project\";\n    var iat = token.iat || 0;\n    var sub = token.sub || token.user_id;\n    if (!sub) throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n    var payload = Object.assign({\n        // Set all required fields to decent defaults\n        iss: \"https://securetoken.google.com/\".concat(project),\n        aud: project,\n        iat: iat,\n        exp: iat + 3600,\n        auth_time: iat,\n        sub: sub,\n        user_id: sub,\n        firebase: {\n            sign_in_provider: \"custom\",\n            identities: {}\n        }\n    }, token);\n    // Unsecured JWTs use the empty string as a signature.\n    var signature = \"\";\n    return [\n        $1d9d263a787f8021$export$4b5284a3025a455(JSON.stringify(header)),\n        $1d9d263a787f8021$export$4b5284a3025a455(JSON.stringify(payload)),\n        signature\n    ].join(\".\");\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */ function $1d9d263a787f8021$export$c36915b22ce77c19() {\n    if (typeof navigator !== \"undefined\" && typeof navigator[\"userAgent\"] === \"string\") return navigator[\"userAgent\"];\n    else return \"\";\n}\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */ function $1d9d263a787f8021$export$872f8323f01d7ae0() {\n    return typeof window !== \"undefined\" && // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window[\"cordova\"] || window[\"phonegap\"] || window[\"PhoneGap\"]) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test($1d9d263a787f8021$export$c36915b22ce77c19());\n}\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */ // Node detection logic from: https://github.com/iliakan/detect-node/\nfunction $1d9d263a787f8021$export$8ee0fc9ee280b4ee() {\n    var _a;\n    var forceEnvironment = (_a = $1d9d263a787f8021$export$212bb2fc580a90a8()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\n    if (forceEnvironment === \"node\") return true;\n    else if (forceEnvironment === \"browser\") return false;\n    try {\n        return Object.prototype.toString.call($parcel$global.process) === \"[object process]\";\n    } catch (e) {\n        return false;\n    }\n}\n/**\r\n * Detect Browser Environment\r\n */ function $1d9d263a787f8021$export$4e09c449d6c407f7() {\n    return typeof self === \"object\" && self.self === self;\n}\nfunction $1d9d263a787f8021$export$caa8774a9107a58e() {\n    var runtime = typeof chrome === \"object\" ? chrome.runtime : typeof browser === \"object\" ? browser.runtime : undefined;\n    return typeof runtime === \"object\" && runtime.id !== undefined;\n}\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */ function $1d9d263a787f8021$export$f7a1e23e542d38e3() {\n    return typeof navigator === \"object\" && navigator[\"product\"] === \"ReactNative\";\n}\n/** Detects Electron apps. */ function $1d9d263a787f8021$export$f2f6a8999f8ebd30() {\n    return $1d9d263a787f8021$export$c36915b22ce77c19().indexOf(\"Electron/\") >= 0;\n}\n/** Detects Internet Explorer. */ function $1d9d263a787f8021$export$7e7b1a9668aaed8() {\n    var ua = $1d9d263a787f8021$export$c36915b22ce77c19();\n    return ua.indexOf(\"MSIE \") >= 0 || ua.indexOf(\"Trident/\") >= 0;\n}\n/** Detects Universal Windows Platform apps. */ function $1d9d263a787f8021$export$202944b2d2824246() {\n    return $1d9d263a787f8021$export$c36915b22ce77c19().indexOf(\"MSAppHost/\") >= 0;\n}\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */ function $1d9d263a787f8021$export$5d1d834fbbf8bab7() {\n    return $1d9d263a787f8021$export$588c7fdda06fbb0a.NODE_CLIENT === true || $1d9d263a787f8021$export$588c7fdda06fbb0a.NODE_ADMIN === true;\n}\n/** Returns true if we are running in Safari. */ function $1d9d263a787f8021$export$95df08bae54cb4df() {\n    return !$1d9d263a787f8021$export$8ee0fc9ee280b4ee() && navigator.userAgent.includes(\"Safari\") && !navigator.userAgent.includes(\"Chrome\");\n}\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */ function $1d9d263a787f8021$export$3865db50535c2055() {\n    try {\n        return typeof indexedDB === \"object\";\n    } catch (e) {\n        return false;\n    }\n}\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */ function $1d9d263a787f8021$export$a8a3018f3d187a4d() {\n    return new Promise(function(resolve, reject) {\n        try {\n            var preExist = true;\n            var DB_CHECK_NAME = \"validate-browser-context-for-indexeddb-analytics-module\";\n            var request = self.indexedDB.open(DB_CHECK_NAME);\n            request.onsuccess = function() {\n                request.result.close();\n                // delete database only when it doesn't pre-exist\n                if (!preExist) self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n                resolve(true);\n            };\n            request.onupgradeneeded = function() {\n                preExist = false;\n            };\n            request.onerror = function() {\n                var _a;\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || \"\");\n            };\n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */ function $1d9d263a787f8021$export$f172b7eb6cf60599() {\n    if (typeof navigator === \"undefined\" || !navigator.cookieEnabled) return false;\n    return true;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */ var $1d9d263a787f8021$var$ERROR_NAME = \"FirebaseError\";\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nvar $1d9d263a787f8021$export$dd24e9cd51226c56 = /*#__PURE__*/ function(Error1) {\n    \"use strict\";\n    (0, $jqfyu._)(FirebaseError, Error1);\n    var _super = (0, $50zho._)(FirebaseError);\n    function FirebaseError(/** The error code for this error. */ code, message, /** Custom data for this error. */ customData) {\n        (0, $juqrk._)(this, FirebaseError);\n        var _this;\n        _this = _super.call(this, message);\n        _this.code = code;\n        _this.customData = customData;\n        /** The custom name for all FirebaseErrors. */ _this.name = $1d9d263a787f8021$var$ERROR_NAME;\n        // Fix For ES5\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf((0, $cquyX._)(_this), FirebaseError.prototype);\n        // Maintains proper stack trace for where our error was thrown.\n        // Only available on V8.\n        if (Error.captureStackTrace) Error.captureStackTrace((0, $cquyX._)(_this), $1d9d263a787f8021$export$3fa6e1b18a3b2d40.prototype.create);\n        return _this;\n    }\n    return FirebaseError;\n}((0, $c96ca6cb05cc1798$export$2466d533fda16e33)(Error));\nvar $1d9d263a787f8021$export$3fa6e1b18a3b2d40 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ErrorFactory(service, serviceName, errors) {\n        (0, $juqrk._)(this, ErrorFactory);\n        this.service = service;\n        this.serviceName = serviceName;\n        this.errors = errors;\n    }\n    (0, $bNI6E._)(ErrorFactory, [\n        {\n            key: \"create\",\n            value: function create(code) {\n                for(var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n                    data[_key - 1] = arguments[_key];\n                }\n                var customData = data[0] || {};\n                var fullCode = \"\".concat(this.service, \"/\").concat(code);\n                var template = this.errors[code];\n                var message = template ? $1d9d263a787f8021$var$replaceTemplate(template, customData) : \"Error\";\n                // Service Name: Error message (service/code).\n                var fullMessage = \"\".concat(this.serviceName, \": \").concat(message, \" (\").concat(fullCode, \").\");\n                var error = new $1d9d263a787f8021$export$dd24e9cd51226c56(fullCode, fullMessage, customData);\n                return error;\n            }\n        }\n    ]);\n    return ErrorFactory;\n}();\nfunction $1d9d263a787f8021$var$replaceTemplate(template, data) {\n    return template.replace($1d9d263a787f8021$var$PATTERN, function(_, key) {\n        var value = data[key];\n        return value != null ? String(value) : \"<\".concat(key, \"?>\");\n    });\n}\nvar $1d9d263a787f8021$var$PATTERN = /\\{\\$([^}]+)}/g;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */ function $1d9d263a787f8021$export$c5a53ce6a17cf18d(str) {\n    return JSON.parse(str);\n}\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */ function $1d9d263a787f8021$export$fac44ee5b035f737(data) {\n    return JSON.stringify(data);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */ var $1d9d263a787f8021$export$2f872c0f2117be69 = function decode(token) {\n    var header = {}, claims = {}, data = {}, signature = \"\";\n    try {\n        var parts = token.split(\".\");\n        header = $1d9d263a787f8021$export$c5a53ce6a17cf18d($1d9d263a787f8021$export$c62426fdd000a97e(parts[0]) || \"\");\n        claims = $1d9d263a787f8021$export$c5a53ce6a17cf18d($1d9d263a787f8021$export$c62426fdd000a97e(parts[1]) || \"\");\n        signature = parts[2];\n        data = claims[\"d\"] || {};\n        delete claims[\"d\"];\n    } catch (e) {}\n    return {\n        header: header,\n        claims: claims,\n        data: data,\n        signature: signature\n    };\n};\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */ var $1d9d263a787f8021$export$5f870fcca7ae6a88 = function isValidTimestamp(token) {\n    var claims = $1d9d263a787f8021$export$2f872c0f2117be69(token).claims;\n    var now = Math.floor(new Date().getTime() / 1000);\n    var validSince = 0, validUntil = 0;\n    if (typeof claims === \"object\") {\n        if (claims.hasOwnProperty(\"nbf\")) validSince = claims[\"nbf\"];\n        else if (claims.hasOwnProperty(\"iat\")) validSince = claims[\"iat\"];\n        if (claims.hasOwnProperty(\"exp\")) validUntil = claims[\"exp\"];\n        else // token will expire after 24h by default\n        validUntil = validSince + 86400;\n    }\n    return !!now && !!validSince && !!validUntil && now >= validSince && now <= validUntil;\n};\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */ var $1d9d263a787f8021$export$701c661ec91095f2 = function issuedAtTime(token) {\n    var claims = $1d9d263a787f8021$export$2f872c0f2117be69(token).claims;\n    if (typeof claims === \"object\" && claims.hasOwnProperty(\"iat\")) return claims[\"iat\"];\n    return null;\n};\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */ var $1d9d263a787f8021$export$9565ca3d387f8aa0 = function isValidFormat(token) {\n    var decoded = $1d9d263a787f8021$export$2f872c0f2117be69(token), claims = decoded.claims;\n    return !!claims && typeof claims === \"object\" && claims.hasOwnProperty(\"iat\");\n};\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */ var $1d9d263a787f8021$export$fc970ed23da99565 = function isAdmin(token) {\n    var claims = $1d9d263a787f8021$export$2f872c0f2117be69(token).claims;\n    return typeof claims === \"object\" && claims[\"admin\"] === true;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ function $1d9d263a787f8021$export$2344b14b097df817(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction $1d9d263a787f8021$export$e51ae4db7b428f67(obj, key) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) return obj[key];\n    else return undefined;\n}\nfunction $1d9d263a787f8021$export$dd1bc94b04021eeb(obj) {\n    for(var key in obj){\n        if (Object.prototype.hasOwnProperty.call(obj, key)) return false;\n    }\n    return true;\n}\nfunction $1d9d263a787f8021$export$871de8747c9eaa88(obj, fn, contextObj) {\n    var res = {};\n    for(var key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) res[key] = fn.call(contextObj, obj[key], key, obj);\n    return res;\n}\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */ function $1d9d263a787f8021$export$9cb4719e2e525b7a(a, b) {\n    if (a === b) return true;\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = aKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var k = _step.value;\n            if (!bKeys.includes(k)) return false;\n            var aProp = a[k];\n            var bProp = b[k];\n            if ($1d9d263a787f8021$var$isObject(aProp) && $1d9d263a787f8021$var$isObject(bProp)) {\n                if (!$1d9d263a787f8021$export$9cb4719e2e525b7a(aProp, bProp)) return false;\n            } else if (aProp !== bProp) return false;\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n    try {\n        for(var _iterator1 = bKeys[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n            var k1 = _step1.value;\n            if (!aKeys.includes(k1)) return false;\n        }\n    } catch (err) {\n        _didIteratorError1 = true;\n        _iteratorError1 = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                _iterator1.return();\n            }\n        } finally{\n            if (_didIteratorError1) {\n                throw _iteratorError1;\n            }\n        }\n    }\n    return true;\n}\nfunction $1d9d263a787f8021$var$isObject(thing) {\n    return thing !== null && typeof thing === \"object\";\n}\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */ function $1d9d263a787f8021$export$a9cd205a244d9f54(promise) {\n    var timeInMS = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2000;\n    var deferredPromise = new $1d9d263a787f8021$export$85f6557964517f1a();\n    setTimeout(function() {\n        return deferredPromise.reject(\"timeout!\");\n    }, timeInMS);\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\n    return deferredPromise.promise;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */ function $1d9d263a787f8021$export$ac4103b836844853(querystringParams) {\n    var params = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        var _loop = function() {\n            var _step_value = (0, $fGQt0._)(_step.value, 2), key = _step_value[0], value = _step_value[1];\n            if (Array.isArray(value)) value.forEach(function(arrayVal) {\n                params.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(arrayVal));\n            });\n            else params.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(value));\n        };\n        for(var _iterator = Object.entries(querystringParams)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return params.length ? \"&\" + params.join(\"&\") : \"\";\n}\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */ function $1d9d263a787f8021$export$c1271ca4c8a70741(querystring) {\n    var obj = {};\n    var tokens = querystring.replace(/^\\?/, \"\").split(\"&\");\n    tokens.forEach(function(token) {\n        if (token) {\n            var _token_split = (0, $fGQt0._)(token.split(\"=\"), 2), key = _token_split[0], value = _token_split[1];\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\n        }\n    });\n    return obj;\n}\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */ function $1d9d263a787f8021$export$1a8408415472d8ed(url) {\n    var queryStart = url.indexOf(\"?\");\n    if (!queryStart) return \"\";\n    var fragmentStart = url.indexOf(\"#\", queryStart);\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */ /**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */ var $1d9d263a787f8021$export$c85d589bf4e25fef = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Sha1() {\n        (0, $juqrk._)(this, Sha1);\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */ this.chain_ = [];\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */ this.buf_ = [];\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */ this.W_ = [];\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */ this.pad_ = [];\n        /**\r\n         * @private {number}\r\n         */ this.inbuf_ = 0;\n        /**\r\n         * @private {number}\r\n         */ this.total_ = 0;\n        this.blockSize = 64;\n        this.pad_[0] = 128;\n        for(var i = 1; i < this.blockSize; ++i)this.pad_[i] = 0;\n        this.reset();\n    }\n    (0, $bNI6E._)(Sha1, [\n        {\n            key: \"reset\",\n            value: function reset() {\n                this.chain_[0] = 0x67452301;\n                this.chain_[1] = 0xefcdab89;\n                this.chain_[2] = 0x98badcfe;\n                this.chain_[3] = 0x10325476;\n                this.chain_[4] = 0xc3d2e1f0;\n                this.inbuf_ = 0;\n                this.total_ = 0;\n            }\n        },\n        {\n            /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */ key: \"compress_\",\n            value: function compress_(buf, offset) {\n                if (!offset) offset = 0;\n                var W = this.W_;\n                // get 16 big endian words\n                if (typeof buf === \"string\") for(var i = 0; i < 16; i++){\n                    // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n                    // have a bug that turns the post-increment ++ operator into pre-increment\n                    // during JIT compilation.  We have code that depends heavily on SHA-1 for\n                    // correctness and which is affected by this bug, so I've removed all uses\n                    // of post-increment ++ in which the result value is used.  We can revert\n                    // this change once the Safari bug\n                    // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n                    // most clients have been updated.\n                    W[i] = buf.charCodeAt(offset) << 24 | buf.charCodeAt(offset + 1) << 16 | buf.charCodeAt(offset + 2) << 8 | buf.charCodeAt(offset + 3);\n                    offset += 4;\n                }\n                else for(var i1 = 0; i1 < 16; i1++){\n                    W[i1] = buf[offset] << 24 | buf[offset + 1] << 16 | buf[offset + 2] << 8 | buf[offset + 3];\n                    offset += 4;\n                }\n                // expand to 80 words\n                for(var i2 = 16; i2 < 80; i2++){\n                    var t = W[i2 - 3] ^ W[i2 - 8] ^ W[i2 - 14] ^ W[i2 - 16];\n                    W[i2] = (t << 1 | t >>> 31) & 0xffffffff;\n                }\n                var a = this.chain_[0];\n                var b = this.chain_[1];\n                var c = this.chain_[2];\n                var d = this.chain_[3];\n                var e = this.chain_[4];\n                var f, k;\n                // TODO(user): Try to unroll this loop to speed up the computation.\n                for(var i3 = 0; i3 < 80; i3++){\n                    if (i3 < 40) {\n                        if (i3 < 20) {\n                            f = d ^ b & (c ^ d);\n                            k = 0x5a827999;\n                        } else {\n                            f = b ^ c ^ d;\n                            k = 0x6ed9eba1;\n                        }\n                    } else if (i3 < 60) {\n                        f = b & c | d & (b | c);\n                        k = 0x8f1bbcdc;\n                    } else {\n                        f = b ^ c ^ d;\n                        k = 0xca62c1d6;\n                    }\n                    var t1 = (a << 5 | a >>> 27) + f + e + k + W[i3] & 0xffffffff;\n                    e = d;\n                    d = c;\n                    c = (b << 30 | b >>> 2) & 0xffffffff;\n                    b = a;\n                    a = t1;\n                }\n                this.chain_[0] = this.chain_[0] + a & 0xffffffff;\n                this.chain_[1] = this.chain_[1] + b & 0xffffffff;\n                this.chain_[2] = this.chain_[2] + c & 0xffffffff;\n                this.chain_[3] = this.chain_[3] + d & 0xffffffff;\n                this.chain_[4] = this.chain_[4] + e & 0xffffffff;\n            }\n        },\n        {\n            key: \"update\",\n            value: function update(bytes, length) {\n                // TODO(johnlenz): tighten the function signature and remove this check\n                if (bytes == null) return;\n                if (length === undefined) length = bytes.length;\n                var lengthMinusBlock = length - this.blockSize;\n                var n = 0;\n                // Using local instead of member variables gives ~5% speedup on Firefox 16.\n                var buf = this.buf_;\n                var inbuf = this.inbuf_;\n                // The outer while loop should execute at most twice.\n                while(n < length){\n                    // When we have no data in the block to top up, we can directly process the\n                    // input buffer (assuming it contains sufficient data). This gives ~25%\n                    // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n                    // the data is provided in large chunks (or in multiples of 64 bytes).\n                    if (inbuf === 0) while(n <= lengthMinusBlock){\n                        this.compress_(bytes, n);\n                        n += this.blockSize;\n                    }\n                    if (typeof bytes === \"string\") while(n < length){\n                        buf[inbuf] = bytes.charCodeAt(n);\n                        ++inbuf;\n                        ++n;\n                        if (inbuf === this.blockSize) {\n                            this.compress_(buf);\n                            inbuf = 0;\n                            break;\n                        }\n                    }\n                    else while(n < length){\n                        buf[inbuf] = bytes[n];\n                        ++inbuf;\n                        ++n;\n                        if (inbuf === this.blockSize) {\n                            this.compress_(buf);\n                            inbuf = 0;\n                            break;\n                        }\n                    }\n                }\n                this.inbuf_ = inbuf;\n                this.total_ += length;\n            }\n        },\n        {\n            /** @override */ key: \"digest\",\n            value: function digest() {\n                var digest = [];\n                var totalBits = this.total_ * 8;\n                // Add pad 0x80 0x00*.\n                if (this.inbuf_ < 56) this.update(this.pad_, 56 - this.inbuf_);\n                else this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n                // Add # bits.\n                for(var i = this.blockSize - 1; i >= 56; i--){\n                    this.buf_[i] = totalBits & 255;\n                    totalBits /= 256; // Don't use bit-shifting here!\n                }\n                this.compress_(this.buf_);\n                var n = 0;\n                for(var i1 = 0; i1 < 5; i1++)for(var j = 24; j >= 0; j -= 8){\n                    digest[n] = this.chain_[i1] >> j & 255;\n                    ++n;\n                }\n                return digest;\n            }\n        }\n    ]);\n    return Sha1;\n}();\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */ function $1d9d263a787f8021$export$364097d812234b3f(executor, onNoObservers) {\n    var proxy = new $1d9d263a787f8021$var$ObserverProxy(executor, onNoObservers);\n    return proxy.subscribe.bind(proxy);\n}\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */ var $1d9d263a787f8021$var$ObserverProxy = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ObserverProxy(executor, onNoObservers) {\n        var _this = this;\n        (0, $juqrk._)(this, ObserverProxy);\n        this.observers = [];\n        this.unsubscribes = [];\n        this.observerCount = 0;\n        // Micro-task scheduling by calling task.then().\n        this.task = Promise.resolve();\n        this.finalized = false;\n        this.onNoObservers = onNoObservers;\n        // Call the executor asynchronously so subscribers that are called\n        // synchronously after the creation of the subscribe function\n        // can still receive the very first value generated in the executor.\n        this.task.then(function() {\n            executor(_this);\n        }).catch(function(e) {\n            _this.error(e);\n        });\n    }\n    (0, $bNI6E._)(ObserverProxy, [\n        {\n            key: \"next\",\n            value: function next(value) {\n                this.forEachObserver(function(observer) {\n                    observer.next(value);\n                });\n            }\n        },\n        {\n            key: \"error\",\n            value: function error(error) {\n                this.forEachObserver(function(observer) {\n                    observer.error(error);\n                });\n                this.close(error);\n            }\n        },\n        {\n            key: \"complete\",\n            value: function complete() {\n                this.forEachObserver(function(observer) {\n                    observer.complete();\n                });\n                this.close();\n            }\n        },\n        {\n            /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */ key: \"subscribe\",\n            value: function subscribe(nextOrObserver, error, complete) {\n                var _this = this;\n                var observer;\n                if (nextOrObserver === undefined && error === undefined && complete === undefined) throw new Error(\"Missing Observer.\");\n                // Assemble an Observer object when passed as callback functions.\n                if ($1d9d263a787f8021$var$implementsAnyMethods(nextOrObserver, [\n                    \"next\",\n                    \"error\",\n                    \"complete\"\n                ])) observer = nextOrObserver;\n                else observer = {\n                    next: nextOrObserver,\n                    error: error,\n                    complete: complete\n                };\n                if (observer.next === undefined) observer.next = $1d9d263a787f8021$var$noop;\n                if (observer.error === undefined) observer.error = $1d9d263a787f8021$var$noop;\n                if (observer.complete === undefined) observer.complete = $1d9d263a787f8021$var$noop;\n                var unsub = this.unsubscribeOne.bind(this, this.observers.length);\n                // Attempt to subscribe to a terminated Observable - we\n                // just respond to the Observer with the final error or complete\n                // event.\n                if (this.finalized) // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this.task.then(function() {\n                    try {\n                        if (_this.finalError) observer.error(_this.finalError);\n                        else observer.complete();\n                    } catch (e) {\n                    // nothing\n                    }\n                    return;\n                });\n                this.observers.push(observer);\n                return unsub;\n            }\n        },\n        {\n            // Unsubscribe is synchronous - we guarantee that no events are sent to\n            // any unsubscribed Observer.\n            key: \"unsubscribeOne\",\n            value: function unsubscribeOne(i) {\n                if (this.observers === undefined || this.observers[i] === undefined) return;\n                delete this.observers[i];\n                this.observerCount -= 1;\n                if (this.observerCount === 0 && this.onNoObservers !== undefined) this.onNoObservers(this);\n            }\n        },\n        {\n            key: \"forEachObserver\",\n            value: function forEachObserver(fn) {\n                if (this.finalized) // Already closed by previous event....just eat the additional values.\n                return;\n                // Since sendOne calls asynchronously - there is no chance that\n                // this.observers will become undefined.\n                for(var i = 0; i < this.observers.length; i++)this.sendOne(i, fn);\n            }\n        },\n        {\n            // Call the Observer via one of it's callback function. We are careful to\n            // confirm that the observe has not been unsubscribed since this asynchronous\n            // function had been queued.\n            key: \"sendOne\",\n            value: function sendOne(i, fn) {\n                var _this = this;\n                // Execute the callback asynchronously\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this.task.then(function() {\n                    if (_this.observers !== undefined && _this.observers[i] !== undefined) try {\n                        fn(_this.observers[i]);\n                    } catch (e) {\n                        // Ignore exceptions raised in Observers or missing methods of an\n                        // Observer.\n                        // Log error to console. b/31404806\n                        if (typeof console !== \"undefined\" && console.error) console.error(e);\n                    }\n                });\n            }\n        },\n        {\n            key: \"close\",\n            value: function close(err) {\n                var _this = this;\n                if (this.finalized) return;\n                this.finalized = true;\n                if (err !== undefined) this.finalError = err;\n                // Proxy is no longer needed - garbage collect references\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this.task.then(function() {\n                    _this.observers = undefined;\n                    _this.onNoObservers = undefined;\n                });\n            }\n        }\n    ]);\n    return ObserverProxy;\n}();\n/** Turn synchronous function into one called asynchronously. */ // eslint-disable-next-line @typescript-eslint/ban-types\nfunction $1d9d263a787f8021$export$12af436354f1a4f7(fn, onError) {\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        Promise.resolve(true).then(function() {\n            fn.apply(void 0, (0, $aYXpI._)(args));\n        }).catch(function(error) {\n            if (onError) onError(error);\n        });\n    };\n}\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */ function $1d9d263a787f8021$var$implementsAnyMethods(obj, methods) {\n    if (typeof obj !== \"object\" || obj === null) return false;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = methods[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var method = _step.value;\n            if (method in obj && typeof obj[method] === \"function\") return true;\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return false;\n}\nfunction $1d9d263a787f8021$var$noop() {\n// do nothing\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */ var $1d9d263a787f8021$export$20164226a0ed35c3 = function validateArgCount(fnName, minCount, maxCount, argCount) {\n    var argError;\n    if (argCount < minCount) argError = \"at least \" + minCount;\n    else if (argCount > maxCount) argError = maxCount === 0 ? \"none\" : \"no more than \" + maxCount;\n    if (argError) {\n        var error = fnName + \" failed: Was called with \" + argCount + (argCount === 1 ? \" argument.\" : \" arguments.\") + \" Expects \" + argError + \".\";\n        throw new Error(error);\n    }\n};\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */ function $1d9d263a787f8021$export$adea4917e02d93dc(fnName, argName) {\n    return \"\".concat(fnName, \" failed: \").concat(argName, \" argument \");\n}\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */ function $1d9d263a787f8021$export$8eef22622e725943(fnName, namespace, optional) {\n    if (optional && !namespace) return;\n    if (typeof namespace !== \"string\") //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error($1d9d263a787f8021$export$adea4917e02d93dc(fnName, \"namespace\") + \"must be a valid firebase namespace.\");\n}\nfunction $1d9d263a787f8021$export$5bcd2a2eb6640dfa(fnName, argumentName, // eslint-disable-next-line @typescript-eslint/ban-types\ncallback, optional) {\n    if (optional && !callback) return;\n    if (typeof callback !== \"function\") throw new Error($1d9d263a787f8021$export$adea4917e02d93dc(fnName, argumentName) + \"must be a valid function.\");\n}\nfunction $1d9d263a787f8021$export$df77539402cfb523(fnName, argumentName, context, optional) {\n    if (optional && !context) return;\n    if (typeof context !== \"object\" || context === null) throw new Error($1d9d263a787f8021$export$adea4917e02d93dc(fnName, argumentName) + \"must be a valid context object.\");\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */ var $1d9d263a787f8021$export$655666783217a925 = function stringToByteArray(str) {\n    var out = [];\n    var p = 0;\n    for(var i = 0; i < str.length; i++){\n        var c = str.charCodeAt(i);\n        // Is this the lead surrogate in a surrogate pair?\n        if (c >= 0xd800 && c <= 0xdbff) {\n            var high = c - 0xd800; // the high 10 bits.\n            i++;\n            $1d9d263a787f8021$export$a7a9523472993e97(i < str.length, \"Surrogate pair missing trail surrogate.\");\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n            c = 0x10000 + (high << 10) + low;\n        }\n        if (c < 128) out[p++] = c;\n        else if (c < 2048) {\n            out[p++] = c >> 6 | 192;\n            out[p++] = c & 63 | 128;\n        } else if (c < 65536) {\n            out[p++] = c >> 12 | 224;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        } else {\n            out[p++] = c >> 18 | 240;\n            out[p++] = c >> 12 & 63 | 128;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        }\n    }\n    return out;\n};\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */ var $1d9d263a787f8021$export$9536dc0a75b20bf9 = function stringLength(str) {\n    var p = 0;\n    for(var i = 0; i < str.length; i++){\n        var c = str.charCodeAt(i);\n        if (c < 128) p++;\n        else if (c < 2048) p += 2;\n        else if (c >= 0xd800 && c <= 0xdbff) {\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n            p += 4;\n            i++; // skip trail surrogate.\n        } else p += 3;\n    }\n    return p;\n};\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */ var $1d9d263a787f8021$export$abe4376e1bf796d6 = function uuidv4() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n    });\n};\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The amount of milliseconds to exponentially increase.\r\n */ var $1d9d263a787f8021$var$DEFAULT_INTERVAL_MILLIS = 1000;\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */ var $1d9d263a787f8021$var$DEFAULT_BACKOFF_FACTOR = 2;\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */ var $1d9d263a787f8021$export$bdf1213ffbdb096e = 14400000; // Four hours, like iOS and Android.\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */ var $1d9d263a787f8021$export$3518ed2cfe61fa30 = 0.5;\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */ function $1d9d263a787f8021$export$4d810c0ca64ed8e9(backoffCount) {\n    var intervalMillis = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : $1d9d263a787f8021$var$DEFAULT_INTERVAL_MILLIS, backoffFactor = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : $1d9d263a787f8021$var$DEFAULT_BACKOFF_FACTOR;\n    // Calculates an exponentially increasing value.\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\n    // and count to restore state.\n    var currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n    // A random \"fuzz\" to avoid waves of retries.\n    // Deviation: randomFactor is required.\n    var randomWait = Math.round(// A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    $1d9d263a787f8021$export$3518ed2cfe61fa30 * currBaseValue * // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n    // if we add or subtract.\n    (Math.random() - 0.5) * 2);\n    // Limits backoff to max to avoid effectively permanent backoff.\n    return Math.min($1d9d263a787f8021$export$bdf1213ffbdb096e, currBaseValue + randomWait);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Provide English ordinal letters after a number\r\n */ function $1d9d263a787f8021$export$7bb39f879164e4ac(i) {\n    if (!Number.isFinite(i)) return \"\".concat(i);\n    return i + $1d9d263a787f8021$var$indicator(i);\n}\nfunction $1d9d263a787f8021$var$indicator(i) {\n    i = Math.abs(i);\n    var cent = i % 100;\n    if (cent >= 10 && cent <= 20) return \"th\";\n    var dec = i % 10;\n    if (dec === 1) return \"st\";\n    if (dec === 2) return \"nd\";\n    if (dec === 3) return \"rd\";\n    return \"th\";\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ function $1d9d263a787f8021$export$4befe9b5fa509a1b(service) {\n    if (service && service._delegate) return service._delegate;\n    else return service;\n}\n\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */ var $4d80d01579d5bd6a$export$16fa2f45be04daa8 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Component(name, instanceFactory, type) {\n        (0, $juqrk._)(this, Component);\n        this.name = name;\n        this.instanceFactory = instanceFactory;\n        this.type = type;\n        this.multipleInstances = false;\n        /**\r\n         * Properties to be added to the service namespace\r\n         */ this.serviceProps = {};\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */ ;\n        this.onInstanceCreated = null;\n    }\n    (0, $bNI6E._)(Component, [\n        {\n            key: \"setInstantiationMode\",\n            value: function setInstantiationMode(mode) {\n                this.instantiationMode = mode;\n                return this;\n            }\n        },\n        {\n            key: \"setMultipleInstances\",\n            value: function setMultipleInstances(multipleInstances) {\n                this.multipleInstances = multipleInstances;\n                return this;\n            }\n        },\n        {\n            key: \"setServiceProps\",\n            value: function setServiceProps(props) {\n                this.serviceProps = props;\n                return this;\n            }\n        },\n        {\n            key: \"setInstanceCreatedCallback\",\n            value: function setInstanceCreatedCallback(callback) {\n                this.onInstanceCreated = callback;\n                return this;\n            }\n        }\n    ]);\n    return Component;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ var $4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME = \"[DEFAULT]\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */ var $4d80d01579d5bd6a$export$2881499e37b75b9a = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Provider(name, container) {\n        (0, $juqrk._)(this, Provider);\n        this.name = name;\n        this.container = container;\n        this.component = null;\n        this.instances = new Map();\n        this.instancesDeferred = new Map();\n        this.instancesOptions = new Map();\n        this.onInitCallbacks = new Map();\n    }\n    (0, $bNI6E._)(Provider, [\n        {\n            /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */ key: \"get\",\n            value: function get(identifier) {\n                // if multipleInstances is not supported, use the default name\n                var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n                if (!this.instancesDeferred.has(normalizedIdentifier)) {\n                    var deferred = new (0, $1d9d263a787f8021$export$85f6557964517f1a)();\n                    this.instancesDeferred.set(normalizedIdentifier, deferred);\n                    if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) // initialize the service if it can be auto-initialized\n                    try {\n                        var instance = this.getOrInitializeService({\n                            instanceIdentifier: normalizedIdentifier\n                        });\n                        if (instance) deferred.resolve(instance);\n                    } catch (e) {\n                    // when the instance factory throws an exception during get(), it should not cause\n                    // a fatal error. We just return the unresolved promise in this case.\n                    }\n                }\n                return this.instancesDeferred.get(normalizedIdentifier).promise;\n            }\n        },\n        {\n            key: \"getImmediate\",\n            value: function getImmediate(options) {\n                var _a;\n                // if multipleInstances is not supported, use the default name\n                var normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\n                var optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\n                if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) try {\n                    return this.getOrInitializeService({\n                        instanceIdentifier: normalizedIdentifier\n                    });\n                } catch (e) {\n                    if (optional) return null;\n                    else throw e;\n                }\n                else {\n                    // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n                    if (optional) return null;\n                    else throw Error(\"Service \".concat(this.name, \" is not available\"));\n                }\n            }\n        },\n        {\n            key: \"getComponent\",\n            value: function getComponent() {\n                return this.component;\n            }\n        },\n        {\n            key: \"setComponent\",\n            value: function setComponent(component) {\n                if (component.name !== this.name) throw Error(\"Mismatching Component \".concat(component.name, \" for Provider \").concat(this.name, \".\"));\n                if (this.component) throw Error(\"Component for \".concat(this.name, \" has already been provided\"));\n                this.component = component;\n                // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n                if (!this.shouldAutoInitialize()) return;\n                // if the service is eager, initialize the default instance\n                if ($4d80d01579d5bd6a$var$isComponentEager(component)) try {\n                    this.getOrInitializeService({\n                        instanceIdentifier: $4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME\n                    });\n                } catch (e) {\n                // when the instance factory for an eager Component throws an exception during the eager\n                // initialization, it should not cause a fatal error.\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\n                // a fatal error in this case?\n                }\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    // Create service instances for the pending promises and resolve them\n                    // NOTE: if this.multipleInstances is false, only the default instance will be created\n                    // and all promises with resolve with it regardless of the identifier.\n                    for(var _iterator = this.instancesDeferred.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _step_value = (0, $fGQt0._)(_step.value, 2), instanceIdentifier = _step_value[0], instanceDeferred = _step_value[1];\n                        var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n                        try {\n                            // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n                            var instance = this.getOrInitializeService({\n                                instanceIdentifier: normalizedIdentifier\n                            });\n                            instanceDeferred.resolve(instance);\n                        } catch (e) {\n                        // when the instance factory throws an exception, it should not cause\n                        // a fatal error. We just leave the promise unresolved.\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"clearInstance\",\n            value: function clearInstance() {\n                var identifier = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : $4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME;\n                this.instancesDeferred.delete(identifier);\n                this.instancesOptions.delete(identifier);\n                this.instances.delete(identifier);\n            }\n        },\n        {\n            key: \"delete\",\n            value: // app.delete() will call this method on every provider to delete the services\n            // TODO: should we mark the provider as deleted?\n            function _delete() {\n                var _this = this;\n                return (0, $i7mVp._)(function() {\n                    var services;\n                    return (0, $4tSb9.__generator)(this, function(_state) {\n                        switch(_state.label){\n                            case 0:\n                                services = Array.from(_this.instances.values());\n                                return [\n                                    4,\n                                    Promise.all((0, $aYXpI._)(services.filter(function(service) {\n                                        return \"INTERNAL\" in service;\n                                    }) // legacy services\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    .map(function(service) {\n                                        return service.INTERNAL.delete();\n                                    })).concat((0, $aYXpI._)(services.filter(function(service) {\n                                        return \"_delete\" in service;\n                                    }) // modularized services\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    .map(function(service) {\n                                        return service._delete();\n                                    }))))\n                                ];\n                            case 1:\n                                _state.sent();\n                                return [\n                                    2\n                                ];\n                        }\n                    });\n                })();\n            }\n        },\n        {\n            key: \"isComponentSet\",\n            value: function isComponentSet() {\n                return this.component != null;\n            }\n        },\n        {\n            key: \"isInitialized\",\n            value: function isInitialized() {\n                var identifier = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : $4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME;\n                return this.instances.has(identifier);\n            }\n        },\n        {\n            key: \"getOptions\",\n            value: function getOptions() {\n                var identifier = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : $4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME;\n                return this.instancesOptions.get(identifier) || {};\n            }\n        },\n        {\n            key: \"initialize\",\n            value: function initialize() {\n                var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n                var _opts_options = opts.options, options = _opts_options === void 0 ? {} : _opts_options;\n                var normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\n                if (this.isInitialized(normalizedIdentifier)) throw Error(\"\".concat(this.name, \"(\").concat(normalizedIdentifier, \") has already been initialized\"));\n                if (!this.isComponentSet()) throw Error(\"Component \".concat(this.name, \" has not been registered yet\"));\n                var instance = this.getOrInitializeService({\n                    instanceIdentifier: normalizedIdentifier,\n                    options: options\n                });\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    // resolve any pending promise waiting for the service instance\n                    for(var _iterator = this.instancesDeferred.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _step_value = (0, $fGQt0._)(_step.value, 2), instanceIdentifier = _step_value[0], instanceDeferred = _step_value[1];\n                        var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n                        if (normalizedIdentifier === normalizedDeferredIdentifier) instanceDeferred.resolve(instance);\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return instance;\n            }\n        },\n        {\n            /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */ key: \"onInit\",\n            value: function onInit(callback, identifier) {\n                var _a;\n                var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n                var existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\n                existingCallbacks.add(callback);\n                this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n                var existingInstance = this.instances.get(normalizedIdentifier);\n                if (existingInstance) callback(existingInstance, normalizedIdentifier);\n                return function() {\n                    existingCallbacks.delete(callback);\n                };\n            }\n        },\n        {\n            /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */ key: \"invokeOnInitCallbacks\",\n            value: function invokeOnInitCallbacks(instance, identifier) {\n                var callbacks = this.onInitCallbacks.get(identifier);\n                if (!callbacks) return;\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = callbacks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var callback = _step.value;\n                        try {\n                            callback(instance, identifier);\n                        } catch (_a) {\n                        // ignore errors in the onInit callback\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"getOrInitializeService\",\n            value: function getOrInitializeService(param) {\n                var instanceIdentifier = param.instanceIdentifier, _param_options = param.options, options = _param_options === void 0 ? {} : _param_options;\n                var instance = this.instances.get(instanceIdentifier);\n                if (!instance && this.component) {\n                    instance = this.component.instanceFactory(this.container, {\n                        instanceIdentifier: $4d80d01579d5bd6a$var$normalizeIdentifierForFactory(instanceIdentifier),\n                        options: options\n                    });\n                    this.instances.set(instanceIdentifier, instance);\n                    this.instancesOptions.set(instanceIdentifier, options);\n                    /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */ this.invokeOnInitCallbacks(instance, instanceIdentifier);\n                    /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */ if (this.component.onInstanceCreated) try {\n                        this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\n                    } catch (_a) {\n                    // ignore errors in the onInstanceCreatedCallback\n                    }\n                }\n                return instance || null;\n            }\n        },\n        {\n            key: \"normalizeInstanceIdentifier\",\n            value: function normalizeInstanceIdentifier() {\n                var identifier = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : $4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME;\n                if (this.component) return this.component.multipleInstances ? identifier : $4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME;\n                else return identifier; // assume multiple instances are supported before the component is provided.\n            }\n        },\n        {\n            key: \"shouldAutoInitialize\",\n            value: function shouldAutoInitialize() {\n                return !!this.component && this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */ ;\n            }\n        }\n    ]);\n    return Provider;\n}();\n// undefined should be passed to the service factory for the default instance\nfunction $4d80d01579d5bd6a$var$normalizeIdentifierForFactory(identifier) {\n    return identifier === $4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\nfunction $4d80d01579d5bd6a$var$isComponentEager(component) {\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */ ;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */ var $4d80d01579d5bd6a$export$436a80eea5d5c0c5 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ComponentContainer(name) {\n        (0, $juqrk._)(this, ComponentContainer);\n        this.name = name;\n        this.providers = new Map();\n    }\n    (0, $bNI6E._)(ComponentContainer, [\n        {\n            /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */ key: \"addComponent\",\n            value: function addComponent(component) {\n                var provider = this.getProvider(component.name);\n                if (provider.isComponentSet()) throw new Error(\"Component \".concat(component.name, \" has already been registered with \").concat(this.name));\n                provider.setComponent(component);\n            }\n        },\n        {\n            key: \"addOrOverwriteComponent\",\n            value: function addOrOverwriteComponent(component) {\n                var provider = this.getProvider(component.name);\n                if (provider.isComponentSet()) // delete the existing provider from the container, so we can register the new component\n                this.providers.delete(component.name);\n                this.addComponent(component);\n            }\n        },\n        {\n            /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */ key: \"getProvider\",\n            value: function getProvider(name) {\n                if (this.providers.has(name)) return this.providers.get(name);\n                // create a Provider for a service that hasn't registered with Firebase\n                var provider = new $4d80d01579d5bd6a$export$2881499e37b75b9a(name, this);\n                this.providers.set(name, provider);\n                return provider;\n            }\n        },\n        {\n            key: \"getProviders\",\n            value: function getProviders() {\n                return Array.from(this.providers.values());\n            }\n        }\n    ]);\n    return ComponentContainer;\n}();\n\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A container for all of the Logger instances\r\n */ \nvar $juqrk = parcelRequire(\"juqrk\");\n\nvar $bNI6E = parcelRequire(\"bNI6E\");\n\n\nvar $aYXpI = parcelRequire(\"aYXpI\");\nvar $f4758df7279d6c6a$var$instances = [];\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */ var $f4758df7279d6c6a$export$243e62d78d3b544d;\n(function(LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n})($f4758df7279d6c6a$export$243e62d78d3b544d || ($f4758df7279d6c6a$export$243e62d78d3b544d = {}));\nvar $f4758df7279d6c6a$var$levelStringToEnum = {\n    \"debug\": $f4758df7279d6c6a$export$243e62d78d3b544d.DEBUG,\n    \"verbose\": $f4758df7279d6c6a$export$243e62d78d3b544d.VERBOSE,\n    \"info\": $f4758df7279d6c6a$export$243e62d78d3b544d.INFO,\n    \"warn\": $f4758df7279d6c6a$export$243e62d78d3b544d.WARN,\n    \"error\": $f4758df7279d6c6a$export$243e62d78d3b544d.ERROR,\n    \"silent\": $f4758df7279d6c6a$export$243e62d78d3b544d.SILENT\n};\n/**\r\n * The default log level\r\n */ var $f4758df7279d6c6a$var$defaultLogLevel = $f4758df7279d6c6a$export$243e62d78d3b544d.INFO;\nvar $f4758df7279d6c6a$var$_obj;\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */ var $f4758df7279d6c6a$var$ConsoleMethod = ($f4758df7279d6c6a$var$_obj = {}, (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($f4758df7279d6c6a$var$_obj, $f4758df7279d6c6a$export$243e62d78d3b544d.DEBUG, \"log\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($f4758df7279d6c6a$var$_obj, $f4758df7279d6c6a$export$243e62d78d3b544d.VERBOSE, \"log\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($f4758df7279d6c6a$var$_obj, $f4758df7279d6c6a$export$243e62d78d3b544d.INFO, \"info\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($f4758df7279d6c6a$var$_obj, $f4758df7279d6c6a$export$243e62d78d3b544d.WARN, \"warn\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($f4758df7279d6c6a$var$_obj, $f4758df7279d6c6a$export$243e62d78d3b544d.ERROR, \"error\"), $f4758df7279d6c6a$var$_obj);\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */ var $f4758df7279d6c6a$var$defaultLogHandler = function(instance, logType) {\n    for(var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++){\n        args[_key - 2] = arguments[_key];\n    }\n    var _console;\n    if (logType < instance.logLevel) return;\n    var now = new Date().toISOString();\n    var method = $f4758df7279d6c6a$var$ConsoleMethod[logType];\n    if (method) (_console = console)[method].apply(_console, [\n        \"[\".concat(now, \"]  \").concat(instance.name, \":\")\n    ].concat((0, $aYXpI._)(args)));\n    else throw new Error(\"Attempted to log a message with an invalid logType (value: \".concat(logType, \")\"));\n};\nvar $f4758df7279d6c6a$export$efa9a398d6368992 = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Logger(name) {\n        (0, $juqrk._)(this, Logger);\n        this.name = name;\n        /**\r\n         * The log level of the given Logger instance.\r\n         */ this._logLevel = $f4758df7279d6c6a$var$defaultLogLevel;\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */ this._logHandler = $f4758df7279d6c6a$var$defaultLogHandler;\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */ this._userLogHandler = null;\n        /**\r\n         * Capture the current instance for later use\r\n         */ $f4758df7279d6c6a$var$instances.push(this);\n    }\n    (0, $bNI6E._)(Logger, [\n        {\n            key: \"logLevel\",\n            get: function get() {\n                return this._logLevel;\n            },\n            set: function set(val) {\n                if (!(val in $f4758df7279d6c6a$export$243e62d78d3b544d)) throw new TypeError('Invalid value \"'.concat(val, '\" assigned to `logLevel`'));\n                this._logLevel = val;\n            }\n        },\n        {\n            // Workaround for setter/getter having to be the same type.\n            key: \"setLogLevel\",\n            value: function setLogLevel(val) {\n                this._logLevel = typeof val === \"string\" ? $f4758df7279d6c6a$var$levelStringToEnum[val] : val;\n            }\n        },\n        {\n            key: \"logHandler\",\n            get: function get() {\n                return this._logHandler;\n            },\n            set: function set(val) {\n                if (typeof val !== \"function\") throw new TypeError(\"Value assigned to `logHandler` must be a function\");\n                this._logHandler = val;\n            }\n        },\n        {\n            key: \"userLogHandler\",\n            get: function get() {\n                return this._userLogHandler;\n            },\n            set: function set(val) {\n                this._userLogHandler = val;\n            }\n        },\n        {\n            /**\r\n     * The functions below are all based on the `console` interface\r\n     */ key: \"debug\",\n            value: function debug() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                this._userLogHandler && this._userLogHandler.apply(this, [\n                    this,\n                    $f4758df7279d6c6a$export$243e62d78d3b544d.DEBUG\n                ].concat((0, $aYXpI._)(args)));\n                this._logHandler.apply(this, [\n                    this,\n                    $f4758df7279d6c6a$export$243e62d78d3b544d.DEBUG\n                ].concat((0, $aYXpI._)(args)));\n            }\n        },\n        {\n            key: \"log\",\n            value: function log() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                this._userLogHandler && this._userLogHandler.apply(this, [\n                    this,\n                    $f4758df7279d6c6a$export$243e62d78d3b544d.VERBOSE\n                ].concat((0, $aYXpI._)(args)));\n                this._logHandler.apply(this, [\n                    this,\n                    $f4758df7279d6c6a$export$243e62d78d3b544d.VERBOSE\n                ].concat((0, $aYXpI._)(args)));\n            }\n        },\n        {\n            key: \"info\",\n            value: function info() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                this._userLogHandler && this._userLogHandler.apply(this, [\n                    this,\n                    $f4758df7279d6c6a$export$243e62d78d3b544d.INFO\n                ].concat((0, $aYXpI._)(args)));\n                this._logHandler.apply(this, [\n                    this,\n                    $f4758df7279d6c6a$export$243e62d78d3b544d.INFO\n                ].concat((0, $aYXpI._)(args)));\n            }\n        },\n        {\n            key: \"warn\",\n            value: function warn() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                this._userLogHandler && this._userLogHandler.apply(this, [\n                    this,\n                    $f4758df7279d6c6a$export$243e62d78d3b544d.WARN\n                ].concat((0, $aYXpI._)(args)));\n                this._logHandler.apply(this, [\n                    this,\n                    $f4758df7279d6c6a$export$243e62d78d3b544d.WARN\n                ].concat((0, $aYXpI._)(args)));\n            }\n        },\n        {\n            key: \"error\",\n            value: function error() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                this._userLogHandler && this._userLogHandler.apply(this, [\n                    this,\n                    $f4758df7279d6c6a$export$243e62d78d3b544d.ERROR\n                ].concat((0, $aYXpI._)(args)));\n                this._logHandler.apply(this, [\n                    this,\n                    $f4758df7279d6c6a$export$243e62d78d3b544d.ERROR\n                ].concat((0, $aYXpI._)(args)));\n            }\n        }\n    ]);\n    return Logger;\n}();\nfunction $f4758df7279d6c6a$export$c622e99c0ce7b1c9(level) {\n    $f4758df7279d6c6a$var$instances.forEach(function(inst) {\n        inst.setLogLevel(level);\n    });\n}\nfunction $f4758df7279d6c6a$export$29577d29c84db5f6(logCallback, options) {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        var _loop = function() {\n            var instance = _step.value;\n            var customLogLevel = null;\n            if (options && options.level) customLogLevel = $f4758df7279d6c6a$var$levelStringToEnum[options.level];\n            if (logCallback === null) instance.userLogHandler = null;\n            else instance.userLogHandler = function(instance, level) {\n                for(var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++){\n                    args[_key - 2] = arguments[_key];\n                }\n                var message = args.map(function(arg) {\n                    if (arg == null) return null;\n                    else if (typeof arg === \"string\") return arg;\n                    else if (typeof arg === \"number\" || typeof arg === \"boolean\") return arg.toString();\n                    else if (arg instanceof Error) return arg.message;\n                    else try {\n                        return JSON.stringify(arg);\n                    } catch (ignored) {\n                        return null;\n                    }\n                }).filter(function(arg) {\n                    return arg;\n                }).join(\" \");\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) logCallback({\n                    level: $f4758df7279d6c6a$export$243e62d78d3b544d[level].toLowerCase(),\n                    message: message,\n                    args: args,\n                    type: instance.name\n                });\n            };\n        };\n        for(var _iterator = $f4758df7279d6c6a$var$instances[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\n\n\n\n\nvar $i7mVp = parcelRequire(\"i7mVp\");\n\nfunction $1928e6784807450d$export$581ff339ea0ba762(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n        ownKeys.forEach(function(key) {\n            (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)(target, key, source[key]);\n        });\n    }\n    return target;\n}\n\n\nfunction $e9c86d2b5cf5c1d2$var$ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction $e9c86d2b5cf5c1d2$export$4fa2f4023c9cbda5(target, source) {\n    source = source != null ? source : {};\n    if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    else $e9c86d2b5cf5c1d2$var$ownKeys(Object(source)).forEach(function(key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n    return target;\n}\n\n\n\nvar $aYXpI = parcelRequire(\"aYXpI\");\n\nvar $4tSb9 = parcelRequire(\"4tSb9\");\n\nvar $aYXpI = parcelRequire(\"aYXpI\");\nvar $f1bf9542bc9ee5ed$export$23f2a1d2818174ef = function(object, constructors) {\n    return constructors.some(function(c) {\n        return object instanceof c;\n    });\n};\nvar $f1bf9542bc9ee5ed$var$idbProxyableTypes;\nvar $f1bf9542bc9ee5ed$var$cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction $f1bf9542bc9ee5ed$var$getIdbProxyableTypes() {\n    return $f1bf9542bc9ee5ed$var$idbProxyableTypes || ($f1bf9542bc9ee5ed$var$idbProxyableTypes = [\n        IDBDatabase,\n        IDBObjectStore,\n        IDBIndex,\n        IDBCursor,\n        IDBTransaction\n    ]);\n}\n// This is a function to prevent it throwing up in node environments.\nfunction $f1bf9542bc9ee5ed$var$getCursorAdvanceMethods() {\n    return $f1bf9542bc9ee5ed$var$cursorAdvanceMethods || ($f1bf9542bc9ee5ed$var$cursorAdvanceMethods = [\n        IDBCursor.prototype.advance,\n        IDBCursor.prototype.continue,\n        IDBCursor.prototype.continuePrimaryKey\n    ]);\n}\nvar $f1bf9542bc9ee5ed$var$cursorRequestMap = new WeakMap();\nvar $f1bf9542bc9ee5ed$var$transactionDoneMap = new WeakMap();\nvar $f1bf9542bc9ee5ed$var$transactionStoreNamesMap = new WeakMap();\nvar $f1bf9542bc9ee5ed$var$transformCache = new WeakMap();\nvar $f1bf9542bc9ee5ed$export$407448d2b89b1813 = new WeakMap();\nfunction $f1bf9542bc9ee5ed$var$promisifyRequest(request) {\n    var promise = new Promise(function(resolve, reject) {\n        var unlisten = function() {\n            request.removeEventListener(\"success\", success);\n            request.removeEventListener(\"error\", error);\n        };\n        var success = function() {\n            resolve($f1bf9542bc9ee5ed$export$efccba1c4a2ef57b(request.result));\n            unlisten();\n        };\n        var error = function() {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener(\"success\", success);\n        request.addEventListener(\"error\", error);\n    });\n    promise.then(function(value) {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) $f1bf9542bc9ee5ed$var$cursorRequestMap.set(value, request);\n    // Catching to avoid \"Uncaught Promise exceptions\"\n    }).catch(function() {});\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    $f1bf9542bc9ee5ed$export$407448d2b89b1813.set(promise, request);\n    return promise;\n}\nfunction $f1bf9542bc9ee5ed$var$cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if ($f1bf9542bc9ee5ed$var$transactionDoneMap.has(tx)) return;\n    var done = new Promise(function(resolve, reject) {\n        var unlisten = function() {\n            tx.removeEventListener(\"complete\", complete);\n            tx.removeEventListener(\"error\", error);\n            tx.removeEventListener(\"abort\", error);\n        };\n        var complete = function() {\n            resolve();\n            unlisten();\n        };\n        var error = function() {\n            reject(tx.error || new DOMException(\"AbortError\", \"AbortError\"));\n            unlisten();\n        };\n        tx.addEventListener(\"complete\", complete);\n        tx.addEventListener(\"error\", error);\n        tx.addEventListener(\"abort\", error);\n    });\n    // Cache it for later retrieval.\n    $f1bf9542bc9ee5ed$var$transactionDoneMap.set(tx, done);\n}\nvar $f1bf9542bc9ee5ed$var$idbProxyTraps = {\n    get: function(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === \"done\") return $f1bf9542bc9ee5ed$var$transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === \"objectStoreNames\") return target.objectStoreNames || $f1bf9542bc9ee5ed$var$transactionStoreNamesMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === \"store\") return receiver.objectStoreNames[1] ? undefined : receiver.objectStore(receiver.objectStoreNames[0]);\n        }\n        // Else transform whatever we get back.\n        return $f1bf9542bc9ee5ed$export$efccba1c4a2ef57b(target[prop]);\n    },\n    set: function(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has: function(target, prop) {\n        if (target instanceof IDBTransaction && (prop === \"done\" || prop === \"store\")) return true;\n        return prop in target;\n    }\n};\nfunction $f1bf9542bc9ee5ed$export$43caf9889c228507(callback) {\n    $f1bf9542bc9ee5ed$var$idbProxyTraps = callback($f1bf9542bc9ee5ed$var$idbProxyTraps);\n}\nfunction $f1bf9542bc9ee5ed$var$wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction && !(\"objectStoreNames\" in IDBTransaction.prototype)) return function(storeNames) {\n        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n            args[_key - 1] = arguments[_key];\n        }\n        var _func;\n        var tx = (_func = func).call.apply(_func, [\n            $f1bf9542bc9ee5ed$export$3b14a55fb2447963(this),\n            storeNames\n        ].concat((0, $aYXpI._)(args)));\n        $f1bf9542bc9ee5ed$var$transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [\n            storeNames\n        ]);\n        return $f1bf9542bc9ee5ed$export$efccba1c4a2ef57b(tx);\n    };\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if ($f1bf9542bc9ee5ed$var$getCursorAdvanceMethods().includes(func)) return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        func.apply($f1bf9542bc9ee5ed$export$3b14a55fb2447963(this), args);\n        return $f1bf9542bc9ee5ed$export$efccba1c4a2ef57b($f1bf9542bc9ee5ed$var$cursorRequestMap.get(this));\n    };\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return $f1bf9542bc9ee5ed$export$efccba1c4a2ef57b(func.apply($f1bf9542bc9ee5ed$export$3b14a55fb2447963(this), args));\n    };\n}\nfunction $f1bf9542bc9ee5ed$var$transformCachableValue(value) {\n    if (typeof value === \"function\") return $f1bf9542bc9ee5ed$var$wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction) $f1bf9542bc9ee5ed$var$cacheDonePromiseForTransaction(value);\n    if ($f1bf9542bc9ee5ed$export$23f2a1d2818174ef(value, $f1bf9542bc9ee5ed$var$getIdbProxyableTypes())) return new Proxy(value, $f1bf9542bc9ee5ed$var$idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction $f1bf9542bc9ee5ed$export$efccba1c4a2ef57b(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest) return $f1bf9542bc9ee5ed$var$promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if ($f1bf9542bc9ee5ed$var$transformCache.has(value)) return $f1bf9542bc9ee5ed$var$transformCache.get(value);\n    var newValue = $f1bf9542bc9ee5ed$var$transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        $f1bf9542bc9ee5ed$var$transformCache.set(value, newValue);\n        $f1bf9542bc9ee5ed$export$407448d2b89b1813.set(newValue, value);\n    }\n    return newValue;\n}\nvar $f1bf9542bc9ee5ed$export$3b14a55fb2447963 = function(value) {\n    return $f1bf9542bc9ee5ed$export$407448d2b89b1813.get(value);\n};\n\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */ function $7818c326be87ea84$export$ca0ed41b1a2af7e(name, version) {\n    var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, blocked = _ref.blocked, upgrade = _ref.upgrade, blocking = _ref.blocking, terminated = _ref.terminated;\n    var request = indexedDB.open(name, version);\n    var openPromise = (0, $f1bf9542bc9ee5ed$export$efccba1c4a2ef57b)(request);\n    if (upgrade) request.addEventListener(\"upgradeneeded\", function(event) {\n        upgrade((0, $f1bf9542bc9ee5ed$export$efccba1c4a2ef57b)(request.result), event.oldVersion, event.newVersion, (0, $f1bf9542bc9ee5ed$export$efccba1c4a2ef57b)(request.transaction), event);\n    });\n    if (blocked) request.addEventListener(\"blocked\", function(event) {\n        return blocked(// Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event);\n    });\n    openPromise.then(function(db) {\n        if (terminated) db.addEventListener(\"close\", function() {\n            return terminated();\n        });\n        if (blocking) db.addEventListener(\"versionchange\", function(event) {\n            return blocking(event.oldVersion, event.newVersion, event);\n        });\n    }).catch(function() {});\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */ function $7818c326be87ea84$export$9d6df0ac66a98bb2(name) {\n    var blocked = (arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}).blocked;\n    var request = indexedDB.deleteDatabase(name);\n    if (blocked) request.addEventListener(\"blocked\", function(event) {\n        return blocked(// Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event);\n    });\n    return (0, $f1bf9542bc9ee5ed$export$efccba1c4a2ef57b)(request).then(function() {\n        return undefined;\n    });\n}\nvar $7818c326be87ea84$var$readMethods = [\n    \"get\",\n    \"getKey\",\n    \"getAll\",\n    \"getAllKeys\",\n    \"count\"\n];\nvar $7818c326be87ea84$var$writeMethods = [\n    \"put\",\n    \"add\",\n    \"delete\",\n    \"clear\"\n];\nvar $7818c326be87ea84$var$cachedMethods = new Map();\nfunction $7818c326be87ea84$var$getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase && !(prop in target) && typeof prop === \"string\")) return;\n    if ($7818c326be87ea84$var$cachedMethods.get(prop)) return $7818c326be87ea84$var$cachedMethods.get(prop);\n    var targetFuncName = prop.replace(/FromIndex$/, \"\");\n    var useIndex = prop !== targetFuncName;\n    var isWrite = $7818c326be87ea84$var$writeMethods.includes(targetFuncName);\n    if (// Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) || !(isWrite || $7818c326be87ea84$var$readMethods.includes(targetFuncName))) return;\n    var method = function() {\n        var _ref = (0, $i7mVp._)(function(storeName) {\n            var _len, args, _key, _target, tx, _$target;\n            var _arguments = arguments;\n            return (0, $4tSb9.__generator)(this, function(_state) {\n                switch(_state.label){\n                    case 0:\n                        for(_len = _arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n                            args[_key - 1] = _arguments[_key];\n                        }\n                        tx = this.transaction(storeName, isWrite ? \"readwrite\" : \"readonly\");\n                        _$target = tx.store;\n                        if (useIndex) _$target = _$target.index(args.shift());\n                        return [\n                            4,\n                            Promise.all([\n                                (_target = _$target)[targetFuncName].apply(_target, (0, $aYXpI._)(args)),\n                                isWrite && tx.done\n                            ])\n                        ];\n                    case 1:\n                        // Must reject if op rejects.\n                        // If it's a write operation, must reject if tx.done rejects.\n                        // Must reject with op rejection first.\n                        // Must resolve with op value.\n                        // Must handle both promises (no unhandled rejections)\n                        return [\n                            2,\n                            _state.sent()[0]\n                        ];\n                }\n            });\n        });\n        return function method(storeName) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    $7818c326be87ea84$var$cachedMethods.set(prop, method);\n    return method;\n}\n(0, $f1bf9542bc9ee5ed$export$43caf9889c228507)(function(oldTraps) {\n    return (0, $e9c86d2b5cf5c1d2$export$4fa2f4023c9cbda5)((0, $1928e6784807450d$export$581ff339ea0ba762)({}, oldTraps), {\n        get: function(target, prop, receiver) {\n            return $7818c326be87ea84$var$getMethod(target, prop) || oldTraps.get(target, prop, receiver);\n        },\n        has: function(target, prop) {\n            return !!$7818c326be87ea84$var$getMethod(target, prop) || oldTraps.has(target, prop);\n        }\n    });\n});\n\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ var $0913f93b5b3c9bac$var$PlatformLoggerServiceImpl = /*#__PURE__*/ function() {\n    \"use strict\";\n    function PlatformLoggerServiceImpl(container) {\n        (0, $juqrk._)(this, PlatformLoggerServiceImpl);\n        this.container = container;\n    }\n    (0, $bNI6E._)(PlatformLoggerServiceImpl, [\n        {\n            // In initial implementation, this will be called by installations on\n            // auth token refresh, and installations will send this string.\n            key: \"getPlatformInfoString\",\n            value: function getPlatformInfoString() {\n                var providers = this.container.getProviders();\n                // Loop through providers and get library/version pairs from any that are\n                // version components.\n                return providers.map(function(provider) {\n                    if ($0913f93b5b3c9bac$var$isVersionServiceProvider(provider)) {\n                        var service = provider.getImmediate();\n                        return \"\".concat(service.library, \"/\").concat(service.version);\n                    } else return null;\n                }).filter(function(logString) {\n                    return logString;\n                }).join(\" \");\n            }\n        }\n    ]);\n    return PlatformLoggerServiceImpl;\n}();\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */ function $0913f93b5b3c9bac$var$isVersionServiceProvider(provider) {\n    var component = provider.getComponent();\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */ ;\n}\nvar $0913f93b5b3c9bac$var$name$o = \"@firebase/app\";\nvar $0913f93b5b3c9bac$var$version$1 = \"0.9.12\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ var $0913f93b5b3c9bac$var$logger = new (0, $f4758df7279d6c6a$export$efa9a398d6368992)(\"@firebase/app\");\nvar $0913f93b5b3c9bac$var$name$n = \"@firebase/app-compat\";\nvar $0913f93b5b3c9bac$var$name$m = \"@firebase/analytics-compat\";\nvar $0913f93b5b3c9bac$var$name$l = \"@firebase/analytics\";\nvar $0913f93b5b3c9bac$var$name$k = \"@firebase/app-check-compat\";\nvar $0913f93b5b3c9bac$var$name$j = \"@firebase/app-check\";\nvar $0913f93b5b3c9bac$var$name$i = \"@firebase/auth\";\nvar $0913f93b5b3c9bac$var$name$h = \"@firebase/auth-compat\";\nvar $0913f93b5b3c9bac$var$name$g = \"@firebase/database\";\nvar $0913f93b5b3c9bac$var$name$f = \"@firebase/database-compat\";\nvar $0913f93b5b3c9bac$var$name$e = \"@firebase/functions\";\nvar $0913f93b5b3c9bac$var$name$d = \"@firebase/functions-compat\";\nvar $0913f93b5b3c9bac$var$name$c = \"@firebase/installations\";\nvar $0913f93b5b3c9bac$var$name$b = \"@firebase/installations-compat\";\nvar $0913f93b5b3c9bac$var$name$a = \"@firebase/messaging\";\nvar $0913f93b5b3c9bac$var$name$9 = \"@firebase/messaging-compat\";\nvar $0913f93b5b3c9bac$var$name$8 = \"@firebase/performance\";\nvar $0913f93b5b3c9bac$var$name$7 = \"@firebase/performance-compat\";\nvar $0913f93b5b3c9bac$var$name$6 = \"@firebase/remote-config\";\nvar $0913f93b5b3c9bac$var$name$5 = \"@firebase/remote-config-compat\";\nvar $0913f93b5b3c9bac$var$name$4 = \"@firebase/storage\";\nvar $0913f93b5b3c9bac$var$name$3 = \"@firebase/storage-compat\";\nvar $0913f93b5b3c9bac$var$name$2 = \"@firebase/firestore\";\nvar $0913f93b5b3c9bac$var$name$1 = \"@firebase/firestore-compat\";\nvar $0913f93b5b3c9bac$var$name = \"firebase\";\nvar $0913f93b5b3c9bac$var$version = \"9.22.2\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The default app name\r\n *\r\n * @internal\r\n */ var $0913f93b5b3c9bac$export$9f30fa0c10967f7f = \"[DEFAULT]\";\nvar $0913f93b5b3c9bac$var$_obj;\nvar $0913f93b5b3c9bac$var$PLATFORM_LOG_STRING = ($0913f93b5b3c9bac$var$_obj = {}, (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$o, \"fire-core\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$n, \"fire-core-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$l, \"fire-analytics\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$m, \"fire-analytics-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$j, \"fire-app-check\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$k, \"fire-app-check-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$i, \"fire-auth\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$h, \"fire-auth-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$g, \"fire-rtdb\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$f, \"fire-rtdb-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$e, \"fire-fn\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$d, \"fire-fn-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$c, \"fire-iid\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$b, \"fire-iid-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$a, \"fire-fcm\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$9, \"fire-fcm-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$8, \"fire-perf\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$7, \"fire-perf-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$6, \"fire-rc\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$5, \"fire-rc-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$4, \"fire-gcs\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$3, \"fire-gcs-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$2, \"fire-fst\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name$1, \"fire-fst-compat\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, \"fire-js\", \"fire-js\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj, $0913f93b5b3c9bac$var$name, \"fire-js-all\"), $0913f93b5b3c9bac$var$_obj);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @internal\r\n */ var $0913f93b5b3c9bac$export$b4e3c36c855b14b5 = new Map();\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar $0913f93b5b3c9bac$export$9566bce3835c0f28 = new Map();\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */ function $0913f93b5b3c9bac$export$fa5244b94c62d36a(app, component) {\n    try {\n        app.container.addComponent(component);\n    } catch (e) {\n        $0913f93b5b3c9bac$var$logger.debug(\"Component \".concat(component.name, \" failed to register with FirebaseApp \").concat(app.name), e);\n    }\n}\n/**\r\n *\r\n * @internal\r\n */ function $0913f93b5b3c9bac$export$4393112b42e2b41d(app, component) {\n    app.container.addOrOverwriteComponent(component);\n}\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */ function $0913f93b5b3c9bac$export$c930050e7bb63965(component) {\n    var componentName = component.name;\n    if ($0913f93b5b3c9bac$export$9566bce3835c0f28.has(componentName)) {\n        $0913f93b5b3c9bac$var$logger.debug(\"There were multiple attempts to register component \".concat(componentName, \".\"));\n        return false;\n    }\n    $0913f93b5b3c9bac$export$9566bce3835c0f28.set(componentName, component);\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        // add the component to existing app instances\n        for(var _iterator = $0913f93b5b3c9bac$export$b4e3c36c855b14b5.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var app = _step.value;\n            $0913f93b5b3c9bac$export$fa5244b94c62d36a(app, component);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return true;\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */ function $0913f93b5b3c9bac$export$fa0d6da0f5838f50(app, name) {\n    var heartbeatController = app.container.getProvider(\"heartbeat\").getImmediate({\n        optional: true\n    });\n    if (heartbeatController) heartbeatController.triggerHeartbeat();\n    return app.container.getProvider(name);\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */ function $0913f93b5b3c9bac$export$48d18de2ff1c45a5(app, name) {\n    var instanceIdentifier = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : $0913f93b5b3c9bac$export$9f30fa0c10967f7f;\n    $0913f93b5b3c9bac$export$fa0d6da0f5838f50(app, name).clearInstance(instanceIdentifier);\n}\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */ function $0913f93b5b3c9bac$export$3685d89b9c3cdfaf() {\n    $0913f93b5b3c9bac$export$9566bce3835c0f28.clear();\n}\nvar $0913f93b5b3c9bac$var$_obj1;\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ var $0913f93b5b3c9bac$var$ERRORS = ($0913f93b5b3c9bac$var$_obj1 = {}, (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj1, \"no-app\" /* AppError.NO_APP */ , \"No Firebase App '{$appName}' has been created - call initializeApp() first\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj1, \"bad-app-name\" /* AppError.BAD_APP_NAME */ , \"Illegal App name: '{$appName}\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj1, \"duplicate-app\" /* AppError.DUPLICATE_APP */ , \"Firebase App named '{$appName}' already exists with different options or config\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj1, \"app-deleted\" /* AppError.APP_DELETED */ , \"Firebase App named '{$appName}' already deleted\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj1, \"no-options\" /* AppError.NO_OPTIONS */ , \"Need to provide options, when not being deployed to hosting via source.\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj1, \"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */ , \"firebase.{$appName}() takes either no argument or a Firebase App instance.\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj1, \"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */ , \"First argument to `onLog` must be null or a function.\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj1, \"idb-open\" /* AppError.IDB_OPEN */ , \"Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj1, \"idb-get\" /* AppError.IDB_GET */ , \"Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj1, \"idb-set\" /* AppError.IDB_WRITE */ , \"Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.\"), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)($0913f93b5b3c9bac$var$_obj1, \"idb-delete\" /* AppError.IDB_DELETE */ , \"Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.\"), $0913f93b5b3c9bac$var$_obj1);\nvar $0913f93b5b3c9bac$var$ERROR_FACTORY = new (0, $1d9d263a787f8021$export$3fa6e1b18a3b2d40)(\"app\", \"Firebase\", $0913f93b5b3c9bac$var$ERRORS);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ var $0913f93b5b3c9bac$var$FirebaseAppImpl = /*#__PURE__*/ function() {\n    \"use strict\";\n    function FirebaseAppImpl(options, config, container) {\n        var _this = this;\n        (0, $juqrk._)(this, FirebaseAppImpl);\n        this._isDeleted = false;\n        this._options = Object.assign({}, options);\n        this._config = Object.assign({}, config);\n        this._name = config.name;\n        this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n        this._container = container;\n        this.container.addComponent(new (0, $4d80d01579d5bd6a$export$16fa2f45be04daa8)(\"app\", function() {\n            return _this;\n        }, \"PUBLIC\" /* ComponentType.PUBLIC */ ));\n    }\n    (0, $bNI6E._)(FirebaseAppImpl, [\n        {\n            key: \"automaticDataCollectionEnabled\",\n            get: function get() {\n                this.checkDestroyed();\n                return this._automaticDataCollectionEnabled;\n            },\n            set: function set(val) {\n                this.checkDestroyed();\n                this._automaticDataCollectionEnabled = val;\n            }\n        },\n        {\n            key: \"name\",\n            get: function get() {\n                this.checkDestroyed();\n                return this._name;\n            }\n        },\n        {\n            key: \"options\",\n            get: function get() {\n                this.checkDestroyed();\n                return this._options;\n            }\n        },\n        {\n            key: \"config\",\n            get: function get() {\n                this.checkDestroyed();\n                return this._config;\n            }\n        },\n        {\n            key: \"container\",\n            get: function get() {\n                return this._container;\n            }\n        },\n        {\n            key: \"isDeleted\",\n            get: function get() {\n                return this._isDeleted;\n            },\n            set: function set(val) {\n                this._isDeleted = val;\n            }\n        },\n        {\n            /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */ key: \"checkDestroyed\",\n            value: function checkDestroyed() {\n                if (this.isDeleted) throw $0913f93b5b3c9bac$var$ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */ , {\n                    appName: this._name\n                });\n            }\n        }\n    ]);\n    return FirebaseAppImpl;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */ var $0913f93b5b3c9bac$export$31499a9cd224b78c = $0913f93b5b3c9bac$var$version;\nfunction $0913f93b5b3c9bac$export$c55cfd413944906d(_options) {\n    var rawConfig = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    var options = _options;\n    if (typeof rawConfig !== \"object\") {\n        var name = rawConfig;\n        rawConfig = {\n            name: name\n        };\n    }\n    var config = Object.assign({\n        name: $0913f93b5b3c9bac$export$9f30fa0c10967f7f,\n        automaticDataCollectionEnabled: false\n    }, rawConfig);\n    var name1 = config.name;\n    if (typeof name1 !== \"string\" || !name1) throw $0913f93b5b3c9bac$var$ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */ , {\n        appName: String(name1)\n    });\n    options || (options = (0, $1d9d263a787f8021$export$3dfb6827a9f89756)());\n    if (!options) throw $0913f93b5b3c9bac$var$ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */ );\n    var existingApp = $0913f93b5b3c9bac$export$b4e3c36c855b14b5.get(name1);\n    if (existingApp) {\n        // return the existing app if options and config deep equal the ones in the existing app.\n        if ((0, $1d9d263a787f8021$export$9cb4719e2e525b7a)(options, existingApp.options) && (0, $1d9d263a787f8021$export$9cb4719e2e525b7a)(config, existingApp.config)) return existingApp;\n        else throw $0913f93b5b3c9bac$var$ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */ , {\n            appName: name1\n        });\n    }\n    var container = new (0, $4d80d01579d5bd6a$export$436a80eea5d5c0c5)(name1);\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = $0913f93b5b3c9bac$export$9566bce3835c0f28.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var component = _step.value;\n            container.addComponent(component);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var newApp = new $0913f93b5b3c9bac$var$FirebaseAppImpl(options, config, container);\n    $0913f93b5b3c9bac$export$b4e3c36c855b14b5.set(name1, newApp);\n    return newApp;\n}\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */ function $0913f93b5b3c9bac$export$f9962582c9e66d99() {\n    var name = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : $0913f93b5b3c9bac$export$9f30fa0c10967f7f;\n    var app = $0913f93b5b3c9bac$export$b4e3c36c855b14b5.get(name);\n    if (!app && name === $0913f93b5b3c9bac$export$9f30fa0c10967f7f && (0, $1d9d263a787f8021$export$3dfb6827a9f89756)()) return $0913f93b5b3c9bac$export$c55cfd413944906d();\n    if (!app) throw $0913f93b5b3c9bac$var$ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */ , {\n        appName: name\n    });\n    return app;\n}\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */ function $0913f93b5b3c9bac$export$68ddedf7d44b3bdf() {\n    return Array.from($0913f93b5b3c9bac$export$b4e3c36c855b14b5.values());\n}\nfunction $0913f93b5b3c9bac$export$6eec44aa53d5ea34(app) {\n    return $0913f93b5b3c9bac$var$_deleteApp.apply(this, arguments);\n}\nfunction $0913f93b5b3c9bac$var$_deleteApp() {\n    $0913f93b5b3c9bac$var$_deleteApp = /**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */ (0, $i7mVp._)(function(app) {\n        var name;\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    name = app.name;\n                    if (!$0913f93b5b3c9bac$export$b4e3c36c855b14b5.has(name)) return [\n                        3,\n                        2\n                    ];\n                    $0913f93b5b3c9bac$export$b4e3c36c855b14b5.delete(name);\n                    return [\n                        4,\n                        Promise.all(app.container.getProviders().map(function(provider) {\n                            return provider.delete();\n                        }))\n                    ];\n                case 1:\n                    _state.sent();\n                    app.isDeleted = true;\n                    _state.label = 2;\n                case 2:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return $0913f93b5b3c9bac$var$_deleteApp.apply(this, arguments);\n}\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */ function $0913f93b5b3c9bac$export$d29d5299a7137abc(libraryKeyOrName, version, variant) {\n    var _a;\n    // TODO: We can use this check to whitelist strings when/if we set up\n    // a good whitelist system.\n    var library = (_a = $0913f93b5b3c9bac$var$PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n    if (variant) library += \"-\".concat(variant);\n    var libraryMismatch = library.match(/\\s|\\//);\n    var versionMismatch = version.match(/\\s|\\//);\n    if (libraryMismatch || versionMismatch) {\n        var warning = [\n            'Unable to register library \"'.concat(library, '\" with version \"').concat(version, '\":')\n        ];\n        if (libraryMismatch) warning.push('library name \"'.concat(library, '\" contains illegal characters (whitespace or \"/\")'));\n        if (libraryMismatch && versionMismatch) warning.push(\"and\");\n        if (versionMismatch) warning.push('version name \"'.concat(version, '\" contains illegal characters (whitespace or \"/\")'));\n        $0913f93b5b3c9bac$var$logger.warn(warning.join(\" \"));\n        return;\n    }\n    $0913f93b5b3c9bac$export$c930050e7bb63965(new (0, $4d80d01579d5bd6a$export$16fa2f45be04daa8)(\"\".concat(library, \"-version\"), function() {\n        return {\n            library: library,\n            version: version\n        };\n    }, \"VERSION\" /* ComponentType.VERSION */ ));\n}\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */ function $0913f93b5b3c9bac$export$a82ad227dc8163dc(logCallback, options) {\n    if (logCallback !== null && typeof logCallback !== \"function\") throw $0913f93b5b3c9bac$var$ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */ );\n    (0, $f4758df7279d6c6a$export$29577d29c84db5f6)(logCallback, options);\n}\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */ function $0913f93b5b3c9bac$export$c622e99c0ce7b1c9(logLevel) {\n    (0, $f4758df7279d6c6a$export$c622e99c0ce7b1c9)(logLevel);\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ var $0913f93b5b3c9bac$var$DB_NAME = \"firebase-heartbeat-database\";\nvar $0913f93b5b3c9bac$var$DB_VERSION = 1;\nvar $0913f93b5b3c9bac$var$STORE_NAME = \"firebase-heartbeat-store\";\nvar $0913f93b5b3c9bac$var$dbPromise = null;\nfunction $0913f93b5b3c9bac$var$getDbPromise() {\n    if (!$0913f93b5b3c9bac$var$dbPromise) $0913f93b5b3c9bac$var$dbPromise = (0, $7818c326be87ea84$export$ca0ed41b1a2af7e)($0913f93b5b3c9bac$var$DB_NAME, $0913f93b5b3c9bac$var$DB_VERSION, {\n        upgrade: function(db, oldVersion) {\n            // We don't use 'break' in this switch statement, the fall-through\n            // behavior is what we want, because if there are multiple versions between\n            // the old version and the current version, we want ALL the migrations\n            // that correspond to those versions to run, not only the last one.\n            // eslint-disable-next-line default-case\n            switch(oldVersion){\n                case 0:\n                    db.createObjectStore($0913f93b5b3c9bac$var$STORE_NAME);\n            }\n        }\n    }).catch(function(e) {\n        throw $0913f93b5b3c9bac$var$ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */ , {\n            originalErrorMessage: e.message\n        });\n    });\n    return $0913f93b5b3c9bac$var$dbPromise;\n}\nfunction $0913f93b5b3c9bac$var$readHeartbeatsFromIndexedDB(app) {\n    return $0913f93b5b3c9bac$var$_readHeartbeatsFromIndexedDB.apply(this, arguments);\n}\nfunction $0913f93b5b3c9bac$var$_readHeartbeatsFromIndexedDB() {\n    $0913f93b5b3c9bac$var$_readHeartbeatsFromIndexedDB = (0, $i7mVp._)(function(app) {\n        var db, result, e, idbGetError;\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    _state.trys.push([\n                        0,\n                        3,\n                        ,\n                        4\n                    ]);\n                    return [\n                        4,\n                        $0913f93b5b3c9bac$var$getDbPromise()\n                    ];\n                case 1:\n                    db = _state.sent();\n                    return [\n                        4,\n                        db.transaction($0913f93b5b3c9bac$var$STORE_NAME).objectStore($0913f93b5b3c9bac$var$STORE_NAME).get($0913f93b5b3c9bac$var$computeKey(app))\n                    ];\n                case 2:\n                    result = _state.sent();\n                    return [\n                        2,\n                        result\n                    ];\n                case 3:\n                    e = _state.sent();\n                    if (e instanceof (0, $1d9d263a787f8021$export$dd24e9cd51226c56)) $0913f93b5b3c9bac$var$logger.warn(e.message);\n                    else {\n                        idbGetError = $0913f93b5b3c9bac$var$ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */ , {\n                            originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n                        });\n                        $0913f93b5b3c9bac$var$logger.warn(idbGetError.message);\n                    }\n                    return [\n                        3,\n                        4\n                    ];\n                case 4:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return $0913f93b5b3c9bac$var$_readHeartbeatsFromIndexedDB.apply(this, arguments);\n}\nfunction $0913f93b5b3c9bac$var$writeHeartbeatsToIndexedDB(app, heartbeatObject) {\n    return $0913f93b5b3c9bac$var$_writeHeartbeatsToIndexedDB.apply(this, arguments);\n}\nfunction $0913f93b5b3c9bac$var$_writeHeartbeatsToIndexedDB() {\n    $0913f93b5b3c9bac$var$_writeHeartbeatsToIndexedDB = (0, $i7mVp._)(function(app, heartbeatObject) {\n        var db, tx, objectStore, e, idbGetError;\n        return (0, $4tSb9.__generator)(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    _state.trys.push([\n                        0,\n                        4,\n                        ,\n                        5\n                    ]);\n                    return [\n                        4,\n                        $0913f93b5b3c9bac$var$getDbPromise()\n                    ];\n                case 1:\n                    db = _state.sent();\n                    tx = db.transaction($0913f93b5b3c9bac$var$STORE_NAME, \"readwrite\");\n                    objectStore = tx.objectStore($0913f93b5b3c9bac$var$STORE_NAME);\n                    return [\n                        4,\n                        objectStore.put(heartbeatObject, $0913f93b5b3c9bac$var$computeKey(app))\n                    ];\n                case 2:\n                    _state.sent();\n                    return [\n                        4,\n                        tx.done\n                    ];\n                case 3:\n                    _state.sent();\n                    return [\n                        3,\n                        5\n                    ];\n                case 4:\n                    e = _state.sent();\n                    if (e instanceof (0, $1d9d263a787f8021$export$dd24e9cd51226c56)) $0913f93b5b3c9bac$var$logger.warn(e.message);\n                    else {\n                        idbGetError = $0913f93b5b3c9bac$var$ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */ , {\n                            originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n                        });\n                        $0913f93b5b3c9bac$var$logger.warn(idbGetError.message);\n                    }\n                    return [\n                        3,\n                        5\n                    ];\n                case 5:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return $0913f93b5b3c9bac$var$_writeHeartbeatsToIndexedDB.apply(this, arguments);\n}\nfunction $0913f93b5b3c9bac$var$computeKey(app) {\n    return \"\".concat(app.name, \"!\").concat(app.options.appId);\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ var $0913f93b5b3c9bac$var$MAX_HEADER_BYTES = 1024;\n// 30 days\nvar $0913f93b5b3c9bac$var$STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 2592000000;\nvar $0913f93b5b3c9bac$var$HeartbeatServiceImpl = /*#__PURE__*/ function() {\n    \"use strict\";\n    function HeartbeatServiceImpl(container) {\n        var _this = this;\n        (0, $juqrk._)(this, HeartbeatServiceImpl);\n        this.container = container;\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */ this._heartbeatsCache = null;\n        var app = this.container.getProvider(\"app\").getImmediate();\n        this._storage = new $0913f93b5b3c9bac$var$HeartbeatStorageImpl(app);\n        this._heartbeatsCachePromise = this._storage.read().then(function(result) {\n            _this._heartbeatsCache = result;\n            return result;\n        });\n    }\n    (0, $bNI6E._)(HeartbeatServiceImpl, [\n        {\n            key: \"triggerHeartbeat\",\n            value: /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */ function triggerHeartbeat() {\n                var _this = this;\n                return (0, $i7mVp._)(function() {\n                    var platformLogger, agent, date;\n                    return (0, $4tSb9.__generator)(this, function(_state) {\n                        switch(_state.label){\n                            case 0:\n                                platformLogger = _this.container.getProvider(\"platform-logger\").getImmediate();\n                                agent = platformLogger.getPlatformInfoString();\n                                date = $0913f93b5b3c9bac$var$getUTCDateString();\n                                if (!(_this._heartbeatsCache === null)) return [\n                                    3,\n                                    2\n                                ];\n                                return [\n                                    4,\n                                    _this._heartbeatsCachePromise\n                                ];\n                            case 1:\n                                _this._heartbeatsCache = _state.sent();\n                                _state.label = 2;\n                            case 2:\n                                // Do not store a heartbeat if one is already stored for this day\n                                // or if a header has already been sent today.\n                                if (_this._heartbeatsCache.lastSentHeartbeatDate === date || _this._heartbeatsCache.heartbeats.some(function(singleDateHeartbeat) {\n                                    return singleDateHeartbeat.date === date;\n                                })) return [\n                                    2\n                                ];\n                                else // There is no entry for this date. Create one.\n                                _this._heartbeatsCache.heartbeats.push({\n                                    date: date,\n                                    agent: agent\n                                });\n                                // Remove entries older than 30 days.\n                                _this._heartbeatsCache.heartbeats = _this._heartbeatsCache.heartbeats.filter(function(singleDateHeartbeat) {\n                                    var hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n                                    var now = Date.now();\n                                    return now - hbTimestamp <= $0913f93b5b3c9bac$var$STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n                                });\n                                return [\n                                    2,\n                                    _this._storage.overwrite(_this._heartbeatsCache)\n                                ];\n                        }\n                    });\n                })();\n            }\n        },\n        {\n            key: \"getHeartbeatsHeader\",\n            value: /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */ function getHeartbeatsHeader() {\n                var _this = this;\n                return (0, $i7mVp._)(function() {\n                    var date, _extractHeartbeatsForHeader, heartbeatsToSend, unsentEntries, headerString;\n                    return (0, $4tSb9.__generator)(this, function(_state) {\n                        switch(_state.label){\n                            case 0:\n                                if (!(_this._heartbeatsCache === null)) return [\n                                    3,\n                                    2\n                                ];\n                                return [\n                                    4,\n                                    _this._heartbeatsCachePromise\n                                ];\n                            case 1:\n                                _state.sent();\n                                _state.label = 2;\n                            case 2:\n                                // If it's still null or the array is empty, there is no data to send.\n                                if (_this._heartbeatsCache === null || _this._heartbeatsCache.heartbeats.length === 0) return [\n                                    2,\n                                    \"\"\n                                ];\n                                date = $0913f93b5b3c9bac$var$getUTCDateString();\n                                _extractHeartbeatsForHeader = $0913f93b5b3c9bac$var$extractHeartbeatsForHeader(_this._heartbeatsCache.heartbeats), heartbeatsToSend = _extractHeartbeatsForHeader.heartbeatsToSend, unsentEntries = _extractHeartbeatsForHeader.unsentEntries;\n                                headerString = (0, $1d9d263a787f8021$export$4b5284a3025a455)(JSON.stringify({\n                                    version: 2,\n                                    heartbeats: heartbeatsToSend\n                                }));\n                                // Store last sent date to prevent another being logged/sent for the same day.\n                                _this._heartbeatsCache.lastSentHeartbeatDate = date;\n                                if (!(unsentEntries.length > 0)) return [\n                                    3,\n                                    4\n                                ];\n                                // Store any unsent entries if they exist.\n                                _this._heartbeatsCache.heartbeats = unsentEntries;\n                                // This seems more likely than emptying the array (below) to lead to some odd state\n                                // since the cache isn't empty and this will be called again on the next request,\n                                // and is probably safest if we await it.\n                                return [\n                                    4,\n                                    _this._storage.overwrite(_this._heartbeatsCache)\n                                ];\n                            case 3:\n                                _state.sent();\n                                return [\n                                    3,\n                                    5\n                                ];\n                            case 4:\n                                _this._heartbeatsCache.heartbeats = [];\n                                _this._storage.overwrite(_this._heartbeatsCache);\n                                _state.label = 5;\n                            case 5:\n                                return [\n                                    2,\n                                    headerString\n                                ];\n                        }\n                    });\n                })();\n            }\n        }\n    ]);\n    return HeartbeatServiceImpl;\n}();\nfunction $0913f93b5b3c9bac$var$getUTCDateString() {\n    var today = new Date();\n    // Returns date format 'YYYY-MM-DD'\n    return today.toISOString().substring(0, 10);\n}\nfunction $0913f93b5b3c9bac$var$extractHeartbeatsForHeader(heartbeatsCache) {\n    var maxSize = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : $0913f93b5b3c9bac$var$MAX_HEADER_BYTES;\n    // Heartbeats grouped by user agent in the standard format to be sent in\n    // the header.\n    var heartbeatsToSend = [];\n    // Single date format heartbeats that are not sent.\n    var unsentEntries = heartbeatsCache.slice();\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        var _loop = function() {\n            var singleDateHeartbeat = _step.value;\n            // Look for an existing entry with the same user agent.\n            var heartbeatEntry = heartbeatsToSend.find(function(hb) {\n                return hb.agent === singleDateHeartbeat.agent;\n            });\n            if (!heartbeatEntry) {\n                // If no entry for this user agent exists, create one.\n                heartbeatsToSend.push({\n                    agent: singleDateHeartbeat.agent,\n                    dates: [\n                        singleDateHeartbeat.date\n                    ]\n                });\n                if ($0913f93b5b3c9bac$var$countBytes(heartbeatsToSend) > maxSize) {\n                    // If the header would exceed max size, remove the added heartbeat\n                    // entry and stop adding to the header.\n                    heartbeatsToSend.pop();\n                    return \"break\";\n                }\n            } else {\n                heartbeatEntry.dates.push(singleDateHeartbeat.date);\n                // If the header would exceed max size, remove the added date\n                // and stop adding to the header.\n                if ($0913f93b5b3c9bac$var$countBytes(heartbeatsToSend) > maxSize) {\n                    heartbeatEntry.dates.pop();\n                    return \"break\";\n                }\n            }\n            // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n            // quota and the loop breaks early.)\n            unsentEntries = unsentEntries.slice(1);\n        };\n        for(var _iterator = heartbeatsCache[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var _ret = _loop();\n            if (_ret === \"break\") break;\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return {\n        heartbeatsToSend: heartbeatsToSend,\n        unsentEntries: unsentEntries\n    };\n}\nvar $0913f93b5b3c9bac$var$HeartbeatStorageImpl = /*#__PURE__*/ function() {\n    \"use strict\";\n    function HeartbeatStorageImpl(app) {\n        (0, $juqrk._)(this, HeartbeatStorageImpl);\n        this.app = app;\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n    }\n    (0, $bNI6E._)(HeartbeatStorageImpl, [\n        {\n            key: \"runIndexedDBEnvironmentCheck\",\n            value: function runIndexedDBEnvironmentCheck() {\n                return (0, $i7mVp._)(function() {\n                    return (0, $4tSb9.__generator)(this, function(_state) {\n                        if (!(0, $1d9d263a787f8021$export$3865db50535c2055)()) return [\n                            2,\n                            false\n                        ];\n                        else return [\n                            2,\n                            (0, $1d9d263a787f8021$export$a8a3018f3d187a4d)().then(function() {\n                                return true;\n                            }).catch(function() {\n                                return false;\n                            })\n                        ];\n                        return [\n                            2\n                        ];\n                    });\n                })();\n            }\n        },\n        {\n            key: \"read\",\n            value: /**\r\n     * Read all heartbeats.\r\n     */ function read() {\n                var _this = this;\n                return (0, $i7mVp._)(function() {\n                    var canUseIndexedDB, idbHeartbeatObject;\n                    return (0, $4tSb9.__generator)(this, function(_state) {\n                        switch(_state.label){\n                            case 0:\n                                return [\n                                    4,\n                                    _this._canUseIndexedDBPromise\n                                ];\n                            case 1:\n                                canUseIndexedDB = _state.sent();\n                                if (!!canUseIndexedDB) return [\n                                    3,\n                                    2\n                                ];\n                                return [\n                                    2,\n                                    {\n                                        heartbeats: []\n                                    }\n                                ];\n                            case 2:\n                                return [\n                                    4,\n                                    $0913f93b5b3c9bac$var$readHeartbeatsFromIndexedDB(_this.app)\n                                ];\n                            case 3:\n                                idbHeartbeatObject = _state.sent();\n                                return [\n                                    2,\n                                    idbHeartbeatObject || {\n                                        heartbeats: []\n                                    }\n                                ];\n                            case 4:\n                                return [\n                                    2\n                                ];\n                        }\n                    });\n                })();\n            }\n        },\n        {\n            key: \"overwrite\",\n            value: // overwrite the storage with the provided heartbeats\n            function overwrite(heartbeatsObject) {\n                var _this = this;\n                return (0, $i7mVp._)(function() {\n                    var _a, canUseIndexedDB, existingHeartbeatsObject;\n                    return (0, $4tSb9.__generator)(this, function(_state) {\n                        switch(_state.label){\n                            case 0:\n                                return [\n                                    4,\n                                    _this._canUseIndexedDBPromise\n                                ];\n                            case 1:\n                                canUseIndexedDB = _state.sent();\n                                if (!!canUseIndexedDB) return [\n                                    3,\n                                    2\n                                ];\n                                return [\n                                    2\n                                ];\n                            case 2:\n                                return [\n                                    4,\n                                    _this.read()\n                                ];\n                            case 3:\n                                existingHeartbeatsObject = _state.sent();\n                                return [\n                                    2,\n                                    $0913f93b5b3c9bac$var$writeHeartbeatsToIndexedDB(_this.app, {\n                                        lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n                                        heartbeats: heartbeatsObject.heartbeats\n                                    })\n                                ];\n                            case 4:\n                                return [\n                                    2\n                                ];\n                        }\n                    });\n                })();\n            }\n        },\n        {\n            key: \"add\",\n            value: // add heartbeats\n            function add(heartbeatsObject) {\n                var _this = this;\n                return (0, $i7mVp._)(function() {\n                    var _a, canUseIndexedDB, existingHeartbeatsObject;\n                    return (0, $4tSb9.__generator)(this, function(_state) {\n                        switch(_state.label){\n                            case 0:\n                                return [\n                                    4,\n                                    _this._canUseIndexedDBPromise\n                                ];\n                            case 1:\n                                canUseIndexedDB = _state.sent();\n                                if (!!canUseIndexedDB) return [\n                                    3,\n                                    2\n                                ];\n                                return [\n                                    2\n                                ];\n                            case 2:\n                                return [\n                                    4,\n                                    _this.read()\n                                ];\n                            case 3:\n                                existingHeartbeatsObject = _state.sent();\n                                return [\n                                    2,\n                                    $0913f93b5b3c9bac$var$writeHeartbeatsToIndexedDB(_this.app, {\n                                        lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n                                        heartbeats: (0, $aYXpI._)(existingHeartbeatsObject.heartbeats).concat((0, $aYXpI._)(heartbeatsObject.heartbeats))\n                                    })\n                                ];\n                            case 4:\n                                return [\n                                    2\n                                ];\n                        }\n                    });\n                })();\n            }\n        }\n    ]);\n    return HeartbeatStorageImpl;\n}();\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */ function $0913f93b5b3c9bac$var$countBytes(heartbeatsCache) {\n    // base64 has a restricted set of characters, all of which should be 1 byte.\n    return (0, $1d9d263a787f8021$export$4b5284a3025a455)(// heartbeatsCache wrapper properties\n    JSON.stringify({\n        version: 2,\n        heartbeats: heartbeatsCache\n    })).length;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ function $0913f93b5b3c9bac$var$registerCoreComponents(variant) {\n    $0913f93b5b3c9bac$export$c930050e7bb63965(new (0, $4d80d01579d5bd6a$export$16fa2f45be04daa8)(\"platform-logger\", function(container) {\n        return new $0913f93b5b3c9bac$var$PlatformLoggerServiceImpl(container);\n    }, \"PRIVATE\" /* ComponentType.PRIVATE */ ));\n    $0913f93b5b3c9bac$export$c930050e7bb63965(new (0, $4d80d01579d5bd6a$export$16fa2f45be04daa8)(\"heartbeat\", function(container) {\n        return new $0913f93b5b3c9bac$var$HeartbeatServiceImpl(container);\n    }, \"PRIVATE\" /* ComponentType.PRIVATE */ ));\n    // Register `app` package.\n    $0913f93b5b3c9bac$export$d29d5299a7137abc($0913f93b5b3c9bac$var$name$o, $0913f93b5b3c9bac$var$version$1, variant);\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n    $0913f93b5b3c9bac$export$d29d5299a7137abc($0913f93b5b3c9bac$var$name$o, $0913f93b5b3c9bac$var$version$1, \"esm2017\");\n    // Register platform SDK identifier (no version).\n    $0913f93b5b3c9bac$export$d29d5299a7137abc(\"fire-js\", \"\");\n}\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */ $0913f93b5b3c9bac$var$registerCoreComponents(\"\");\n\n\nvar $b29ef28f0d58131e$var$name = \"firebase\";\nvar $b29ef28f0d58131e$var$version = \"9.22.2\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ (0, $0913f93b5b3c9bac$export$d29d5299a7137abc)($b29ef28f0d58131e$var$name, $b29ef28f0d58131e$var$version, \"app\");\n\n\nfunction $adb131cf76d9a6b5$export$2e2bcd8739ae039() {\n    return importFirebase().then(function(firebase) {\n        // Собственно инициализция firebase. Обычно что-то вроде этого:\n        var app = firebase.initializeApp({});\n    // возвращаем реально используемые интерфейсы:\n    });\n}\n\n\n\n})();\n//# sourceMappingURL=group.d161e515.js.map\n","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","import './js/API-service';\n\nimport './js/header';\nimport './js/sponsors-list';\nimport './js/book-categories';\nimport './js/bestsellers';\nimport './js/book-categories-rendering';\n\nimport './js/modal-book-card';\nimport './js/modal-login-form';\nimport './js/modal-mobile-menu';\n\n\nimport './js/toggleTheme';\nimport './js/scrollBtn';\n\nimport './js/service-firebase';","import { APIService } from './API-service';\nimport createMarkup from './book-categories-rendering';\n\nconst api = new APIService();\n\nconst categoriesList = document.querySelector('.book-category__list');\n// const bookCollection = document.querySelector('.books-gallery');\n\n\nasync function getBooksCategoryList() {\n    const resp = await api.fetchBooksCategoryList()\n    const data = await resp.data;\n    return data;    \n\n}\n\nasync function getBookCategory() {\n    try {\n        const categories = await getBooksCategoryList();\n        const markup = categories.map((cat) => `<li class=\"book-category__list-item\">${cat.list_name}</li>`).join(\"\");\n        categoriesList.insertAdjacentHTML(\"beforeend\", markup);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nif (categoriesList)\n{\n    getBookCategory();\n\n    categoriesList.addEventListener('click', onCategoryListSearchCategory);\n}\n\nasync function onCategoryListSearchCategory(e) {\n    if (e.target.nodeName !== 'LI') {\n        return;\n    }\n    console.log(e.target);\n    \n    if (e.target.classList.contains('active')) {\n        e.target.classList.remove('active');\n       \n    } else {\n        const items = document.querySelectorAll('.book-category__list-item');\n        items.forEach((el) => el.classList.remove('active'));\n        e.target.classList.add('active');\n       \n    }\n\n    await createMarkup(e.target.textContent);\n}\n\n","import { APIService } from './API-service';\n\n// const BASE_URL_MY =\n//   'https://books-backend.p.goit.global/books/category?category=';\n// const ENDPOINT = 'Series%20Books';\n// const API_KEY = '';\n// let page = 1;\n// const list = document.querySelector('.js-list-rendering');\n// const loadMore = document.querySelector('.js-load_more-rendering');\n\nconst bookCollection = document.querySelector('.books-gallery');\nconst api = new APIService();\n\nexport default async function createMarkup(category) {\n  const res = await api.fetchBooksByCategory(category);\n  const books = await res.data;\n  console.log(books);\n  function collectionMarkup() {\n    return `<h1 class=\"collection-title\">Books</h1>\n    <ul class=\"top-books rendering-gap js-list-rendering\">\n    ${books\n      .map(({ title, book_image, author, _id }) => {\n        return `<li class=\"book-card\" id=\"${_id}\">\n      <img class=\"book-cover\" src=\"${book_image}\" alt=\"${title}\">\n      <h2 class=\"book-name\">${title}</h2>\n      <h3 class=\"book-author\">${author}</h3>\n  </li>`;\n      })\n      .join('')}\n    </ul>`;\n  }\n  bookCollection.innerHTML = collectionMarkup();\n}\n\n// const collectionMarkup = books\n//     .map(({ title, book_image, author, _id }) => {\n//       return `<li class=\"book-card \" id=\"${_id}\">\n//       <img class=\"book-cover\" src=\"${book_image}\" alt=\"${title}\">\n//       <h2 class=\"book-name\">${title}</h2>\n//       <h3 class=\"book-author\">${author}</h3>\n//   </li>`;\n//     })\n//     .join('');\n//   bookCollection.innerHTML = collectionMarkup;\n\n// loadMore.addEventListener('click', handlerPagination);\n\n// servisBook()\n//   .then(data => {\n//     list.insertAdjacentHTML('beforeend', createMarkup(data));\n//   })\n//   .catch(err => console.log(err));\n\n// function createMarkup(arr) {\n//   return arr\n//     .map(\n//       ({\n//         title,\n//         book_image,\n//         author,\n//         _id,\n//       }) => `<li class=\"flex-element\" id=\"${_id}\">\n//       <img src=\"${book_image}\" alt=\"${title}\">\n//       <h2>${title}</h2>\n//       <p>${author}</p>\n//   </li>`\n//     )\n//     .join('');\n// }\n","import { APIService } from './API-service';\n\nconst api = new APIService();\n\nconst bookCollection = document.querySelector('.books-collection');\n\nasync function getBestSellers() {\n  const response = await api.fetchBestSellersBooks();\n  const bestSellers = await response.data;\n  return bestSellers;\n}\n\nfunction createBookCategoryMarkup(category) {\n  return `\n    <li class=\"book-category-item\">\n      <p class=\"book-category\">${category.list_name}</p>\n      <ul class=\"top-books js-list-rendering\">\n        ${category.books\n          .map(book => {\n            return `\n              <li class=\"book-card flex-element\" id=${book._id}>\n                <img class=\"book-cover\" src=\"${book.book_image}\" alt=\"${book.title}\" />\n                <h2 class=\"book-name\">${book.title}</h2>\n                <h3 class=\"book-author\">${book.author}</h3>\n              </li>\n            `;\n          })\n          .join('')}\n      </ul>\n      <button class=\"book-card-btn\" type=\"button\">see more</button>\n    </li>\n  `;\n}\n\nasync function renderCategories() {\n  let bookCategories = '';\n  const topBooks = await getBestSellers();\n  console.log(topBooks);\n  for (let category of topBooks) {\n    bookCategories += createBookCategoryMarkup(category);\n  }\n  bookCollection.innerHTML = bookCategories;\n}\n\n\nif (bookCollection) {\n  renderCategories();\n  bookCollection?.addEventListener('click', onSeeMoreBtnClick);\n}\n\n// cutting text\n// const limit = 18;\n//             const text = book.title;\n//             console.log(text);\n//             let cuttedText = text.slice(0, limit);\n\n//             if (text.length > limit) {\n//               cuttedText += '...';\n//             }\nconst titleCollection = document.querySelector('.collection-title')\n\nbookCollection.addEventListener('click', onSeeMoreBtnClick);\n\nasync function onSeeMoreBtnClick(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  const target = e.target;\n  if (target.matches('button[data-category]')) {\n    const category = target.dataset.category;\n    console.log(category);\n\n\n    const res = await api.fetchBooksByCategory(category);\n    const books = await res.data;\n    console.log(books);\n    const collectionMarkup = books.map(({title,\n        book_image,\n        author,\n      _id, }) => {\n      \n      titleCollection.textContent = category;\n      console.log(titleCollection.textContent);\n       return  `<li class=\"flex-element\" id=\"${_id}\">\n      <img src=\"${book_image}\" alt=\"${title}\">\n      <h2>${title}</h2>\n      <p>${author}</p>\n  </li>`\n    })\n    .join('');\n    bookCollection.innerHTML = collectionMarkup;\n  }\n }\n","const allModal = document.querySelector('#allModal'); //\n\n// const bookList = document.querySelector('.js-list-rendering'); // з js Сергія + я додала, що в li додавався id\nconst bookList = document.querySelector('.books-gallery'); // проблема була в назві стилю\nconst addStorageBtn = document.querySelector('.add-storage-button'); //\nconst removeStorageBtn = document.querySelector('.remove-storage-btn'); //\nconst storageDescription = document.querySelector('.storage-info'); //\n\nimport { APIService } from './API-service';\n\nconst apiBook = new APIService();\n\n// імпорт іконок для верстки картки книги в модальному вікні\nimport amazonPng from '../images/amazon-icon1x.png';\nimport amazonPng2x from '../images/amazon-icon2x.png';\nimport appleBookPng from '../images/applebook-icon1x.png';\nimport appleBookPng2x from '../images/applebook-icon2x.png';\nimport bookShopPng from '../images/bookshop-icon1x.png';\nimport bookShopPng2x from '../images/bookshop-icon2x.png';\n\nconst STORAGE_KEY = 'storage-data';\nlet storageArr = [];\nlet storageObj = {};\n\nif (bookList) {\n  addStorageBtn.addEventListener('click', onStorageAdd);\n  removeStorageBtn.addEventListener('click', onStorageDelete);\n  bookList.addEventListener('click', onIdClick);\n}\n\nconst idModal = document.querySelector('.about-book-modal');\nconst idBackdropModal = document.querySelector('.card-backdrop-modal');\n\nfunction openModalId() {\n  idModal.classList.remove('is-hidden');\n  idBackdropModal.classList.remove('is-hidden');\n}\n\nfunction onIdClick(e) {\n  if (\n    e.target.nodeName === 'BUTTON' ||\n    e.target.nodeName === 'UL' ||\n    e.target.nodeName === 'DIV' ||\n    e.target.nodeName === 'H3'\n  )\n    return;\n  const id = e.target.closest('li').id;\n  openModalId();\n  createModal(id);\n}\n\nasync function createModal(bookId) {\n  allModal.innerHTML = '';\n  try {\n    const data = await fetchBookById(bookId);\n    storageCheck();\n    createMarkup(data);\n    return data;\n  } catch (error) {\n    console.error('Error', error);\n    throw error;\n  }\n}\n\nasync function fetchBookById(bookId) {\n  try {\n    storageObj = {};\n    const response = await apiBook.fetchBookInfo(bookId);\n    const data = response.data;\n    storageObj = {\n      book_image: data.book_image,\n      title: data.title,\n      author: data.author,\n      marketAmazon: data.buy_links[0].url,\n      marketAppleBooks: data.buy_links[1].url,\n      marketBookshop: data.buy_links[4].url,\n      list_name: data.list_name,\n      id: data._id,\n      description: data.description,\n    };\n    return data;\n  } catch (error) {\n    console.error('Error', error);\n    throw error;\n  }\n}\n\nfunction storageCheck() {\n  const storageArr = JSON.parse(localStorage.getItem(STORAGE_KEY));\n  const idToFind = storageObj.id;\n\n  if (!storageArr || storageArr.length === 0) {\n    addStorageBtn.style.display = 'block';\n    removeStorageBtn.style.display = 'none';\n    return;\n  } else {\n    const objToFind = storageArr.find(obj => obj.id === idToFind);\n    if (!objToFind) {\n      addStorageBtn.style.display = 'block';\n      removeStorageBtn.style.display = 'none';\n    } else {\n      addStorageBtn.style.display = 'none';\n      removeStorageBtn.style.display = 'block';\n    }\n  }\n}\n\nfunction createMarkup(data) {\n  const bookModalImage = data.book_image;\n  const bookTitle = data.title;\n  const bookAuthor = data.author;\n  const marketAmazon = data.buy_links[0].url;\n  const marketAppleBooks = data.buy_links[1].url;\n  const marketBookshop = data.buy_links[4].url;\n  const bookDescription = data.description;\n  //перевірка на наявність опису книги в api\n  let descriptionMarkup = bookDescription;\n  if (bookDescription === '') {\n    descriptionMarkup =\n      'Unfortunately, a brief description of this book is currently unavailable. But let that not hinder you from opening its pages and immersing yourself in the unforgettable world it creates.';\n  }\n\n  const html = `  \n  <img src=\"${bookModalImage}\" alt=\"Book Image\" class=\"image-about-book-modal\">\n  <div class=\"info-modal\">\n  <h2 class=\"title-about-book-modal\">${bookTitle}</h2>\n  <p class=\"author-about-book-modal\"> ${bookAuthor}</p>\n  <p class=\"text-about-book-modal\">${descriptionMarkup}</p>\n  <ul class=\"shop-modal-list\"> <li class=\"shop-modal-item\"><a href=\"${marketAmazon}\" target=\"_blank\"\n    > <img\n     width=\"62\"\n    height=\"19\"\n    srcset=\"\n    ${amazonPng} 1x,\n    ${amazonPng2x} 2x\n  \"\n   src=\"${amazonPng}\"\n    alt=\"Amazon\"\n  /></a></li>\n  <li class=\"shop-modal-item\"><a href=\"${marketAppleBooks}\" target=\"_blank\"\n    > <img\n    width=\"33\"\n    height=\"32\"\n    srcset=\"\n    ${appleBookPng} 1x,\n    ${appleBookPng2x} 2x\n  \"\n   src=\"${appleBookPng}\"\n    alt=\"AppleBooks\"\n  /></a></li>\n  <li class=\"shop-modal-item\"><a href=\"${marketBookshop}\" target=\"_blank\"\n    > <img\n    width=\"38\"\n    height=\"36\"\n    srcset=\"\n    ${bookShopPng} 1x,\n    ${bookShopPng2x} 2x\n  \"\n   src=\"${bookShopPng}\"\n    alt=\"Book-Shop\"\n  /></a></li>\n</ul>\n</div>\n  `;\n  allModal.innerHTML = html;\n}\n\nfunction onStorageAdd() {\n  const realStorageArr = JSON.parse(localStorage.getItem(STORAGE_KEY));\n  const dataToSave = storageObj;\n  if (!realStorageArr || realStorageArr.length === 0) {\n    storageArr.push(dataToSave);\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(storageArr));\n  } else {\n    realStorageArr.push(dataToSave);\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(realStorageArr));\n  }\n\n  storageDescription.textContent =\n    'Сongratulations! You have added the book to the shopping list. To delete, press the button “Remove from the shopping list”.';\n  storageCheck();\n}\n\nfunction onStorageDelete() {\n  storageDescription.textContent = '';\n\n  const idToDelete = storageObj.id;\n  const storageArr = JSON.parse(localStorage.getItem(STORAGE_KEY));\n  const indexToDelete = storageArr.findIndex(obj => obj.id === idToDelete);\n  storageArr.splice(indexToDelete, 1);\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(storageArr));\n  storageCheck();\n}\n\n// Функція, яка закриває модальне вікно\nconst backdrop = document.querySelector('.card-backdrop-modal');\nconst modal = document.querySelector('.modal');\nconst closeButton = document.getElementById('modal-close');\n\nfunction closeModal() {\n  backdrop.classList.add('is-hidden');\n  modal.classList.add('is-hidden');\n  document.body.classList.remove('modal-open');\n  document.removeEventListener('keydown', closeModalOnEsc);\n}\n\n// Функція, яка закриває модальне вікно при кліку на backdrop\nfunction closeModalOnBackdropClick(event) {\n  if (event.target === backdrop) {\n    closeModal();\n  }\n}\n\n// Функція, яка закриває модальне вікно при кліку на хрестик\nfunction closeModalOnButton() {\n  closeModal();\n}\n\n// Функція, яка закриває модальне вікно при натисканні на ESC\nfunction closeModalOnEsc(event) {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n}\n\nif (modal) {\n  // Додавання обробників подій\n  backdrop.addEventListener('click', closeModalOnBackdropClick);\n  closeButton.addEventListener('click', closeModalOnButton);\n}","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"iz5nZ\");","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"etq4A\");","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"mCCOp\");","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"iZ8qR\");","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"gmnG0\");","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"95GBg\");","// кнопка, що відкриває модальне вікно\nconst btn = document.querySelector('.authorisation-btn');\n\n// модальне вікно\nconst modal = document.querySelector('.modal-login-form');\n\n// хрестик для закриття модального вікна\nconst closeBtn = document.querySelector('.modal-login-form-close-btn');\nconst overlayLoginForm = document.querySelector('.overlayLoginForm');\n\n// Функція приховування модального вікна\nfunction hideModal() {\n  modal.style.display = 'none';\n  overlayLoginForm.style.display = 'none';\n}\n\nif (modal) {\n  // клік відкриває модальне вікно\n  btn.onclick = function () {\n    modal.style.display = 'block';\n    overlayLoginForm.style.display = 'block';\n  };\n\n  // При натисканні на хрестик закриваємо модальне вікно\n  closeBtn.onclick = hideModal;\n\n  // При кліку поза модальним вікном або на бекдропі закриваємо його\n  window.onclick = function (event) {\n    if (event.target === modal || event.target === overlayLoginForm) {\n      hideModal();\n    }\n  };\n\n  // При натисканні кнопки Esc закриваємо модальне вікно\n  window.addEventListener('keydown', function (event) {\n    if (event.key === 'Escape') {\n      hideModal();\n    }\n  });\n}\n","const scrollBtn = {\n    btn: document.querySelector('.scrollBtn'),\n    show() {\n        this.btn.classList.remove('scrollBtn-hide');\n    },\n    hide() {\n        this.btn.classList.add('scrollBtn-hide');\n    },\n    addEventListener() {\n        if (this.btn) {\n            window.addEventListener('scroll', () => {\n                const scrollY = window.scrollY || document.documentElement.scrollTop;\n                scrollY > 100 ? this.show() : this.hide();\n            });\n            this.btn.onclick = () => {\n                window.scrollTo({\n                    top: 0,\n                    behavior: 'smooth'\n                });\n            }\n        }\n    }\n}\nscrollBtn.addEventListener();","import { initializeApp } from 'firebase/app';\n\n\nexport default function firebase() {\n  return importFirebase().then((firebase) => {\n    // Собственно инициализция firebase. Обычно что-то вроде этого:\n    const app = firebase.initializeApp({\n        \n    })\n\n    // возвращаем реально используемые интерфейсы:\n   \n  })\n}\n\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"9.22.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.9.12\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.22.2\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call initializeApp() first',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME);\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const result = await db\r\n            .transaction(STORE_NAME)\r\n            .objectStore(STORE_NAME)\r\n            .get(computeKey(app));\r\n        return result;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        await tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (this._heartbeatsCache === null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (this._heartbeatsCache === null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            return idbHeartbeatObject || { heartbeats: [] };\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const result = await db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app));\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw new DecodeBase64StringError();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * An error encountered while decoding base64 string.\r\n */\r\nclass DecodeBase64StringError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'DecodeBase64StringError';\r\n    }\r\n}\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\r\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\r\nconst getDefaultsFromEnvVariable = () => {\r\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\r\n        return;\r\n    }\r\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\r\n    if (defaultsJsonString) {\r\n        return JSON.parse(defaultsJsonString);\r\n    }\r\n};\r\nconst getDefaultsFromCookie = () => {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    let match;\r\n    try {\r\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\r\n    }\r\n    catch (e) {\r\n        // Some environments such as Angular Universal SSR have a\r\n        // `document` object but error on accessing `document.cookie`.\r\n        return;\r\n    }\r\n    const decoded = match && base64Decode(match[1]);\r\n    return decoded && JSON.parse(decoded);\r\n};\r\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\r\nconst getDefaults = () => {\r\n    try {\r\n        return (getDefaultsFromGlobal() ||\r\n            getDefaultsFromEnvVariable() ||\r\n            getDefaultsFromCookie());\r\n    }\r\n    catch (e) {\r\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */\r\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\r\n        return;\r\n    }\r\n};\r\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHost = (productName) => { var _a, _b; return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName]; };\r\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHostnameAndPort = (productName) => {\r\n    const host = getDefaultEmulatorHost(productName);\r\n    if (!host) {\r\n        return undefined;\r\n    }\r\n    const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\r\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\r\n        throw new Error(`Invalid host ${host} with no separate hostname and port!`);\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\r\n    if (host[0] === '[') {\r\n        // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\r\n        return [host.substring(1, separatorIndex - 1), port];\r\n    }\r\n    else {\r\n        return [host.substring(0, separatorIndex), port];\r\n    }\r\n};\r\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\r\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\r\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */\r\nconst getExperimentalSetting = (name) => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`]; };\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    var _a;\r\n    const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\r\n    if (forceEnvironment === 'node') {\r\n        return true;\r\n    }\r\n    else if (forceEnvironment === 'browser') {\r\n        return false;\r\n    }\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    try {\r\n        return typeof indexedDB === 'object';\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\r\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\r\n    const deferredPromise = new Deferred();\r\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\r\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\r\n    return deferredPromise.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\r\nconst uuidv4 = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, DecodeBase64StringError, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getDefaultAppConfig, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaults, getExperimentalSetting, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, uuidv4, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n * Generates a new uuid.\n * @public\n */\nexport const uuidv4 = function (): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","import { _construct } from \"./_construct.js\";\nimport { _get_prototype_of } from \"./_get_prototype_of.js\";\nimport { _is_native_function } from \"./_is_native_function.js\";\nimport { _set_prototype_of } from \"./_set_prototype_of.js\";\n\nexport function _wrap_native_super(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    _wrap_native_super = function(Class) {\n        if (Class === null || !_is_native_function(Class)) return Class;\n        if (typeof Class !== \"function\") throw new TypeError(\"Super expression must either be null or a function\");\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n\n        function Wrapper() {\n            return _construct(Class, arguments, _get_prototype_of(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });\n\n        return _set_prototype_of(Wrapper, Class);\n    };\n\n    return _wrap_native_super(Class);\n}\nexport { _wrap_native_super as _ };\n","import { _is_native_reflect_construct } from \"./_is_native_reflect_construct.js\";\nimport { _set_prototype_of } from \"./_set_prototype_of.js\";\nexport function _construct(Parent, args, Class) {\n    if (_is_native_reflect_construct()) _construct = Reflect.construct;\n    else {\n        _construct = function construct(Parent, args, Class) {\n            var a = [null];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n\n            if (Class) _set_prototype_of(instance, Class.prototype);\n\n            return instance;\n        };\n    }\n\n    return _construct.apply(null, arguments);\n}\nexport { _construct as _ };\n","export function _is_native_function(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nexport { _is_native_function as _ };\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { _define_property } from \"./_define_property.js\";\n\nexport function _object_spread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(\n                Object.getOwnPropertySymbols(source).filter(function(sym) {\n                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n                })\n            );\n        }\n\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n\n    return target;\n}\nexport { _object_spread as _ };\n","function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n}\nexport function _object_spread_props(target, source) {\n    source = source != null ? source : {};\n\n    if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n\n    return target;\n}\nexport { _object_spread_props as _ };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n"],"names":["$parcel$interopDefault","a","__esModule","default","oldTraps","target","source","LogLevel","$4acf49f6c3e67aec$var$cachedSetTimeout","$4acf49f6c3e67aec$var$cachedClearTimeout","$4acf49f6c3e67aec$var$currentQueue","$f4758df7279d6c6a$export$243e62d78d3b544d","$f4758df7279d6c6a$var$_obj","$f1bf9542bc9ee5ed$var$idbProxyableTypes","$f1bf9542bc9ee5ed$var$cursorAdvanceMethods","$0913f93b5b3c9bac$var$_obj","$0913f93b5b3c9bac$var$_obj1","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","Object","defineProperty","get","$7dd1ddf6834435ca$export$bdfd709ae4826697","set","v","enumerable","configurable","$7dd1ddf6834435ca$var$bundleURL","value","$7dd1ddf6834435ca$var$getBundleURL","matches","stack","match","replace","$i7mVp","$4tSb9","$7SQp7","$11eb9efd788528e0$var$bookCollection","document","querySelector","$11eb9efd788528e0$var$api","APIService","$11eb9efd788528e0$var$_createMarkup","_","category","books","__generator","_state","label","fetchBooksByCategory","res","sent","data","console","log","innerHTML","concat","map","param","title","book_image","author","_id","join","apply","arguments","$f29943a457ca4185$var$api","$f29943a457ca4185$var$categoriesList","$f29943a457ca4185$var$_getBooksCategoryList","fetchBooksCategoryList","resp","$f29943a457ca4185$var$_getBookCategory","markup","trys","push","$f29943a457ca4185$var$getBooksCategoryList","categories","cat","list_name","insertAdjacentHTML","$f29943a457ca4185$var$_onCategoryListSearchCategory","e","nodeName","classList","contains","remove","items","querySelectorAll","forEach","el","add","textContent","$f29943a457ca4185$var$getBookCategory","addEventListener","$a102954a56e30d1d$var$api","$a102954a56e30d1d$var$bookCollection","$a102954a56e30d1d$var$_getBestSellers","fetchBestSellersBooks","response","$a102954a56e30d1d$var$_renderCategories","bookCategories","topBooks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","$a102954a56e30d1d$var$getBestSellers","undefined","Symbol","iterator","next","done","book","return","$a102954a56e30d1d$var$renderCategories","$a102954a56e30d1d$var$onSeeMoreBtnClick","$a102954a56e30d1d$var$titleCollection","$a102954a56e30d1d$var$_onSeeMoreBtnClick","collectionMarkup","dataset","$e10224ce897607e1$exports","getBundleURL","resolve","$fe660a9cef1fd9f7$exports","$b32889c2231bd76a$exports","$b147b9d154975881$exports","$9877f09cd1b7e4f7$exports","$cac8ef1a89390b2f$exports","$1b116471259b6080$var$allModal","$1b116471259b6080$var$bookList","$1b116471259b6080$var$addStorageBtn","$1b116471259b6080$var$removeStorageBtn","$1b116471259b6080$var$storageDescription","$1b116471259b6080$var$apiBook","$1b116471259b6080$var$STORAGE_KEY","$1b116471259b6080$var$storageArr","$1b116471259b6080$var$storageObj","realStorageArr","JSON","parse","localStorage","getItem","dataToSave","length","setItem","stringify","$1b116471259b6080$var$storageCheck","idToDelete","storageArr","indexToDelete","findIndex","obj","splice","closest","$1b116471259b6080$var$idModal","$1b116471259b6080$var$idBackdropModal","$1b116471259b6080$var$createModal","bookId","$1b116471259b6080$var$_createModal","error","$1b116471259b6080$var$fetchBookById","$1b116471259b6080$var$_fetchBookById","bookModalImage","bookTitle","bookAuthor","marketAmazon","marketAppleBooks","marketBookshop","bookDescription","descriptionMarkup","html","buy_links","url","description","fetchBookInfo","idToFind","find","style","display","$1b116471259b6080$var$backdrop","$1b116471259b6080$var$modal","$1b116471259b6080$var$closeButton","getElementById","$1b116471259b6080$var$closeModal","body","removeEventListener","$1b116471259b6080$var$closeModalOnEsc","event","key","$7ccb93ad7dccd8b1$var$btn","$7ccb93ad7dccd8b1$var$modal","$7ccb93ad7dccd8b1$var$closeBtn","$7ccb93ad7dccd8b1$var$overlayLoginForm","$7ccb93ad7dccd8b1$var$hideModal","onclick","$2fd3538c1b9e29a1$var$scrollBtn","btn","show","hide","_this","scrollY","documentElement","scrollTop","scrollTo","top","behavior","$juqrk","$bNI6E","$a568c0d5880c90ba$export$1e71eb4bef00f6b0","writable","$aYXpI","$fGQt0","$cquyX","$jqfyu","$8ZYwq","$3A6Ss","$2537243cab6b0016$export$2d841144c5f8c4ab","Parent","args","Class","_is_native_reflect_construct","Reflect","construct","instance","Function","bind","_set_prototype_of","prototype","$5yT7U","$c96ca6cb05cc1798$export$2466d533fda16e33","_cache","Map","toString","indexOf","TypeError","has","Wrapper","_get_prototype_of","constructor","create","$50zho","$4acf49f6c3e67aec$var$process","$4acf49f6c3e67aec$var$defaultSetTimout","$4acf49f6c3e67aec$var$defaultClearTimeout","$4acf49f6c3e67aec$var$runTimeout","fun","setTimeout","clearTimeout","$4acf49f6c3e67aec$var$queue","$4acf49f6c3e67aec$var$draining","$4acf49f6c3e67aec$var$queueIndex","$4acf49f6c3e67aec$var$cleanUpNextTick","$4acf49f6c3e67aec$var$drainQueue","timeout","len","run","$4acf49f6c3e67aec$var$runClearTimeout","marker","$4acf49f6c3e67aec$var$Item","array","$4acf49f6c3e67aec$var$noop","nextTick","Array","i","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$1d9d263a787f8021$var$stringToByteArray$1","str","out","p","c","charCodeAt","$1d9d263a787f8021$var$byteArrayToString","bytes","pos","c1","String","fromCharCode","c2","u","c21","c3","c4","c22","c31","$1d9d263a787f8021$export$b3b2de96497acc47","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","isArray","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","charAt","byte4","haveByte4","$1d9d263a787f8021$export$55ca9d4bee46aeb3","Error1","DecodeBase64StringError","_super","slice","$1d9d263a787f8021$export$e510a73ee562749","utf8Bytes","$1d9d263a787f8021$export$4b5284a3025a455","$1d9d263a787f8021$export$dd24e9cd51226c56","FirebaseError","message","customData","setPrototypeOf","captureStackTrace","$1d9d263a787f8021$export$3fa6e1b18a3b2d40","ErrorFactory","service","serviceName","errors","_len","_key","fullCode","template","$1d9d263a787f8021$var$PATTERN","fullMessage","$4d80d01579d5bd6a$export$16fa2f45be04daa8","Component","instanceFactory","type","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","mode","props","callback","$f4758df7279d6c6a$var$instances","$f4758df7279d6c6a$var$levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","$f4758df7279d6c6a$var$defaultLogLevel","$f4758df7279d6c6a$var$ConsoleMethod","$f4758df7279d6c6a$var$defaultLogHandler","logType","_console","logLevel","now","Date","toISOString","method","$f4758df7279d6c6a$export$efa9a398d6368992","Logger","_logLevel","_logHandler","_userLogHandler","val","$f1bf9542bc9ee5ed$var$cursorRequestMap","WeakMap","$f1bf9542bc9ee5ed$var$transactionDoneMap","$f1bf9542bc9ee5ed$var$transactionStoreNamesMap","$f1bf9542bc9ee5ed$var$transformCache","$f1bf9542bc9ee5ed$export$407448d2b89b1813","$f1bf9542bc9ee5ed$var$idbProxyTraps","prop","receiver","IDBTransaction","objectStoreNames","objectStore","$f1bf9542bc9ee5ed$export$efccba1c4a2ef57b","IDBRequest","promise","Promise","reject","unlisten","request","success","result","then","IDBCursor","catch","newValue","func","IDBDatabase","transaction","$f1bf9542bc9ee5ed$var$getCursorAdvanceMethods","advance","continue","continuePrimaryKey","includes","$f1bf9542bc9ee5ed$export$3b14a55fb2447963","storeNames","tx","sort","$f1bf9542bc9ee5ed$var$cacheDonePromiseForTransaction","complete","DOMException","constructors","IDBObjectStore","IDBIndex","some","object","Proxy","$7818c326be87ea84$var$readMethods","$7818c326be87ea84$var$writeMethods","$7818c326be87ea84$var$cachedMethods","$7818c326be87ea84$var$getMethod","targetFuncName","useIndex","isWrite","_ref","storeName","_target","_$target","_arguments","store","index","shift","all","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","$e9c86d2b5cf5c1d2$var$ownKeys","enumerableOnly","symbols","$0913f93b5b3c9bac$var$PlatformLoggerServiceImpl","PlatformLoggerServiceImpl","container","providers","getProviders","provider","component","getComponent","getImmediate","library","logString","$0913f93b5b3c9bac$var$name$o","$0913f93b5b3c9bac$var$version$1","$0913f93b5b3c9bac$var$logger","$0913f93b5b3c9bac$var$PLATFORM_LOG_STRING","$0913f93b5b3c9bac$export$b4e3c36c855b14b5","$0913f93b5b3c9bac$export$9566bce3835c0f28","$0913f93b5b3c9bac$export$c930050e7bb63965","componentName","debug","values","app","$0913f93b5b3c9bac$export$fa5244b94c62d36a","addComponent","$0913f93b5b3c9bac$var$ERRORS","$0913f93b5b3c9bac$var$ERROR_FACTORY","$0913f93b5b3c9bac$export$d29d5299a7137abc","libraryKeyOrName","variant","_a","libraryMismatch","versionMismatch","warning","warn","$0913f93b5b3c9bac$var$STORE_NAME","$0913f93b5b3c9bac$var$dbPromise","$0913f93b5b3c9bac$var$getDbPromise","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","oldVersion","newVersion","db","createObjectStore","originalErrorMessage","$0913f93b5b3c9bac$var$_readHeartbeatsFromIndexedDB","idbGetError","$0913f93b5b3c9bac$var$computeKey","$0913f93b5b3c9bac$var$writeHeartbeatsToIndexedDB","heartbeatObject","$0913f93b5b3c9bac$var$_writeHeartbeatsToIndexedDB","put","options","appId","$0913f93b5b3c9bac$var$HeartbeatServiceImpl","HeartbeatServiceImpl","_heartbeatsCache","getProvider","_storage","$0913f93b5b3c9bac$var$HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","date","platformLogger","getPlatformInfoString","$0913f93b5b3c9bac$var$getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","_extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","$0913f93b5b3c9bac$var$extractHeartbeatsForHeader","heartbeatsCache","maxSize","_ret","_loop","heartbeatEntry","hb","dates","$0913f93b5b3c9bac$var$countBytes","pop","today","substring","HeartbeatStorageImpl","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","$0913f93b5b3c9bac$var$readHeartbeatsFromIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","appName","appCompatName","analyticsName","analyticsCompatName","appCheckName","appCheckCompatName","authName","authCompatName","databaseName","databaseCompatName","functionsName","functionsCompatName","installationsName","installationsCompatName","messagingName","messagingCompatName","performanceName","performanceCompatName","remoteConfigName","remoteConfigCompatName","storageName","storageCompatName","firestoreName","firestoreCompatName","packageName","setLogLevelImpl","stringToByteArray"],"version":3,"file":"group.d161e515.js.map"}